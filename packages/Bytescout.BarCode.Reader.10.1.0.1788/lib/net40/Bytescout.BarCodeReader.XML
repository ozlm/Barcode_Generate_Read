<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bytescout.BarCodeReader</name>
    </assembly>
    <members>
        <member name="T:BarcodeReader.Core.Common.EncodingUtils">
            <summary>
            Guess encoding by bytes
            </summary>
        </member>
        <member name="F:BarcodeReader.Core.Common.EncodingUtils.SHIFT_JIS">
            <summary>
            SJIS
            </summary>
        </member>
        <member name="F:BarcodeReader.Core.Common.EncodingUtils.GB2312">
            <summary>
            GB2312
            </summary>
        </member>
        <member name="M:BarcodeReader.Core.Common.EncodingUtils.GuessEncoding(System.Byte[])">
            <summary>
            Guesses the encoding.
            </summary>
            <param name="bytes">bytes encoding a string, whose encoding should be guessed</param>
            <param name="hints">decode hints if applicable</param>
            <returns>name of guessed encoding; at the moment will only guess one of:
            {@link #SHIFT_JIS}, {@link #UTF8}, {@link #ISO88591}, or the platform
            default encoding if none of these can possibly be correct</returns>
        </member>
        <member name="T:BarcodeReader.Core.Common.ArrayComparer">
            <summary>
            Compares two arrays to see if the values inside of the array are the same. This is
            dependent on the type contained in the array having a valid Equals() override.
            </summary>
            <typeparam name="T">The type of data stored in the array</typeparam>
        </member>
        <member name="M:BarcodeReader.Core.Common.ArrayComparer.GetHashCode(System.Int32[])">
            <summary>
            Gets the hash code for the contents of the array since the default hash code
            for an array is unique even if the contents are the same.
            </summary>
            <remarks>
            See Jon Skeet (C# MVP) response in the StackOverflow thread 
            http://stackoverflow.com/questions/263400/what-is-the-best-algorithm-for-an-overridden-system-object-gethashcode
            </remarks>
            <param name="array">The array to generate a hash code for.</param>
            <returns>The hash code for the values in the array.</returns>
        </member>
        <member name="M:BarcodeReader.Core.Common.ArrayComparer.Equals(System.Int32[],System.Int32[])">
            <summary>
            Compares the contents of both arrays to see if they are equal. This depends on 
            typeparameter T having a valid override for Equals().
            </summary>
            <param name="firstArray">The first array to compare.</param>
            <param name="secondArray">The second array to compare.</param>
            <returns>True if firstArray and secondArray have equal contents.</returns>
        </member>
        <member name="T:PDFCore.Font.FontType">
            <summary>
            PDF Font types
            </summary>
        </member>
        <member name="T:LibTiff.Classic.TiffTag">
            <summary>
            TIFF tag definitions.
            </summary>
            <remarks>
            Joris Van Damme maintains
            <a href="http://www.awaresystems.be/imaging/tiff/tifftags.html" target="_blank">
            TIFF Tag Reference</a>, good source of tag information. It's an overview of known TIFF
            Tags with properties, short description, and other useful information.
            </remarks>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IGNORE">
            <summary>
            Tag placeholder
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SUBFILETYPE">
            <summary>
            Subfile data descriptor.
            For the list of possible values, see <see cref="T:LibTiff.Classic.FileType" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.OSUBFILETYPE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Kind of data in subfile. For the list of possible values, see <see cref="T:LibTiff.Classic.OFileType" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IMAGEWIDTH">
            <summary>
            Image width in pixels.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IMAGELENGTH">
            <summary>
            Image height in pixels.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BITSPERSAMPLE">
            <summary>
            Bits per channel (sample).
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.COMPRESSION">
            <summary>
            Data compression technique.
            For the list of possible values, see <see cref="T:LibTiff.Classic.Compression" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PHOTOMETRIC">
            <summary>
            Photometric interpretation.
            For the list of possible values, see <see cref="T:LibTiff.Classic.Photometric" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.THRESHHOLDING">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Thresholding used on data. For the list of possible values, see <see cref="T:LibTiff.Classic.Threshold" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CELLWIDTH">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Dithering matrix width.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CELLLENGTH">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Dithering matrix height.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FILLORDER">
            <summary>
            Data order within a byte.
            For the list of possible values, see <see cref="T:LibTiff.Classic.FillOrder" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DOCUMENTNAME">
            <summary>
            Name of document which holds for image.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IMAGEDESCRIPTION">
            <summary>
            Information about image.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.MAKE">
            <summary>
            Scanner manufacturer name.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.MODEL">
            <summary>
            Scanner model name/number.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.STRIPOFFSETS">
            <summary>
            Offsets to data strips.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ORIENTATION">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Image orientation. For the list of possible values, see <see cref="T:LibTiff.Classic.Orientation" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SAMPLESPERPIXEL">
            <summary>
            Samples per pixel.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ROWSPERSTRIP">
            <summary>
            Rows per strip of data.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.STRIPBYTECOUNTS">
            <summary>
            Bytes counts for strips.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.MINSAMPLEVALUE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Minimum sample value.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.MAXSAMPLEVALUE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Maximum sample value.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.XRESOLUTION">
            <summary>
            Pixels/resolution in x.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.YRESOLUTION">
            <summary>
            Pixels/resolution in y.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PLANARCONFIG">
            <summary>
            Storage organization.
            For the list of possible values, see <see cref="T:LibTiff.Classic.PlanarConfig" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PAGENAME">
            <summary>
            Page name image is from.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.XPOSITION">
            <summary>
            X page offset of image lhs.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.YPOSITION">
            <summary>
            Y page offset of image lhs.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FREEOFFSETS">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Byte offset to free block.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FREEBYTECOUNTS">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Sizes of free blocks.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GRAYRESPONSEUNIT">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Gray scale curve accuracy.
            For the list of possible values, see <see cref="T:LibTiff.Classic.GrayResponseUnit" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GRAYRESPONSECURVE">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Gray scale response curve.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GROUP3OPTIONS">
            <summary>
            Options for CCITT Group 3 fax encoding. 32 flag bits.
            For the list of possible values, see <see cref="T:LibTiff.Classic.Group3Opt" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.T4OPTIONS">
            <summary>
            TIFF 6.0 proper name alias for GROUP3OPTIONS.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GROUP4OPTIONS">
            <summary>
            Options for CCITT Group 4 fax encoding. 32 flag bits.
            For the list of possible values, see <see cref="T:LibTiff.Classic.Group3Opt" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.T6OPTIONS">
            <summary>
            TIFF 6.0 proper name alias for GROUP4OPTIONS.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.RESOLUTIONUNIT">
            <summary>
            Units of resolutions.
            For the list of possible values, see <see cref="T:LibTiff.Classic.ResUnit" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PAGENUMBER">
            <summary>
            Page numbers of multi-page.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.COLORRESPONSEUNIT">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Color curve accuracy.
            For the list of possible values, see <see cref="T:LibTiff.Classic.ColorResponseUnit" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.TRANSFERFUNCTION">
            <summary>
            Colorimetry info.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SOFTWARE">
            <summary>
            Name &amp; release.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DATETIME">
            <summary>
            Creation date and time.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ARTIST">
            <summary>
            Creator of image.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.HOSTCOMPUTER">
            <summary>
            Machine where created.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PREDICTOR">
            <summary>
            Prediction scheme w/ LZW.
            For the list of possible values, see <see cref="T:LibTiff.Classic.Predictor" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.WHITEPOINT">
            <summary>
            Image white point.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PRIMARYCHROMATICITIES">
            <summary>
            Primary chromaticities.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.COLORMAP">
            <summary>
            RGB map for pallette image.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.HALFTONEHINTS">
            <summary>
            Highlight + shadow info.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.TILEWIDTH">
            <summary>
            Tile width in pixels.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.TILELENGTH">
            <summary>
            Tile height in pixels.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.TILEOFFSETS">
            <summary>
            Offsets to data tiles.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.TILEBYTECOUNTS">
            <summary>
            Byte counts for tiles.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BADFAXLINES">
            <summary>
            Lines with wrong pixel count.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CLEANFAXDATA">
            <summary>
            Regenerated line info.
            For the list of possible values, see <see cref="T:LibTiff.Classic.CleanFaxData" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CONSECUTIVEBADFAXLINES">
            <summary>
            Max consecutive bad lines.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SUBIFD">
            <summary>
            Subimage descriptors.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.INKSET">
            <summary>
            Inks in separated image.
            For the list of possible values, see <see cref="T:LibTiff.Classic.InkSet" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.INKNAMES">
            <summary>
            ASCII names of inks.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.NUMBEROFINKS">
            <summary>
            Number of inks.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DOTRANGE">
            <summary>
            0% and 100% dot codes.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.TARGETPRINTER">
            <summary>
            Separation target.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXTRASAMPLES">
            <summary>
            Information about extra samples.
            For the list of possible values, see <see cref="T:LibTiff.Classic.ExtraSample" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SAMPLEFORMAT">
            <summary>
            Data sample format.
            For the list of possible values, see <see cref="T:LibTiff.Classic.SampleFormat" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SMINSAMPLEVALUE">
            <summary>
            Variable MinSampleValue.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SMAXSAMPLEVALUE">
            <summary>
            Variable MaxSampleValue.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CLIPPATH">
            <summary>
            ClipPath. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.XCLIPPATHUNITS">
            <summary>
            XClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.YCLIPPATHUNITS">
            <summary>
            YClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.INDEXED">
            <summary>
            Indexed. Introduced post TIFF rev 6.0 by Adobe TIFF Technote 3.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGTABLES">
            <summary>
            JPEG table stream. Introduced post TIFF rev 6.0.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.OPIPROXY">
            <summary>
            OPI Proxy. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGPROC">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            JPEG processing algorithm.
            For the list of possible values, see <see cref="T:LibTiff.Classic.JpegProc" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGIFOFFSET">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Pointer to SOI marker.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGIFBYTECOUNT">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            JFIF stream length
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGRESTARTINTERVAL">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Restart interval length.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGLOSSLESSPREDICTORS">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Lossless proc predictor.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGPOINTTRANSFORM">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Lossless point transform.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGQTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Q matrice offsets.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGDCTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            DCT table offsets.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGACTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            AC coefficient offsets.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.YCBCRCOEFFICIENTS">
            <summary>
            RGB -&gt; YCbCr transform.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.YCBCRSUBSAMPLING">
            <summary>
            YCbCr subsampling factors.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.YCBCRPOSITIONING">
            <summary>
            Subsample positioning.
            For the list of possible values, see <see cref="T:LibTiff.Classic.YCbCrPosition" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.REFERENCEBLACKWHITE">
            <summary>
            Colorimetry info.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.XMLPACKET">
            <summary>
            XML packet. Introduced post TIFF rev 6.0 by Adobe XMP Specification, January 2004.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.OPIIMAGEID">
            <summary>
            OPI ImageID. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.REFPTS">
            <summary>
            Image reference points. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.REGIONTACKPOINT">
            <summary>
            Region-xform tack point. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.REGIONWARPCORNERS">
            <summary>
            Warp quadrilateral. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.REGIONAFFINE">
            <summary>
            Affine transformation matrix. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.MATTEING">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Use EXTRASAMPLE tag. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DATATYPE">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Use SAMPLEFORMAT tag. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IMAGEDEPTH">
            <summary>
            Z depth of image. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.TILEDEPTH">
            <summary>
            Z depth/data tile. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXAR_IMAGEFULLWIDTH">
            <summary>
            Full image size in X. This tag is set when an image has been cropped out of a larger
            image. It reflect width of the original uncropped image. The XPOSITION tag can be used
            to determine the position of the smaller image in the larger one.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXAR_IMAGEFULLLENGTH">
            <summary>
            Full image size in Y. This tag is set when an image has been cropped out of a larger
            image. It reflect height of the original uncropped image. The YPOSITION can be used
            to determine the position of the smaller image in the larger one.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXAR_TEXTUREFORMAT">
            <summary>
            Texture map format. Used to identify special image modes and data used by Pixar's
            texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXAR_WRAPMODES">
            <summary>
            S&amp;T wrap modes. Used to identify special image modes and data used by Pixar's
            texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXAR_FOVCOT">
            <summary>
            Cotan(fov) for env. maps. Used to identify special image modes and data used by
            Pixar's texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXAR_MATRIX_WORLDTOSCREEN">
            <summary>
            Used to identify special image modes and data used by Pixar's texture formats.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXAR_MATRIX_WORLDTOCAMERA">
            <summary>
            Used to identify special image modes and data used by Pixar's texture formats.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.WRITERSERIALNUMBER">
            <summary>
            Device serial number. Private tag registered to Eastman Kodak.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.COPYRIGHT">
            <summary>
            Copyright string. This tag is listed in the TIFF rev. 6.0 w/ unknown ownership.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.RICHTIFFIPTC">
            <summary>
            IPTC TAG from RichTIFF specifications.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8SITE">
            <summary>
            Site name. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8COLORSEQUENCE">
            <summary>
            Color seq. [RGB, CMYK, etc]. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8HEADER">
            <summary>
            DDES Header. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8RASTERPADDING">
            <summary>
            Raster scanline padding. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8BITSPERRUNLENGTH">
            <summary>
            The number of bits in short run. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8BITSPEREXTENDEDRUNLENGTH">
            <summary>
            The number of bits in long run. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8COLORTABLE">
            <summary>
            LW colortable. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8IMAGECOLORINDICATOR">
            <summary>
            BP/BL image color switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8BKGCOLORINDICATOR">
            <summary>
            BP/BL bg color switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8IMAGECOLORVALUE">
            <summary>
            BP/BL image color value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8BKGCOLORVALUE">
            <summary>
            BP/BL bg color value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8PIXELINTENSITYRANGE">
            <summary>
            MP pixel intensity value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8TRANSPARENCYINDICATOR">
            <summary>
            HC transparency switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8COLORCHARACTERIZATION">
            <summary>
            Color characterization table. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8HCUSAGE">
            <summary>
            HC usage indicator. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8TRAPINDICATOR">
            <summary>
            Trapping indicator (untrapped = 0, trapped = 1). Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.IT8CMYKEQUIVALENT">
            <summary>
            CMYK color equivalents.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FRAMECOUNT">
            <summary>
            Sequence Frame Count. Private tag registered to Texas Instruments.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PHOTOSHOP">
            <summary>
            Private tag registered to Adobe for PhotoShop.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIFIFD">
            <summary>
            Pointer to EXIF private directory. This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ICCPROFILE">
            <summary>
            ICC profile data. ?? Private tag registered to Adobe. ??
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JBIGOPTIONS">
            <summary>
            JBIG options. Private tag registered to Pixel Magic.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GPSIFD">
            <summary>
            Pointer to GPS private directory. This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FAXRECVPARAMS">
            <summary>
            Encoded Class 2 ses. params. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FAXSUBADDRESS">
            <summary>
            Received SubAddr string. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FAXRECVTIME">
            <summary>
            Receive time (secs). Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FAXDCS">
            <summary>
            Encoded fax ses. params, Table 2/T.30. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.STONITS">
            <summary>
            Sample value to Nits. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FEDEX_EDR">
            <summary>
            Private tag registered to FedEx.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.INTEROPERABILITYIFD">
            <summary>
            Pointer to Interoperability private directory.
            This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DNGVERSION">
            <summary>
            DNG version number. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DNGBACKWARDVERSION">
            <summary>
            DNG compatibility version. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.UNIQUECAMERAMODEL">
            <summary>
            Name for the camera model. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.LOCALIZEDCAMERAMODEL">
            <summary>
            Localized camera model name. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CFAPLANECOLOR">
            <summary>
            CFAPattern-&gt;LinearRaw space mapping. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CFALAYOUT">
            <summary>
            Spatial layout of the CFA. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.LINEARIZATIONTABLE">
            <summary>
            Lookup table description. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BLACKLEVELREPEATDIM">
            <summary>
            Repeat pattern size for the BlackLevel tag. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BLACKLEVEL">
            <summary>
            Zero light encoding level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BLACKLEVELDELTAH">
            <summary>
            Zero light encoding level differences (columns). Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BLACKLEVELDELTAV">
            <summary>
            Zero light encoding level differences (rows). Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.WHITELEVEL">
            <summary>
            Fully saturated encoding level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DEFAULTSCALE">
            <summary>
            Default scale factors. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DEFAULTCROPORIGIN">
            <summary>
            Origin of the final image area. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DEFAULTCROPSIZE">
            <summary>
            Size of the final image area. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.COLORMATRIX1">
            <summary>
            XYZ-&gt;reference color space transformation matrix 1.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.COLORMATRIX2">
            <summary>
            XYZ-&gt;reference color space transformation matrix 2.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CAMERACALIBRATION1">
            <summary>
            Calibration matrix 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CAMERACALIBRATION2">
            <summary>
            Calibration matrix 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.REDUCTIONMATRIX1">
            <summary>
            Dimensionality reduction matrix 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.REDUCTIONMATRIX2">
            <summary>
            Dimensionality reduction matrix 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ANALOGBALANCE">
            <summary>
            Gain applied the stored raw values. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ASSHOTNEUTRAL">
            <summary>
            Selected white balance in linear reference space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ASSHOTWHITEXY">
            <summary>
            Selected white balance in x-y chromaticity coordinates.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BASELINEEXPOSURE">
            <summary>
            How much to move the zero point. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BASELINENOISE">
            <summary>
            Relative noise level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BASELINESHARPNESS">
            <summary>
            Relative amount of sharpening. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BAYERGREENSPLIT">
            <summary>
            How closely the values of the green pixels in the blue/green rows 
            track the values of the green pixels in the red/green rows.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.LINEARRESPONSELIMIT">
            <summary>
            Non-linear encoding range. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CAMERASERIALNUMBER">
            <summary>
            Camera's serial number. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.LENSINFO">
            <summary>
            Information about the lens.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CHROMABLURRADIUS">
            <summary>
            Chroma blur radius. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ANTIALIASSTRENGTH">
            <summary>
            Relative strength of the camera's anti-alias filter.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SHADOWSCALE">
            <summary>
            Used by Adobe Camera Raw. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DNGPRIVATEDATA">
            <summary>
            Manufacturer's private data. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.MAKERNOTESAFETY">
            <summary>
            Whether the EXIF MakerNote tag is safe to preserve along with the rest of the EXIF data.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CALIBRATIONILLUMINANT1">
            <summary>
            Illuminant 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CALIBRATIONILLUMINANT2">
            <summary>
            Illuminant 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.BESTQUALITYSCALE">
            <summary>
            Best quality multiplier. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.RAWDATAUNIQUEID">
            <summary>
            Unique identifier for the raw image data. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ORIGINALRAWFILENAME">
            <summary>
            File name of the original raw file. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ORIGINALRAWFILEDATA">
            <summary>
            Contents of the original raw file. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ACTIVEAREA">
            <summary>
            Active (non-masked) pixels of the sensor. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.MASKEDAREAS">
            <summary>
            List of coordinates of fully masked pixels. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ASSHOTICCPROFILE">
            <summary>
            Used to map cameras's color space into ICC profile space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ASSHOTPREPROFILEMATRIX">
            <summary>
            Used to map cameras's color space into ICC profile space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CURRENTICCPROFILE">
            <summary>
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.CURRENTPREPROFILEMATRIX">
            <summary>
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSHUESHIFTVALUES">
            <summary>
            Undefined tag used by Eastman Kodak, hue shift correction data.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FAXMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            Group 3/4 format control.
            For the list of possible values, see <see cref="T:LibTiff.Classic.FaxMode" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGQUALITY">
            <summary>
            [pseudo tag. not written to file]<br />
            Compression quality level. Quality level is on the IJG 0-100 scale. Default value is 75.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGCOLORMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            Auto RGB&lt;=&gt;YCbCr convert.
            For the list of possible values, see <see cref="T:LibTiff.Classic.JpegColorMode" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.JPEGTABLESMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            For the list of possible values, see <see cref="T:LibTiff.Classic.JpegTablesMode" />.
            Default is <see cref="F:LibTiff.Classic.JpegTablesMode.QUANT" /> | <see cref="F:LibTiff.Classic.JpegTablesMode.HUFF" />.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.FAXFILLFUNC">
            <summary>
            [pseudo tag. not written to file]<br />
            G3/G4 fill function.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXARLOGDATAFMT">
            <summary>
            [pseudo tag. not written to file]<br />
            PixarLogCodec I/O data sz.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSIMAGERTYPE">
            <summary>
            [pseudo tag. not written to file]<br />
            Imager mode &amp; filter.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSINTERPMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            Interpolation mode.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSBALANCEARRAY">
            <summary>
            [pseudo tag. not written to file]<br />
            Color balance values.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSCORRECTMATRIX">
            <summary>
            [pseudo tag. not written to file]<br />
            Color correction values.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSGAMMA">
            <summary>
            [pseudo tag. not written to file]<br />
            Gamma value.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSTOESHOULDERPTS">
            <summary>
            [pseudo tag. not written to file]<br />
            Toe &amp; shoulder points.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSCALIBRATIONFD">
            <summary>
            [pseudo tag. not written to file]<br />
            Calibration file description.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.ZIPQUALITY">
            <summary>
            [pseudo tag. not written to file]<br />
            Compression quality level.
            Quality level is on the ZLIB 1-9 scale. Default value is -1.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.PIXARLOGQUALITY">
            <summary>
            [pseudo tag. not written to file]<br />
            PixarLog uses same scale.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.DCSCLIPRECTANGLE">
            <summary>
            [pseudo tag. not written to file]<br />
            Area of image to acquire.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SGILOGDATAFMT">
            <summary>
            [pseudo tag. not written to file]<br />
            SGILog user data format.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.SGILOGENCODE">
            <summary>
            [pseudo tag. not written to file]<br />
            SGILog data encoding control.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_EXPOSURETIME">
            <summary>
            Exposure time.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FNUMBER">
            <summary>
            F number.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_EXPOSUREPROGRAM">
            <summary>
            Exposure program.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SPECTRALSENSITIVITY">
            <summary>
            Spectral sensitivity.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_ISOSPEEDRATINGS">
            <summary>
            ISO speed rating.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_OECF">
            <summary>
            Optoelectric conversion factor.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_EXIFVERSION">
            <summary>
            Exif version.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_DATETIMEORIGINAL">
            <summary>
            Date and time of original data generation.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_DATETIMEDIGITIZED">
            <summary>
            Date and time of digital data generation.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_COMPONENTSCONFIGURATION">
            <summary>
            Meaning of each component.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_COMPRESSEDBITSPERPIXEL">
            <summary>
            Image compression mode.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SHUTTERSPEEDVALUE">
            <summary>
            Shutter speed.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_APERTUREVALUE">
            <summary>
            Aperture.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_BRIGHTNESSVALUE">
            <summary>
            Brightness.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_EXPOSUREBIASVALUE">
            <summary>
            Exposure bias.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_MAXAPERTUREVALUE">
            <summary>
            Maximum lens aperture.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SUBJECTDISTANCE">
            <summary>
            Subject distance.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_METERINGMODE">
            <summary>
            Metering mode.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_LIGHTSOURCE">
            <summary>
            Light source.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FLASH">
            <summary>
            Flash.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FOCALLENGTH">
            <summary>
            Lens focal length.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SUBJECTAREA">
            <summary>
            Subject area.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_MAKERNOTE">
            <summary>
            Manufacturer notes.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_USERCOMMENT">
            <summary>
            User comments.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SUBSECTIME">
            <summary>
            DateTime subseconds.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SUBSECTIMEORIGINAL">
            <summary>
            DateTimeOriginal subseconds.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SUBSECTIMEDIGITIZED">
            <summary>
            DateTimeDigitized subseconds.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FLASHPIXVERSION">
            <summary>
            Supported Flashpix version.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_COLORSPACE">
            <summary>
            Color space information.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_PIXELXDIMENSION">
            <summary>
            Valid image width.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_PIXELYDIMENSION">
            <summary>
            Valid image height.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_RELATEDSOUNDFILE">
            <summary>
            Related audio file.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FLASHENERGY">
            <summary>
            Flash energy.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SPATIALFREQUENCYRESPONSE">
            <summary>
            Spatial frequency response.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FOCALPLANEXRESOLUTION">
            <summary>
            Focal plane X resolution.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FOCALPLANEYRESOLUTION">
            <summary>
            Focal plane Y resolution.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FOCALPLANERESOLUTIONUNIT">
            <summary>
            Focal plane resolution unit.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SUBJECTLOCATION">
            <summary>
            Subject location.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_EXPOSUREINDEX">
            <summary>
            Exposure index.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SENSINGMETHOD">
            <summary>
            Sensing method.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FILESOURCE">
            <summary>
            File source.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SCENETYPE">
            <summary>
            Scene type.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_CFAPATTERN">
            <summary>
            CFA pattern.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_CUSTOMRENDERED">
            <summary>
            Custom image processing.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_EXPOSUREMODE">
            <summary>
            Exposure mode.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_WHITEBALANCE">
            <summary>
            White balance.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_DIGITALZOOMRATIO">
            <summary>
            Digital zoom ratio.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_FOCALLENGTHIN35MMFILM">
            <summary>
            Focal length in 35 mm film.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SCENECAPTURETYPE">
            <summary>
            Scene capture type.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_GAINCONTROL">
            <summary>
            Gain control.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_CONTRAST">
            <summary>
            Contrast.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SATURATION">
            <summary>
            Saturation.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SHARPNESS">
            <summary>
            Sharpness.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_DEVICESETTINGDESCRIPTION">
            <summary>
            Device settings description.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_SUBJECTDISTANCERANGE">
            <summary>
            Subject distance range.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.EXIF_IMAGEUNIQUEID">
            <summary>
            Unique image ID.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GEOTIFF_MODELPIXELSCALETAG">
            <summary>
            This tag is defining exact affine transformations between raster and model space. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GEOTIFF_MODELTIEPOINTTAG">
            <summary>
            This tag stores raster-&gt;model tiepoint pairs. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffTag.GEOTIFF_MODELTRANSFORMATIONTAG">
            <summary>
            This tag is optionally provided for defining exact affine transformations between raster and model space. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="T:LibTiff.Classic.TiffType">
            <summary>
            Tag data type.
            </summary>
            <remarks>Note: RATIONALs are the ratio of two 32-bit integer values.</remarks>
        </member>
        <member name="F:LibTiff.Classic.TiffType.NOTYPE">
            <summary>
            Placeholder.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.ANY">
            <summary>
            For field descriptor searching.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.BYTE">
            <summary>
            8-bit unsigned integer.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.ASCII">
            <summary>
            8-bit bytes with last byte <c>null</c>.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.SHORT">
            <summary>
            16-bit unsigned integer.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.LONG">
            <summary>
            32-bit unsigned integer.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.RATIONAL">
            <summary>
            64-bit unsigned fraction.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.SBYTE">
            <summary>
            8-bit signed integer.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.UNDEFINED">
            <summary>
            8-bit untyped data.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.SSHORT">
            <summary>
            16-bit signed integer.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.SLONG">
            <summary>
            32-bit signed integer.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.SRATIONAL">
            <summary>
            64-bit signed fraction.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.FLOAT">
            <summary>
            32-bit IEEE floating point.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.DOUBLE">
            <summary>
            64-bit IEEE floating point.
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.IFD">
            <summary>
            32-bit unsigned integer (offset)
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.LONG8">
            <summary>
            BigTIFF 64-bit unsigned long
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.SLONG8">
            <summary>
            BigTIFF 64-bit signed long
            </summary>
        </member>
        <member name="F:LibTiff.Classic.TiffType.IFD8">
            <summary>
            BigTIFF 64-bit unsigned integer/long (offset)
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.BarcodeException">
            <summary>
            Represents errors that occur during <see cref="N:Bytescout.BarCodeReader" /> class library execution.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.BarcodeException" /> class with a specified error message.
            </summary>
            <param name="message">The exception message that describes the error.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeException.#ctor(System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.BarcodeException" /> class with a specified error message and inner exception.
            </summary>
            <param name="message">The exception message that describes the error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Bytescout.BarCodeReader.BarcodeFoundEventArgs">
            <summary>
            Contains event arguments used by <see cref="T:Bytescout.BarCodeReader.Reader.BarcodeFoundEventHandler" /></summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeFoundEventArgs.#ctor(Bytescout.BarCodeReader.FoundBarcode,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.BarcodeFoundEventArgs" /> class.
            </summary>
            <param name="barcode">The found barcode.</param>
            <param name="count">The number of barcodes found during last 
            read session (including this one).</param>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeFoundEventArgs.Barcode">
            <summary>
            Gets the information about last found barcode.
            </summary>
            <value>The information about last found barcode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeFoundEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to abort barcode detection.
            </summary>
            <value>
                <c>true</c> if to abort barcode detection; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeFoundEventArgs.Count">
            <summary>
            Gets the number of barcodes found during last read session.
            </summary>
            <value>The number of barcodes found during last read session.</value>
        </member>
        <member name="T:Bytescout.BarCodeReader.BarcodeTypeSelector">
            <summary>
            Defines barcode types to search for.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN8">
            <summary>
            Search for EAN-8 (GTIN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN8">
            <summary>
            Search for GTIN-8 (EAN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN13">
            <summary>
            Search for EAN-13 (GTIN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN13">
            <summary>
            Search for GTIN-13 (EAN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UPCE">
            <summary>
            Search for UPC-E barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UPCA">
            <summary>
            Search for UPC-A barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN12">
            <summary>
            Search for GTIN-12 (UPC-A with 12 symbols) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Interleaved2of5">
            <summary>
            Search for Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.CircularI2of5">
            <summary>
            Search for Circular barcodes based on Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.ITF14">
            <summary>
            Search for ITF-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GTIN14">
            <summary>
            Search for GTIN-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39">
            <summary>
            Search for Code 39 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39Extended">
            <summary>
            Search for Code 39 Extended barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39Mod43">
            <summary>
            Search for Code 39 mod 43.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code39Mod43Extended">
            <summary>
            Search for Extended Code 39 mod 43 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PZN">
            <summary>
            Search for PZN, PZN-7, PZN-8 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UPU">
            <summary>
            Search for UPU (Universal Postal Union) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code128">
            <summary>
            Search for Code 128 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN2">
            <summary>
            Search for EAN-2 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.EAN5">
            <summary>
            Search for EAN-5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1">
            <summary>
            Search for GS1-128 (EAN-128) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Codabar">
            <summary>
            Search for Codabar barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Trioptic">
            <summary>
            Search for Trioptic barcodes (variation of Code 39).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PatchCode">
            <summary>
            Search for Patch Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarOmnidirectional">
            <summary>
            Search for GS1 DataBar Omnidirectional barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarExpanded">
            <summary>
            Search for GS1 DataBar Expanded barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarLimited">
            <summary>
            Search for GS1 DataBar Limited barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarStacked">
            <summary>
            Search for GS1 DataBar Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.GS1DataBarExpandedStacked">
            <summary>
            Search for GS1 DataBar Expanded Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PDF417">
            <summary>
            Search for PDF-417 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.DataMatrix">
            <summary>
            Search for DataMatrix barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.DPMDataMatrix">
            <summary>
            Search for DPM (Direct Part Marking) DataMatrix barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.QRCode">
            <summary>
            Search for QR Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Aztec">
            <summary>
            Search for Aztec barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MaxiCode">
            <summary>
            Search for MaxiCode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MICR">
            <summary>
            Search for MICR barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.IntelligentMail">
            <summary>
            Search for Intelligent Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.RoyalMail">
            <summary>
            Search for Royal Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.RoyalMailKIX">
            <summary>
            Search for Royal Mail KIX barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.AustralianPostCode">
            <summary>
            Search for Australian Post Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.CodablockF">
            <summary>
            Search for Codablock F barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code16K">
            <summary>
            Search for Code 16K barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.PostNet">
            <summary>
            Search for POSTNET barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MicroPDF">
            <summary>
            Search for MicroPDF barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Code93">
            <summary>
            Search for Code 93 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.MSI">
            <summary>
            Search for MSI barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Pharmacode">
            <summary>
            Search for Pharmacode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Segment">
            <summary>
            Search segments (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Circle">
            <summary>
            Search circles (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Oval">
            <summary>
            Search ovals (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.Checkbox">
            <summary>
            Search checkboxes (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.HorizontalLine">
            <summary>
            Search horizontal lines (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.VerticalLine">
            <summary>
            Search vertical lines (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.UnderlinedField">
            <summary>
            Search underlined fields (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.BorderedTable">
            <summary>
            Search bordered tables (OMR).
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAll1D">
            <summary>
            Search for for all supported one-dimensional (1D, linear) barcodes except EAN-2, EAN-5, Circular 2 of 5, Patch Code, Pharmacode as they are designed to work 
            without error checking and causing numerous false positives. Code 39 Ext, Code39 Mode 43, Code39 Mode 43 Ext are also excluded to avoid duplicated detection by basic Code 39 decoder.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.All1D">
            <summary>
            Search for for all supported one-dimensional (1D, linear) barcodes except EAN-2, EAN-5, Circular 2 of 5, Patch Code, Pharmacode as they are designed to work 
            without error checking and causing numerous false positives. Code 39 Ext, Code39 Mode 43, Code39 Mode 43 Ext are also excluded to avoid duplicated detection by basic Code 39 decoder.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAll2D">
            <summary>
            Search for all supported two-dimensional (2D) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.All2D">
            <summary>
            Get or set all 2D barcodes to read.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAllOMRElements">
            <summary>
            Search for all OMR (Optical Mark Recognition) elements.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.AllOMRElements">
            <summary>
            Get or set all OMR (Optical Mark Recognition) elements to recognize.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.SetAll">
            <summary>
            Search for all supported barcodes  except EAN-2, EAN-5, Circular 2 of 5, Patch Code, Pharmacode as they are designed to work without error checking 
            and causing numerous false positives. Code 39 Ext, Code39 Mode 43, Code39 Mode 43 Ext are also excluded to avoid duplicated detection by basic Code 39 decoder.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
            <remarks>This method does not include OMR elements.</remarks>
        </member>
        <member name="P:Bytescout.BarCodeReader.BarcodeTypeSelector.All">
            <summary>
            Get or set all barcode types to read.
            </summary>
            <remarks>This property does not include OMR elements.</remarks>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAny1DSelected">
            <summary>
            Indicates if any 1d linear barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAny2DSelected">
            <summary>
            Indicates if any 2D barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAnyOMRElementsSelected">
            <summary>
            Indicates if any OMR (Optical Mark Recognition) elements is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.IsAnySelected">
            <summary>
            Indicates if any barcode type is selected currently.
            </summary>
            <remarks>This method does not include OMR elements.</remarks>
        </member>
        <member name="M:Bytescout.BarCodeReader.BarcodeTypeSelector.Reset">
            <summary>
            Set all barcode type properties to False.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.DecoderSpecificOptions">
            <summary>
            Fine-tuning options for specific barcode decoders.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.DataMatrix_MaxHoleSizeInsideLines">
            <summary>
            DataMatrix. Maximum allowed hole in line. Default is 11 (11-pixel or less holes will be consumed.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.DataMatrix_MaxAllowedHoleBetweenLinesInLPattern">
            <summary>
            DataMatrix. Max hole size between horizontal and vertical lines relative to the largest side. Default is 0.15 (15%).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.DecoderSpecificOptions.DataMatrix_LPatternDispersion">
            <summary>
            DataMatrix. Dispersion level of L-pattern dots. Helps to decode some barcodes with damaged L-pattern. Default is 0.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.IBarcodeTypeSelector">
            <summary>
            Defines barcode types to search for.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN8">
            <summary>
            Search for EAN-8 (GTIN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN8">
            <summary>
            Search for GTIN-8 (EAN-8) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN13">
            <summary>
            Search for EAN-13 (GTIN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN13">
            <summary>
            Search for GTIN-13 (EAN-13) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UPCE">
            <summary>
            Search for UPC-E barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UPCA">
            <summary>
            Search for UPC-A barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN12">
            <summary>
            Search for GTIN-12 (UPC-A barcode with 12 symbols) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Interleaved2of5">
            <summary>
            Search for Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.CircularI2of5">
            <summary>
            Search for Circular barcodes based on Interleaved 2 of 5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.ITF14">
            <summary>
            Search for ITF-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GTIN14">
            <summary>
            Search for GTIN-14 barcode (also known as Interleaved 2 of 5 barcode with 14 digits). 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39">
            <summary>
            Search for Code 39 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39Extended">
            <summary>
            Search for Code 39 Extended barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39Mod43">
            <summary>
            Search for Code 39 mod 43.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code39Mod43Extended">
            <summary>
            Search for Extended Code 39 mod 43 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PZN">
            <summary>
            Search for PZN, PZN-7, PZN-8 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UPU">
            <summary>
            Search for UPU (Universal Postal Union) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Pharmacode">
            <summary>
            Search for Pharmacode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code128">
            <summary>
            Search for Code 128 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN2">
            <summary>
            Search for EAN-2 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.EAN5">
            <summary>
            Search for EAN-5 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1">
            <summary>
            Search for GS1-128 (EAN-128) barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Codabar">
            <summary>
            Search for Codabar barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Trioptic">
            <summary>
            Search for Trioptic barcodes (variation of Code 39).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PatchCode">
            <summary>
            Search for Patch Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarOmnidirectional">
            <summary>
            Search for GS1 DataBar Omnidirectional barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarExpanded">
            <summary>
            Search for GS1 DataBar Expanded barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarLimited">
            <summary>
            Search for GS1 DataBar Limited barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarStacked">
            <summary>
            Search for GS1 DataBar Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.GS1DataBarExpandedStacked">
            <summary>
            Search for GS1 DataBar Expanded Stacked barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PDF417">
            <summary>
            Search for PDF-417 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.DataMatrix">
            <summary>
            Search for DataMatrix barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.QRCode">
            <summary>
            Search for QR Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Aztec">
            <summary>
            Search for Aztec barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MaxiCode">
            <summary>
            Search for MaxiCode barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MICR">
            <summary>
            Search for MICR barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.IntelligentMail">
            <summary>
            Search for Intelligent Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.RoyalMail">
            <summary>
            Search for Royal Mail barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.RoyalMailKIX">
            <summary>
            Search for Royal Mail KIX barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.AustralianPostCode">
            <summary>
            Search for Australian Post Code barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.CodablockF">
            <summary>
            Search for Codablock F barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code16K">
            <summary>
            Search for Code 16K barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.PostNet">
            <summary>
            Search for POSTNET barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MicroPDF">
            <summary>
            Search for MicroPDF barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Code93">
            <summary>
            Search for Code 93 barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.MSI">
            <summary>
            Search for MSI barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.All1D">
            <summary>
            Search for all linear barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.All2D">
            <summary>
            Get or set All 2D barcodes to read.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.All">
            <summary>
            Get or set all barcode types to read.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAll1D">
            <summary>
            Search for for all supported one-dimensional (1D, linear) barcodes except EAN-2 and EAN-5 as they are designed to work without checksums and causing numerous false positives.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAll2D">
            <summary>
            Search for all supported two-dimensional (2D) barcodes.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAll">
            <summary>
            Search for all supported barcodes except EAN-2 and EAN-5 as they are designed to work without checksums and causing numerous false positives.
            If you want to search for these barcode types as well, please enable them directly.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.Reset">
            <summary>
            Set all barcode type properties to False.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAny1DSelected">
            <summary>
            Indicates if any 1d linear barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAny2DSelected">
            <summary>
            Indicates if any 2D barcode type is selected currently.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAnySelected">
            <summary>
            Indicates if any barcode type is selected currently.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Segment">
            <summary>
            Search segments (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Circle">
            <summary>
            Search circles (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Oval">
            <summary>
            Search ovals (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.Checkbox">
            <summary>
            Search checkboxes (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.HorizontalLine">
            <summary>
            Search horizontal lines (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.VerticalLine">
            <summary>
            Search vertical lines (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.UnderlinedField">
            <summary>
            Search underlined fields (OMR).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IBarcodeTypeSelector.AllOMRElements">
            <summary>
            Get or set all OMR (Optical Mark Recognition) elements to recognize.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.SetAllOMRElements">
            <summary>
            Search for all OMR (Optical Mark Recognition) elements.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IBarcodeTypeSelector.IsAnyOMRElementsSelected">
            <summary>
            Indicates if any OMR (Optical Mark Recognition) elements is selected currently.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ColorConversionMode">
            <summary>
            Colors conversion  mode. Controls how colors from the original image are converted into data for further analysis.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.ImageBlocks">
            <summary>
            (0) Block mode. Image colors and brightness analysed by blocks on the go. Unviersal and adaptive. Used by default.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Image">
            <summary>
            (1) Image is analyzed as one large block when converting colors.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Enhancing">
            <summary>
            (2) Alternative mode useful with some dark and unfocused barcode photos.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.NoiseFilter">
            <summary>
            (3) Modified <c>ImageBlocks</c> mode filtering noise using fine Median filter. Useful on some corrupted barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Smoothed">
            <summary>
            (4) Modified <c>ImageBlocks</c> mode dilating darks lines/dots of the barcode. Useful on some corrupted barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.GridFiltering">
            <summary>
            (5) Grid filtering mode. Removes parasite grid artefacts from image background causing slowdown. Useful on scanned graph (plotting) paper.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ColorConversionMode.Threshold">
            <summary>
            Simples and fastest mode with simple cutoff by predefined threshold level.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddMedian">
            <summary>
            Add Median image processing filter with default block size 3.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddBlur">
            <summary>
            Add Blur image processing filter with default block size 2.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddContrast(System.Int32)">
            <summary>
            Add Contrast image processing filter with specified value. Valid values from -100 to 100. 
            0 will not modify the image.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale">
            <summary>
            Add Scale image processing filter with default scale factor 2 (x2 enlargement) and interpolation mode.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Double)">
            <summary>
            Add Scale image processing filter with specified scale factor and default interpolation mode (<see cref="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic" />).
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Double,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Add Scale image processing filter with specified scale factor and interpolation mode.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Int32)">
            <summary>
            Add Scale image processing filter with the specified size limit and default interpolation mode (<see cref="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic" />). 
            When the image width or height exceeds the limit, the image proportionally resized to it.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddScale(System.Int32,System.Drawing.Drawing2D.InterpolationMode)">
            <summary>
            Add Scale image processing filter with specified size limit and interpolation mode.
            When the image width or height exceeds the limit, the image proportionally resized to it.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddCropDark">
            <summary>
            Add image processing filter that crops dark margins from the image. May speedup the decoding if multiple barcode types enabled.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddCropLight">
            <summary>
            Add image processing filter that crops light margins from the image. May speedup the decoding if multiple barcode types enabled.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.AddGamma">
            <summary>
            Add gamma correction filter. May help to distinguish gaps and bars in small blurred barcodes.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImagePreprocessingFiltersCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ImageUtils.Contrast">
            <summary>
            Represents contrast image filter.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImageUtils.Contrast.Process(System.Drawing.Bitmap@,System.Int32)">
            <summary>
            Applies contrast image filter to bitmap.
            </summary>
            <param name="bmp">Input 24-bit bitmap.</param>
            <param name="contrastLevel">Contrast level from -100 to +100, default 0.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.ImageUtils.Blur">
            <summary>
            Represents blur image filter.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImageUtils.Blur.Process(System.Drawing.Bitmap@,System.Int32)">
            <summary>
            Applies blur image filter to bitmap.
            </summary>
            <param name="bitmap">Input 24-bit bitmap.</param>
            <param name="blurZoneSize">Blur zone size from 1 to 10.</param>
            <returns></returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.ImageUtils.Median">
            <summary>
            Represents median image filter.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImageUtils.Median.Process(System.Drawing.Bitmap@,System.Int32)">
            <summary>
            Applies median image filter to bitmap.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ImageUtils.Crop">
            <summary>
            Crops light or dark margins from the image.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImageUtils.Crop.Process(System.Drawing.Bitmap@,Bytescout.BarCodeReader.ImageUtils.Crop.Background)">
            <summary>
            Crop an image by removing background.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ImageUtils.Scale">
            <summary>
            Resize the image using the specified scale factor.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ImageUtils.Gamma">
            <summary>
            Gamma correction filter.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.ImageUtils.Negate">
            <summary>
            Gamma correction filter.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.ImageUtils.EnhancingThreshold.Process(System.Drawing.Bitmap@)">
            <summary>
            This class segments the input barcode image and return segmented image
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.IWIAImageScanner">
            <summary>
            Base interface for class can be used to call scanner or web-camera and acquire images from it using 
            WIA interface in Windows. This class uses WIA 1 or WIA 2 (automatically checks which one is available)
            uses run-time late binding to call WIA 1 (Windows XP) or 2 (Windows Vista or higher)
            so no additional references are required.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputFiles">
            <summary>
            List of acquired image files
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputFolder">
            <summary>
            output folder for acquired images. User's My Pictures folder by default
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputFileNameTemplate">
            <summary>
            Template for output filename. Default is "scanned"
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.ImageIntent">
            <summary>
            Acquired images intent (Color mode)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.OutputImageFormat">
            <summary>
            Output image format
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.DeviceType">
            <summary>
            Device type to work with. By default works with all still imaging devices
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.ShowDeviceSelectionDialog">
            <summary>
            Show device selection dialog or not (true by default)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IWIAImageScanner.ImageQuality">
            <summary>
            Output image quality. Maximize quality by default
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IWIAImageScanner.Acquire">
            <summary>
            Acquire images from WIA device. Output files are in OutputFiles list
            </summary>
            <returns>true if acquired, false if not</returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.NoiseRemovalFilterType">
            <summary>
            Noise removal filter type.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.NoiseRemovalFilterType.Blur">
            <summary>
            (0) Blur filter
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.NoiseRemovalFilterType.Median">
            <summary>
            (1) Median filter
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.LastDecodingTime">
            <summary>
            LastDecodingTime class represents decoding time information.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.LastDecodingTime.TimingData">
            <summary>
            Represents decoding time spent on decoding of single barcode type with the document rotated at specified angle.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.TimingData.BarcodeType">
            <summary>
            Barcode type.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.TimingData.Angle">
            <summary>
            Document rotation angle.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.TimingData.TimeSpent">
            <summary>
            Time spent on the decoding.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.Timings">
            <summary>
            Time spent on each barcode decoder run.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.ElapsedPreparations">
            <summary>
            Time spent on document preparations.
            </summary>
            <value>The time value.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.LastDecodingTime.ElapsedTotal">
            <summary>
            Total time spent on decoding.
            </summary>
            <value>The time value.</value>
        </member>
        <member name="M:Bytescout.BarCodeReader.LastDecodingTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.LastDecodingTime" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.LastDecodingTime.op_Addition(Bytescout.BarCodeReader.LastDecodingTime,Bytescout.BarCodeReader.LastDecodingTime)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="a">First <see cref="T:Bytescout.BarCodeReader.LastDecodingTime" /> value.</param>
            <param name="b">The second <see cref="T:Bytescout.BarCodeReader.LastDecodingTime" />.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.IReader">
            <summary>
            Base interface for class that reads barcodes from images
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RegistrationName">
            <summary>
            Gets or sets the name part of the registration information.
            </summary>
            <value>The name part of the registration information.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RegistrationKey">
            <summary>
            Gets or sets the key number part of registration information.
            </summary>
            <value>The key number part of registration information.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomArea">
            <summary>
            Gets or sets custom scan area to find barcodes within.
            </summary>
            <value>Custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaLeft">
            <summary>
            Gets or sets leftmost position of custom scan area to find
            barcodes within.
            </summary>
            <value>Leftmost position of custom scan area to find barcodes
            within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaTop">
            <summary>
            Gets or sets topmost position of custom scan area to find
            barcodes within.
            </summary>
            <value>Topmost position of custom scan area to find barcodes
            within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaWidth">
            <summary>
            Gets or sets width of custom scan area to find barcodes within.
            </summary>
            <value>Width of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.CustomAreaHeight">
            <summary>
            Gets or sets height of custom scan area to find barcodes within.
            </summary>
            <value>Height of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ScanArea">
            <summary>
            Gets or sets the friendly name of the scan area.
            </summary>
            <value>The friendly name of the scan area.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.BarcodeTypesToFind">
            <summary>
            Gets or sets the barcode types to search for. 
            </summary>
            <value>The barcode types to find.</value>
            <example>
                <code lang="CS">
            barcode.BarcodeTypesToFind.Code39 = true; 
            barcode.BarcodeTypesToFind.QRCode = true; 
            </code>
                <code lang="VB">
            barcode.BarcodeTypesToFind.Code39 = True 
            barcode.BarcodeTypesToFind.QRCode = True 
            </code>
            </example>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Orientation">
            <summary>
            Gets or sets the barcode orientations to search.
            </summary>
            <value>The barcode orientations to search.</value>
            <remarks>
            Use logical OR operator to set multiple orientations.
            </remarks>
            <example>
                <code lang="CS">
            barcode.Orientation = OrientationType.HorizontalFromLeftToRight | OrientationType.HorizontalFromRightToLeft; 
            </code>
                <code lang="VB">
            barcode.Orientation = OrientationType.HorizontalFromLeftToRight Or OrientationType.HorizontalFromRightToLeft
            </code>
            </example>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.SearchNegative">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters" /> to add the negative filter.
            Gets or sets a value indicating whether to search for negative barcodes.
            </summary>
            <value>
                <c>true</c> if search for negative barcodes; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RequireQuietZones">
            <summary>
            Gets or sets a value indicating whether to require "quiet zones" 
            before and after barcode. "Quiet zone" is a whitespace with width
            larger or equal to one symbol width.
            </summary>
            <value>
                <c>true</c> if to require "quiet zones"; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MaxNumberOfBarcodesPerPage">
            <summary>
            Max number of barcodes to find on document page. Default is 0 (unlimited number of barcodes)
            If you know number of barcodes on the page then you can set this number to save time and make reading faster.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MaxNumberOfBarcodesPerDocument">
            <summary>
            Max number of barcodes to find in document. Default is 0 (unlimited number of barcodes)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.OptimizedProcessingOfLargeImages">
            <summary>
             (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters" /> to add the scaling.
             Get or set optimized processing of large images. Faster but may fail on some fuzzy barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.OptimizedProcessingOfLargeImagesSizeLimit">
            <summary>
             (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters" /> to add the scaling.
             Size limit for optimized processing of large images.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MinimalDataLength">
            <summary>
            Gets or sets the minimal acceptable length of decoded data.
            </summary>
            <value>The minimal acceptable length of decoded data.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.MediumTrustLevelCompatible">
            <summary>
            Gets or sets a value indicating whether [medium trust level compatible].
            </summary>
            <value>
                <c>true</c> if [medium trust level compatible]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ScanStep">
            <summary>
            Scan interval for linear (1-dimensional) barcodes. Default is 1 (every bitmap row will be scanned).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Version">
            <summary>
             Gets the component version number.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetImagePageCount(System.Drawing.Image)">
            <summary>
            Gets the number of pages in specified image.
            </summary>
            <param name="img">The image whose number of pages to
            retrieve.</param>
            <returns>Count of pages.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetImagePageCount(System.String)">
            <summary>
            Gets the number of pages in specified image file.
            </summary>
            <param name="fileName">The image file whose number of pages to retrieve.</param>
            <returns>Count of pages.</returns>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.FoundBarcodes">
            <summary>
            Gets the array of all barcodes found during last find.
            </summary>
            <value>The array of found barcodes.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.FoundCount">
            <summary>
            Retrieves number of all barcodes found during last find.
            </summary>
            <value>The number of found barcodes.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Profiles">
            <summary>
            Profiles, applied to object.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ImagePreprocessingFilters">
            <summary>
            Collection of image processing filters applied to image before the barcode decoding.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeType(System.Int32)">
            <summary>
            Gets the type of the found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The type of the found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeValue(System.Int32)">
            <summary>
            Gets the found barcode value.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The found barcode value.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodePage(System.Int32)">
            <summary>
            Gets the number of page where barcode was found.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The number of page where barcode was found.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeLeft(System.Int32)">
            <summary>
            Gets the X coordinate of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The X coordinate of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeTop(System.Int32)">
            <summary>
            Gets the Y coordinate of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The Y coordinate of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeWidth(System.Int32)">
            <summary>
            Gets the width of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The width of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeHeight(System.Int32)">
            <summary>
            Gets the height of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The height of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetFoundBarcodeConfidence(System.Int32)">
            <summary>
            Gets the confidence of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The height of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.Drawing.Bitmap)">
            <summary>
            Reads barcodes from all pages of the Bitmap object.
            </summary>
            <param name="bitmap">The Bitmap object containing an image.</param>
            <returns>Array of FoundBarcode objects whose elements describe found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Reads barcodes from the specified page of the Bitmap object.
            </summary>
            <param name="bitmap">The Bitmap object to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from the range of pages of the Bitmap object.
            </summary>
            <param name="bitmap">The Bitmap object to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.String)">
            <summary>
            Reads barcodes from all pages of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromFile(System.String)">
            <summary>
            Reads barcodes from all pages of the specified image or PDF file. You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.String,System.Int32)">
            <summary>
            Reads barcodes from specified page of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of file to read barcodes from.</param>
            <param name="pageIndex">Zero-based page index to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFrom(System.String,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from range of pages of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to read barcodes from.</param>
            <param name="pageCount">The number of pages to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromFilePage(System.String,System.Int32)">
            <summary>
            Reads barcodes from specified page of the image in the specified file.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="fileName">Name of the image file to read barcodes
            from.</param>
            <param name="page">Zero-based index of the page to read barcodes from.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromHBitmap(System.IntPtr)">
            <summary>
            Reads barcodes from the image pointed to by HBITMAP handle.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="hbmp">The HBITMAP handle for an image.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromHBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from the image pointed to by HBITMAP handle. You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="hbmp">The HBITMAP handle for an image.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream,System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.IO.Stream)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.IO.Stream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromStream(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.IO.Stream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemory(System.Byte[])">
            <summary>
            Read barcodes from image or PDF file provided as array of bytes.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="bytes">Byte array.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemory(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as array of bytes.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="bytes">Byte array.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemoryCOM(System.Object[])">
            <summary>
            VBA/VBScript: Read barcodes from image or PDF file provided as array of bytes represented by VARIANT values. 
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property.
            </summary>
            <param name="byteArray">Byte array.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromMemoryCOM(System.Object[],System.Int32,System.Int32)">
            <summary>
            VBA/VBScript: Read barcodes from image or PDF file provided as array of bytes represented by VARIANT values.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.IReader.FoundBarcodes" /> property. 
            </summary>
            <param name="byteArray">Byte array.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFReadingMode">
            <summary>
            Gets or sets the PDF reading mode:
            PDFReadingMode.RenderPDF (0, default) - render whole page to image, then search for barcodes;
            PDFReadingMode.ExtractEmbeddedImagesOnly - (1) - extract images, then search for barcodes.
            </summary>
            <value>The PDF reading mode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFRenderingResolution">
            <summary>
            Gets or sets the PDF rendering resolution. Default is 200 DPI.
            </summary>
            <value>The PDF rendering resolution.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFRenderText">
            <summary>
            Gets or sets a value indicating whether to render a text in PDF document or not.
            By default text is not rendered to speed up the process, but if a barcode in the document 
            is drawn with font, you need to enable the text rendering.
            </summary>
            <value>
                <c>true</c> if render text in PDF documents; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.PDFOptimizeSplittedParts">
            <summary>
             Removes unused resources from splitted PDF document parts. 
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetPdfPageCount(System.String)">
            <summary>
            Returns count of pages in PDF document.
            </summary>
            <param name="pdfFile">PDF file path.</param>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.GetPdfPageCount(System.IO.Stream)">
            <summary>
            Returns count of pages in DF document.
            </summary>
            <param name="fileStream">Stream containing PDF document.</param>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFile(System.String)">
            <summary>
             Reads barcodes from all pages of specified PDF document.
            </summary>
            <param name="fileName">PDF file name.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFile(System.IO.Stream)">
            <summary>
             Reads barcodes from all pages of provided PDF document.
            </summary>
            <param name="fileStream">PDF file stream.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFilePage(System.String,System.Int32,System.Int32)">
            <summary>
             Reads barcodes from specified pages of PDF document.
            </summary>
            <param name="fileName">PDF file name.</param>
            <param name="startPage">Zero-based start page index.</param>
            <param name="pageCount">Count of pages to process from the start page. Specify -1 for all pages.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ReadFromPdfFilePage(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
             Reads barcodes from specified pages of provided PDF document.
            </summary>
            <param name="fileStream">PDF file stream.</param>
            <param name="startPage">Zero-based start page index.</param>
            <param name="pageCount">Count of pages to process from the start page. Specify -1 for all pages.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.RemoveNoize">
            <summary>
            Removes noise from the image being processed. 
            Use this option with bad quality scanned images.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.NoiseRemovalFilterSize">
            <summary>
            Block size of noise removal filter. Default is 1.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.NoiseRemovalFilterType">
            <summary>
            Noise removal filter type, Blur or Median. Default is Blur.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.ColorConversionMode">
            <summary>
            Colors conversion mode. Default is Blocks.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.HeuristicMode">
            <summary>
            Automatic analysis mode that tries to find fuzzy barcodes by variating internal parameters. 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.Contrast">
            <summary>
            Image contrast adjustment. Valid values from -100 to 100. Default is 0 (no adjustment).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.DecodingTimeOut">
            <summary>
            Timeout (in milliseconds) for the decoding process for one barcode type and per page.
            Default is 0 (zero), disabled.
            Set to timeout in milliseconds to check timeout time while decoding.
            If decoding takes longer than timeout then the SDK aborts decoding and throws BarcodeReaderDecodingTimeoutException is thrown.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.LastDecodingTimeOutExceeded">
            <summary>
            This property indicates if last decoding timeout was exceeded (and the decoding was aborted) 
            so results may lack some results.
            To enable timeout set DecodingTimeout to non-zero value (timeout is in milliseconds)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.TextEncoding">
            <summary>
            Text Encoding to decode barcode value. Set to System.Text.Encoding.Default by default (i.e. set to the default locale code page according to the Windows you run the SDK on). 
            You may override this value like: 
            reader.Encoding = System.Text.Encoding.GetEncoding(1250); // to use German locale to decode text
            ActiveX interface: please use .TextEncodingCodePage property instead
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.TextEncodingCodePage">
            <summary>
            property for use via ActiveX interface: get or set CodePage to change code page to decode barcode text. This value is set to default code page value for this computer
            You may override this value like: 
            reader.TextEncodingCodePage = 1250; // to use German locale to decode text
            .NET interface: please use .TextEncoding property instead
            Some of available code pages are listed below for your reference: 
            Name               CodePage  BodyName           HeaderName         WebName            Encoding.EncodingName
            shift_jis          932       iso-2022-jp        iso-2022-jp        shift_jis          Japanese (Shift-JIS)
            windows-1250       1250      iso-8859-2         windows-1250       windows-1250       Central European (Windows)
            windows-1251       1251      koi8-r             windows-1251       windows-1251       Cyrillic (Windows)
            Windows-1252       1252      iso-8859-1         Windows-1252       Windows-1252       Western European (Windows)
            windows-1253       1253      iso-8859-7         windows-1253       windows-1253       Greek (Windows)
            windows-1254       1254      iso-8859-9         windows-1254       windows-1254       Turkish (Windows)
            csISO2022JP        50221     iso-2022-jp        iso-2022-jp        csISO2022JP        Japanese (JIS-Allow 1 byte Kana)
            iso-2022-kr        50225     iso-2022-kr        euc-kr             iso-2022-kr        Korean (ISO)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.TextEncodingUseUTF8">
            <summary>
            ActiveX interface: Enables UTF8 text encoding for use for barcode value decoding 
            .NET interface: Use .TextEncoding property and set it to System.Text.Encoding.UTF8 if you need to
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.SplitDocument(System.String,System.String,System.String,System.Int32)">
            <summary>
             Splits specified PDF or TIFF document to two documents at specified page.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document file name to split.</param>
            <param name="destinationDocument1">First output document file name.</param>
            <param name="destinationDocument2">Second output document file name.</param>
            <param name="splitAtPageNumber">1-based page number to split at. It will be first page of the second document.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.SplitDocument(System.String,System.String)">
            <summary>
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>List of files of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.SplitDocumentCOM(System.String,System.String)">
            <summary>
            COM/ActiveX compatible function for Split(string sourceDocument, string ranges) that returns string with filenames delimited by line feed \n
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>Array of file names of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExtractPageFromDocument(System.String,System.String,System.Int32)">
            <summary>
             Extracts specified page from PDF or TIFF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document to split.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="pageNumber">1-based page number to extract.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToXML(System.String)">
            <summary>
            Exports found barcodes to XML file.
            </summary>
            <param name="fileName">Output XML file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToXML">
            <summary>
            /// Exports found barcodes to XML document.
            </summary>
            <returns>
                <see cref="T:System.Xml.XmlDocument" /> containing found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String)">
            <summary>
            Exports found barcodes to CSV file with default delimiter (,) and quotation (") symbols.
            </summary>
            <param name="fileName">Output CSV file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String,System.String,System.String)">
            <summary>
            Exports found barcodes to CSV file with specified delimiter and quotation symbols.
            </summary>
            <param name="fileName">Output CSV file name.</param>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Exports found barcodes to CSV file with specified delimiter, quotation symbol and character encoding.
            </summary>
            <param name="fileName">Output CSV file name.</param>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
            <param name="encoding">Character encoding.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV">
            <summary>
            Exports found barcodes to CSV format with default delimiter (,) and quotation (") symbols.
            </summary>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in CSV format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToCSV(System.String,System.String)">
            <summary>
            Exports found barcodes to CSV format with specified delimiter and quotation symbols.
            </summary>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in CSV format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToTXT(System.String)">
            <summary>
            Exports found barcodes to plain text file (TXT).
            </summary>
            <param name="fileName">Output TXT file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToTXT(System.String,System.Text.Encoding)">
            <summary>
            Exports found barcodes to plain text file (TXT) in specified character encoding.
            </summary>
            <param name="fileName">Output TXT file name.</param>
            <param name="encoding">Character encoding.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.ExportFoundBarcodesToTXT">
            <summary>
            Exports found barcodes to plain text format (TXT).
            </summary>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in plain text format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.IReader.LoadProfiles(System.String)">
            <summary>
            Loads profiles from file.
            </summary>
            <param name="fileName">JSON file containing profiles.</param>
        </member>
        <member name="P:Bytescout.BarCodeReader.IReader.DecoderSpecificOptions">
            <summary>
            Fine-tuning options for specific barcode decoders. May affect the decoding speed at the cost of reliability.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.FoundBarcode">
            <summary>
            Holds information about barcode found in image by <see cref="T:Bytescout.BarCodeReader.Reader" />
            class.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Value">
            <summary>
            Gets the found barcode value.
            </summary>
            <value>The found barcode value.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.RawData">
            <summary>
            Gets the found barcode raw data (indexes of encoded data into symbology alphabet(s)).
            </summary>
            <value>The found barcode raw data.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Type">
            <summary>
            Gets the found barcode symbology type.
            </summary>
            <value>The found barcode symbology type.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Rect">
            <summary>
            Gets the found barcode rectangle.
            </summary>
            <value>The found barcode rectangle.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Page">
            <summary>
            Gets the page number in the image file that contains found barcode.
            </summary>
            <value>The page number in the image file that contains found barcode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.File">
            <summary>
            Gets the name of the image file containing found barcode.
            </summary>
            <value>The name of the image file containing found barcode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.FoundBarcode.Confidence">
            <summary>
            Gets the barcode decoding confidence.
            </summary>
            <value>The decoding confidence in range from 0 to 1.</value>
        </member>
        <member name="M:Bytescout.BarCodeReader.FoundBarcode.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Bytescout.BarCodeReader.OrientationType">
            <summary>
            Describes barcode orientations to search.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.HorizontalFromLeftToRight">
            <summary>
            (1) Normal unrotated barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.HorizontalFromRightToLeft">
            <summary>
            (16) Flipped horizontal barcodes (180 deg).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopLeftToBottomRight11">
            <summary>
            (32) Barcodes rotated clockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomRightToTopLeft11">
            <summary>
            (64) Flipped barcodes rotated clockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomLeftToTopRight11">
            <summary>
            (128) Barcodes rotated counterclockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopRightToBottomLeft11">
            <summary>
            (256) Flipped barcodes rotated counterclockwise by about 11 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopLeftToBottomRight22">
            <summary>
            (512) Barcodes rotated clockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomRightToTopLeft22">
            <summary>
            (1024) Flipped barcodes rotated clockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomLeftToTopRight22">
            <summary>
            (2048) Barcodes rotated counterclockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopRightToBottomLeft22">
            <summary>
            (4096) Flipped barcodes rotated counterclockwise by about 22 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopLeftToBottomRight45">
            <summary>
            (4) Barcodes rotated clockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomRightToTopLeft45">
            <summary>
            (8192) Flipped barcodes rotated clockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromBottomLeftToTopRight45">
            <summary>
            (8) Barcodes rotated counterclockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.DiagonalFromTopRightToBottomLeft45">
            <summary>
            (16384) Flipped barcodes rotated counterclockwise by about 45 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.VerticalFromTopToBottom">
            <summary>
            (2) Barcodes rotated clockwise by about 90 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.VerticalFromBottomToTop">
            <summary>
            (32768) Flipped barcodes rotated counterclockwise by about 90 deg.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.Default">
            <summary>
            (1) Default orientations for faster processing: HorizontalFromLeftToRight.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.OrientationType.SearchAll">
            <summary>
            (65535) All orientations.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.PDFReadingMode">
            <summary>
            PDF files processing modes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.PDFReadingMode.RenderPDF">
            <summary>
            (0) Render whole page to image, then search for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.PDFReadingMode.ExtractEmbeddedImagesOnly">
            <summary>
            (1) Extract images, then search for barcodes.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Reader">
            <summary>
            Reads barcodes from images.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Reader.BarcodeFoundEventHandler">
            <summary>
            Handles the BarcodeFound events
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Bytescout.BarCodeReader.BarcodeFoundEventArgs" /> instance containing the found barcode information.</param>
        </member>
        <member name="E:Bytescout.BarCodeReader.Reader.BarcodeFound">
            <summary>
            Occurs when barcode found during read session.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.Reader.PasswordEventHandler">
            <summary>
            Represents parameters for PasswordRequired event.
            </summary>
            <param name="sender"></param>
            <param name="password"></param>
        </member>
        <member name="E:Bytescout.BarCodeReader.Reader.PDFDocumentPasswordRequired">
            <summary>
             Occurs when the password required to decrypt PDF document.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.DecoderSpecificOptions">
            <summary>
            Fine-tuning options for specific barcode decoders. May affect the decoding speed at the cost of reliability.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters">
            <summary>
            Collection of image processing filters applied to image before the barcode decoding. 
            Allows to add multiple filters. Note, the order of adding does matter.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.Reader" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Bytescout.BarCodeReader.Reader" /> class.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.Dispose">
            <summary>
            Releases managed resources of the component.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RegistrationName">
            <summary>
            Gets or sets the name part of the registration information.
            </summary>
            <value>The name part of the registration information.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RegistrationKey">
            <summary>
            Gets or sets the key number part of registration information.
            </summary>
            <value>The key number part of registration information.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomArea">
            <summary>
            Gets or sets custom scan area to find barcodes within.
            </summary>
            <value>Custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaLeft">
            <summary>
            Gets or sets leftmost position of custom scan area to find barcodes within.
            </summary>
            <value>Leftmost position of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaTop">
            <summary>
            Gets or sets topmost position of custom scan area to find barcodes within.
            </summary>
            <value>Topmost position of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaWidth">
            <summary>
            Gets or sets width of custom scan area to find barcodes within.
            </summary>
            <value>Width of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.CustomAreaHeight">
            <summary>
            Gets or sets height of custom scan area to find barcodes within.
            </summary>
            <value>Height of custom scan area to find barcodes within.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ScanArea">
            <summary>
            Gets or sets the friendly name of the scan area.
            </summary>
            <value>The friendly name of the scan area.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.BarcodeTypesToFind">
            <summary>
            Gets or sets the barcode types to search for. 
            </summary>
            <value>The barcode types to find.</value>
            <example>
                <code lang="CS">
            barcode.BarcodeTypesToFind.Code39 = true; 
            barcode.BarcodeTypesToFind.QRCode = true; 
            </code>
                <code lang="VB">
            barcode.BarcodeTypesToFind.Code39 = True 
            barcode.BarcodeTypesToFind.QRCode = True 
            </code>
            </example>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Orientation">
            <summary>
            Gets or sets the barcode orientations to search.
            </summary>
            <value>The barcode orientations to search.</value>
            <remarks>
            Use logical OR operator to set multiple orientations.
            </remarks>
            <example>
                <code lang="CS">
            barcode.Orientation = OrientationType.HorizontalFromLeftToRight | OrientationType.HorizontalFromRightToLeft; 
            </code>
                <code lang="VB">
            barcode.Orientation = OrientationType.HorizontalFromLeftToRight Or OrientationType.HorizontalFromRightToLeft
            </code>
            </example>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.SearchNegative">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters" /> to add the negative filter.
            Gets or sets a value indicating whether to search for negative barcodes.
            </summary>
            <value>
                <c>true</c> if search for negative barcodes; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RequireQuietZones">
            <summary>
            Gets or sets a value indicating whether to require "quiet zones"
            before and after barcode. "Quiet zone" is a whitespace with width
            larger or equal to one symbol width.
            </summary>
            <value>
                <c>true</c> if to require "quiet zones"; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MaxNumberOfBarcodesPerPage">
            <summary>
            Max number of barcodes to find on document page. Default is 0 (unlimited number of barcodes)
            If you know number of barcodes on the page then you can set this number to save time and make reading faster.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.DecodingTimeOut">
            <summary>
            Timeout (in milliseconds) for the decoding process.
            Default is 0 (zero), disabled.
            Set to timeout in milliseconds to check timeout time while decoding.
            If decoding takes longer than timeout then the SDK aborts decoding and throws BarcodeReaderDecodingTimeoutException is thrown.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.LastDecodingTimeOutExceeded">
            <summary>
            This property indicates if last decoding timeout was exceeded (and the decoding was aborted) 
            so results may lack some results.
            To enable timeout set DecodingTimeout to non-zero value (timeout is in milliseconds)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MaxNumberOfBarcodesPerDocument">
            <summary>
            Max number of barcodes to find in document. Default is 0 (unlimited number of barcodes)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ScanStep">
            <summary>
            Scan interval for linear (1-dimensional) barcodes. Default is 1 (every bitmap row will be scanned).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.AllowOrphanedSupplementals">
            <summary>
            Gets or sets a value indicating whether to allow orphaned
            supplemental barcodes to be decoded.
            </summary>
            <value>
                <c>true</c> if to allow orphaned supplemental barcodes to be
            found; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MinimalDataLength">
            <summary>
            Gets or sets the minimal acceptable length of decoded data.
            </summary>
            <value>The minimal acceptable length of decoded data.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.MediumTrustLevelCompatible">
            <summary>
            Gets or sets a value indicating whether [medium trust level compatible].
            Default is False (not compatible with ASP.NET Medium Trust level).
            </summary>
            <value>
                <c>true</c> if [medium trust level compatible]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.LastDecodingTime">
            <summary>
            Gets the time that last decoding process took.
            </summary>
            <value>The time that last decoding process took.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.OptimizedProcessingOfLargeImages">
            <summary>
             (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters" /> property to add the scaling.
             Get or set optimized processing of large images. Faster but may fail on some fuzzy barcodes.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.OptimizedProcessingOfLargeImagesSizeLimit">
            <summary>
             (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters" /> property to add the scaling.
             Size limit for optimized processing of large images.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.RemoveNoize">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters" /> property.
            Removes noise from the image being processed. 
            Use this option with bad quality scanned images.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.NoiseRemovalFilterSize">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters" /> property.
            Block size of noise removal filter. Default is 2.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.NoiseRemovalFilterType">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters" /> property.
            Noise removal filter type, Blur or Median. Default is Blur.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.ColorConversionMode">
            <summary>
            Colors conversion mode. Default is Blocks.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.HeuristicMode">
            <summary>
            Automatic analysis mode that tries to find fuzzy barcodes by variating internal parameters. 
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Contrast">
            <summary>
            (!) Obsolete. Please use <see cref="P:Bytescout.BarCodeReader.Reader.ImagePreprocessingFilters" /> property.
            Image contrast adjustment. Valid values from -100 to 100. Default is 0 (no adjustment).
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.TextEncoding">
            <summary>
            Text Encoding to decode barcode value. Set to System.Text.Encoding.Default by default (i.e. set to the default locale codepage according to the Windows you run the SDK on). 
            You may override this value like: 
            reader.Encoding = System.Text.Encoding.GetEncoding(1250); // to use German locale to decode text
            ActiveX interface: please use .TextEncodingCodePage property instead
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.TextEncodingCodePage">
            <summary>
            property for use via ActiveX interface: get or set CodePage to change codepage to decode barcode text. This value is set to default code page value for this computer
            You may override this value like: 
            reader.TextEncodingCodePage = 1250; // to use German locale to decode text
            .NET interface: please use .TextEncoding property instead
            Some of available code pages are listed below for your reference: 
            Name               CodePage  BodyName           HeaderName         WebName            Encoding.EncodingName
            shift_jis          932       iso-2022-jp        iso-2022-jp        shift_jis          Japanese (Shift-JIS)
            windows-1250       1250      iso-8859-2         windows-1250       windows-1250       Central European (Windows)
            windows-1251       1251      koi8-r             windows-1251       windows-1251       Cyrillic (Windows)
            Windows-1252       1252      iso-8859-1         Windows-1252       Windows-1252       Western European (Windows)
            windows-1253       1253      iso-8859-7         windows-1253       windows-1253       Greek (Windows)
            windows-1254       1254      iso-8859-9         windows-1254       windows-1254       Turkish (Windows)
            csISO2022JP        50221     iso-2022-jp        iso-2022-jp        csISO2022JP        Japanese (JIS-Allow 1 byte Kana)
            iso-2022-kr        50225     iso-2022-kr        euc-kr             iso-2022-kr        Korean (ISO)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.TextEncodingUseUTF8">
            <summary>
            ActiveX interface: Enables UTF8 text encoding for use for barcode value decoding 
            .NET interface: Use .TextEncoding property and set it to System.Text.Encoding.UTF8 if you need to
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Version">
            <summary>
             Gets the component version number.
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.FoundBarcodes">
            <summary>
            Gets the array of all barcodes found during last find.
            </summary>
            <value>The array of found barcodes.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.FoundCount">
            <summary>
            Retrieves number of all barcodes found during last find.
            </summary>
            <value>The number of found barcodes.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.Profiles">
            <summary>
            Profiles, applied to object.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetImagePageCount(System.Drawing.Image)">
            <summary>
            Gets the number of pages in specified image.
            </summary>
            <param name="img">The image whose number of pages to retrieve.</param>
            <returns>Count of pages.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetImagePageCount(System.String)">
            <summary>
            Gets the number of pages in specified image file.
            </summary>
            <param name="fileName">The image file whose number of pages to retrieve.</param>
            <returns>Count of pages.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeType(System.Int32)">
            <summary>
            Gets the type of the found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The type of the found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeConfidence(System.Int32)">
            <summary>
            Gets the confidence level (0f to 1.00f) of the found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The type of the found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeValue(System.Int32)">
            <summary>
            Gets the found barcode value.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The found barcode value.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodePage(System.Int32)">
            <summary>
            Gets the number of page where barcode was found.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The number of page where barcode was found.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeLeft(System.Int32)">
            <summary>
            Gets the X coordinate of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The X coordinate of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeTop(System.Int32)">
            <summary>
            Gets the Y coordinate of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The Y coordinate of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeWidth(System.Int32)">
            <summary>
            Gets the width of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The width of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetFoundBarcodeHeight(System.Int32)">
            <summary>
            Gets the height of found barcode.
            </summary>
            <param name="barcodeIndex">Index of the barcode.</param>
            <returns>The height of found barcode.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.Drawing.Bitmap)">
            <summary>
            Reads barcodes from all pages of the Bitmap object.
            </summary>
            <param name="bitmap">The Bitmap object containing an image.</param>
            <returns>Array of FoundBarcode objects whose elements describe found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Reads barcodes from the specified page of the Bitmap object.
            </summary>
            <param name="bitmap">The Bitmap object to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from the range of pages of the Bitmap object.
            </summary>
            <param name="bitmap">The Bitmap object to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.String)">
            <summary>
            Reads barcodes from all pages of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromFile(System.String)">
            <summary>
            Reads barcodes from all pages of the specified image or PDF file. You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.String,System.Int32)">
            <summary>
            Reads barcodes from specified page of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of file to read barcodes from.</param>
            <param name="pageIndex">Zero-based page index to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFrom(System.String,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from range of pages of the specified image or PDF file.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
            <param name="pageIndex">Zero-based index of the page to read barcodes from.</param>
            <param name="pageCount">The number of pages to read barcodes from.</param>
            <returns>
            Array of FoundBarcode objects whose elements describe found barcodes.
            </returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromFilePage(System.String,System.Int32)">
            <summary>
            Reads barcodes from specified page of the specified image or PDF file.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="fileName">Name of the image file to read barcodes from.</param>
            <param name="page">Zero-based index of the page to read barcodes from.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromHBitmap(System.IntPtr)">
            <summary>
            Reads barcodes from the image pointed to by HBITMAP handle. 
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="hbmp">The HBITMAP handle for an image.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromHBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Reads barcodes from the image pointed to by HBITMAP handle. You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="hbmp">The HBITMAP handle for an image.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.Runtime.InteropServices.ComTypes.IStream,System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.IO.Stream)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.IO.Stream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromStream(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as <see cref="T:System.IO.Stream" />.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="stream">Input stream.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemory(System.Byte[])">
            <summary>
            Read barcodes from image or PDF file provided as array of bytes.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="bytes">Byte array.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemory(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read barcodes from image or PDF file provided as array of bytes.
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="bytes">Byte array.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemoryCOM(System.Object[])">
            <summary>
            VBA/VBScript: Read barcodes from image or PDF file provided as array of bytes represented by VARIANT values. 
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="byteArray">Byte array.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromMemoryCOM(System.Object[],System.Int32,System.Int32)">
            <summary>
            VBA/VBScript: Read barcodes from image or PDF file provided as array of bytes represented by VARIANT values. 
            You can find decoded barcodes in <see cref="P:Bytescout.BarCodeReader.Reader.FoundBarcodes" /> property.
            </summary>
            <param name="byteArray">Byte array.</param>
            <param name="pageIndex">Zero-based index of the page to find barcodes at.</param>
            <param name="pageCount">The number of pages to read barcodes from. -1 means "to the last page".</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.FireBarcodeFound(Bytescout.BarCodeReader.BarcodeFoundEventArgs)">
            <summary>
            Raises the <see cref="E:Bytescout.BarCodeReader.Reader.BarcodeFound" /> event.
            </summary>
            <param name="e">The <see cref="T:Bytescout.BarCodeReader.BarcodeFoundEventArgs" /> instance containing the found barcode information.</param>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFReadingMode">
            <summary>
            Gets or sets the PDF reading mode:
            PDFReadingMode.RenderPDF (0, default) - render whole page to image, then search for barcodes;
            PDFReadingMode.ExtractEmbeddedImagesOnly - (1) - extract images, then search for barcodes.
            </summary>
            <value>The PDF reading mode.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFRenderingResolution">
            <summary>
            Gets or sets the PDF rendering resolution. Default is 300 DPI.
            </summary>
            <value>The PDF rendering resolution.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFRenderText">
            <summary>
            Gets or sets a value indicating whether to render a text in PDF document or not.
            By default text is not rendered to speed up the process, but if a barcode in the document 
            is drawn with font, you need to enable the text rendering.
            </summary>
            <value>
                <c>true</c> if render text in PDF documents; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Bytescout.BarCodeReader.Reader.PDFOptimizeSplittedParts">
            <summary>
             Removes unused resources from splitted PDF document parts. 
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetPdfPageCount(System.String)">
            <summary>
            Returns count of pages in PDF document.
            </summary>
            <param name="pdfFile">PDF file path.</param>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.GetPdfPageCount(System.IO.Stream)">
            <summary>
            Returns count of pages in DF document.
            </summary>
            <param name="fileStream">Stream containing PDF document.</param>
            <returns>Page count.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFile(System.String)">
            <summary>
             Reads barcodes from all pages of specified PDF document.
            </summary>
            <param name="fileName">PDF file name.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFilePage(System.String,System.Int32,System.Int32)">
            <summary>
             Reads barcodes from specified pages of PDF document.
            </summary>
            <param name="fileName">PDF file name.</param>
            <param name="startPage">Zero-based start page index.</param>
            <param name="pageCount">Count of pages to process from the start page. Specify -1 for all pages.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFile(System.IO.Stream)">
            <summary>
             Reads barcodes from all pages of provided PDF document.
            </summary>
            <param name="fileStream">PDF file stream.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ReadFromPdfFilePage(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
             Reads barcodes from specified pages of provided PDF document.
            </summary>
            <param name="fileStream">PDF file stream.</param>
            <param name="startPage">Zero-based start page index.</param>
            <param name="pageCount">Count of pages to process from the start page. Specify -1 for all pages.</param>
            <returns>Total count of pages in PDF document.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.SplitDocument(System.String,System.String)">
            <summary>
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>List of files of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.SplitDocument(System.String,System.String,System.String,System.Int32)">
            <summary>
             Splits specified PDF or TIFF document to two documents at specified page.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document file name to split.</param>
            <param name="destinationDocument1">First output document file name.</param>
            <param name="destinationDocument2">Second output document file name.</param>
            <param name="splitAtPageNumber">1-based page number to split at. It will be first page of the second document.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExtractPageFromDocument(System.String,System.String,System.Int32)">
            <summary>
             Extracts specified page from PDF or TIFF document to separate file.
            </summary>
            <param name="sourceDocument">Source PDF or TIFF document to split.</param>
            <param name="destinationDocument">Output document file name.</param>
            <param name="pageNumber">1-based page number to extract.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.SplitDocumentCOM(System.String,System.String)">
            <summary>
            COM/ActiveX compatible function for Split(string sourceDocument, string ranges) that returns string with filenames delimited by line feed \n
            Splits PDF or TIFF document to multiple documents according to specified ranges.
            </summary>
            <param name="sourceDocument">The source document.</param>
            <param name="ranges">Comma-separated list of page ranges in form "1-4,5,7,8-15,16-". Page numbers are 1-based. Ending "-" means "to the last page".</param>
            <returns>Array of file names of generated document parts.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToXML(System.String)">
            <summary>
            Exports found barcodes to XML file.
            </summary>
            <param name="fileName">Output XML file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToXML">
            <summary>
            Exports found barcodes to XML document.
            </summary>
            <returns>
                <see cref="T:System.Xml.XmlDocument" /> containing found barcodes.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String)">
            <summary>
            Exports found barcodes to CSV file with default delimiter (,) and quotation (") symbols.
            </summary>
            <param name="fileName">Output CSV file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String,System.String,System.String)">
            <summary>
            Exports found barcodes to CSV file with specified delimiter and quotation symbols.
            </summary>
            <param name="fileName">Output CSV file name.</param>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Exports found barcodes to CSV file with specified delimiter, quotation symbol and character encoding.
            </summary>
            <param name="fileName">Output CSV file name.</param>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
            <param name="encoding">Character encoding.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV">
            <summary>
            Exports found barcodes to CSV format with default delimiter (,) and quotation (") symbols.
            </summary>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in CSV format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToCSV(System.String,System.String)">
            <summary>
            Exports found barcodes to CSV format with specified delimiter and quotation symbols.
            </summary>
            <param name="delimiterSymbol">Delimiter symbol.</param>
            <param name="quotationSymbol">Quotation symbol.</param>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in CSV format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToTXT(System.String)">
            <summary>
            Exports found barcodes to plain text file (TXT).
            </summary>
            <param name="fileName">Output TXT file name.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToTXT(System.String,System.Text.Encoding)">
            <summary>
            Exports found barcodes to plain text file (TXT) in specified character encoding.
            </summary>
            <param name="fileName">Output TXT file name.</param>
            <param name="encoding">Character encoding.</param>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.ExportFoundBarcodesToTXT">
            <summary>
            Exports found barcodes to plain text format (TXT).
            </summary>
            <returns>
                <see cref="T:System.String" /> containing found barcodes in plain text format.</returns>
        </member>
        <member name="M:Bytescout.BarCodeReader.Reader.LoadProfiles(System.String)">
            <summary>
            Loads profiles from file.
            </summary>
            <param name="fileName">JSON file containing profiles.</param>
        </member>
        <member name="T:Bytescout.BarCodeReader.ScanAreaType">
            <summary>
            Describes all supported scan areas.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.Custom">
            <summary>
            (0) Custom scan area set. Use <see cref="P:Bytescout.BarCodeReader.Reader.ScanArea" /> property to read or update scan area.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.TopLeftQuarter">
            <summary>
            (1) Top left quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.TopRightQuarter">
            <summary>
            (2) Top right quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.BottomRightQuarter">
            <summary>
            (4) Bottom right quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.BottomLeftQuarter">
            <summary>
            (8) Bottom left quarter of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.TopHalf">
            <summary>
            (3) Top half of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.BottomHalf">
            <summary>
            (12) Bottom half of the page gets scanned for barcodes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.ScanAreaType.WholePage">
            <summary>
            (15) Whole page gets scanned for barcodes.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.SymbologyType">
            <summary>
            Describes all supported barcode symbologies (types).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Unknown">
            <summary>
            (0) Indicates that barcode symbology is unknown.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Codabar">
            <summary>
            (1) Codabar barcode (Also known as Ames Code, USD-4, NW-7, 
            Code 2 of 7). Codabar symbology allows only symbols from this 
            string '0123456789-$:/.+' to be encoded. This symbology used 
            for example in libraries and blood banks.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code128">
            <summary>
            (2) Code 128 barcode. It is a very effective, high-density
            symbology which permits the encoding of alphanumeric (subject to
            alphabet selection) data. Code 128 is a very dense code, used
            extensively worldwide.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1">
            <summary>
            (3) GS1-128 symbology (new name for EAN128 symbology).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39">
            <summary>
            (4) Code 39 barcode (aka USD-3, 3 of 9). Code 39 symbology allows 
            all ASCII symbols to be encoded in extended mode or symbols from
            this string "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%" in 
            standard mode. This symbology used for example by U.S. Government 
            and military, required for DoD applications.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.I2of5">
            <summary>
            (5) Interleaved 2 of 5 barcode (also known as Code 2 of 5 Interleaved). 
            Interleaved 2 of 5 symbology allows only numeric values to be 
            encoded. This symbology is used primarily in the distribution 
            and warehouse industry.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN13">
            <summary>
            (6) EAN-13 barcode. Used with consumer products internationally.
            EAN-13 symbology allows only numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN8">
            <summary>
            (7) EAN-8 barcode. This symbology is a short version of EAN-13 that
            is intended to be used on packaging which would be otherwise 
            too small to use one of the other versions. Used with consumer 
            products internationally. EAN-8 symbology allows only numeric 
            values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UPCA">
            <summary>
            (8) UPC-A barcode. Used with consumer products in U.S. UPC-A
            symbology allows only numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UPCE">
            <summary>
            (9) UPC-E barcode. This symbology is zero-suppression version 
            of UPC-A. It is intended to be used on packaging which would 
            be otherwise too small to use one of the other versions. The 
            code is smaller because it drops out zeros which would otherwise 
            occur in a symbol. Used with consumer products in U.S. 
            UPC-E symbology allows only numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN2">
            <summary>
            (10) The EAN-2 (Also known as EAN/2 and EAN 2) is a supplement to 
            the EAN-13 and UPC-A barcodes. It is often used on magazines 
            and periodicals to indicate an issue number.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.EAN5">
            <summary>
            (11) The EAN-5 (Also known as EAN/5 and EAN 5) is a supplement to
            EAN-13 and UPC-A barcodes. It is often used to give a 
            suggestion for the price of the book.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PDF417">
            <summary>
            (12) PDF417 symbology. This symbology is heavily used in the parcel 
            industry. The PDF417 symbology can encode a vast amount of data 
            into a small space. This symbology allows a maximum data size of 
            1850 text characters, or 2710 digits. 
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.DataMatrix">
            <summary>
            (13) DataMatrix symbology. The most popular application for DataMatrix 
            is marking small items. The Data Matrix can encode text
            and raw data. Usual data size is from a few bytes up to 2 kilobytes.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.QRCode">
            <summary>
            (14) QR Code symbology. QR Code initially was used for tracking
            parts in vehicle manufacturing, but now QR Codes used in a much
            broader context, including both commercial tracking applications
            and convenience-oriented applications aimed at mobile phone
            users (known as mobile tagging).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Aztec">
            <summary>
            (15) Aztec symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.TriopticCode39">
            <summary>
            (16) Trioptic Code 39 symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PatchCode">
            <summary>
            (17) Patch Code symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarOmnidirectional">
            <summary>
            (18) GS1 DataBar Omnidirectional symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarExpanded">
            <summary>
            (19) GS1 DataBar Expanded symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarLimited">
            <summary>
            (20) GS1 DataBar Limited symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarStacked">
            <summary>
            (21) GS1 DataBar Stacked symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GS1DataBarExpandedStacked">
            <summary>
            (22) GS1 DataBar Expanded Stacked symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MaxiCode">
            <summary>
            (23) MaxiCode symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MICR">
            <summary>
            (24) MICR symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.IntelligentMail">
            <summary>
            (25) USPS Intelligent Mail symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.RoyalMail">
            <summary>
            (26) Royal Mail symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.RoyalMailKIX">
            <summary>
            (27) Royal Mail KIX symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.AustralianPostCode">
            <summary>
            (28) Australian Post 4 State Customer Code symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.CodablockF">
            <summary>
            (29) Codablock F symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code16K">
            <summary>
            (30) Code 16K symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PostNet">
            <summary>
            (31) PostNet symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MicroPDF">
            <summary>
            (32) MicroPDF symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code93">
            <summary>
            (33) Code 93 symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.MSI">
            <summary>
            (34) MSI symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.ITF14">
            <summary>
            (35) ITF-14 symbology (Interleaved 2 of 5 restricted to 14 symbols).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN14">
            <summary>
            (36) GTIN-14 barcode (also known as Code 2 of 5 Interleaved with 14 digits). 
            GTIN-14 symbology allows only 14 numeric values to be 
            encoded. This symbology is used primarily in the distribution 
            and warehouse industry.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN13">
            <summary>
            (37) GTIN-13 barcode. Used with consumer products internationally.
            GTIN-13 symbology allows only 13 numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN8">
            <summary>
            (38) GTIN-8 barcode. This symbology is a short version of GTIN-13 that
            is intended to be used on packaging which would be otherwise 
            too small to use one of the other versions. Used with consumer 
            products internationally. GTIN-8 symbology allows only 8 numeric 
            values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.GTIN12">
            <summary>
            (39) GTIN-12 barcode. Used with consumer products in U.S. GTIN-12
            symbology allows only 12 numeric values to be encoded.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.CircularI2of5">
            <summary>
            (40) Circular variation of Interleaved 2 of 5 barcode.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.PZN">
            <summary>
            (41) PZN barcode. German Pharmacy Barcode.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Pharmacode">
            <summary>
            (42) Pharmacode, also known as Pharmaceutical Binary Code, is a barcode standard, used in the pharmaceutical industry as a packing control system. 
            It is designed to be readable despite printing errors.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39Ext">
            <summary>
            (43) Extended Code 39 barcode symbology.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39Mod43">
            <summary>
            (44) Code 39 mod 43 barcode symbology. This is Code 39 with modulo 43 check digit.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Code39Mod43Ext">
            <summary>
            (45) Code 39 mod 43 Extended barcode symbology. This is Extended Code 39 with modulo 43 check digit.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UPU">
            <summary>
            (46) UPU (Universal Postal Union) barcode symbology. This is the Code 39 with modulo 11 check digit.
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Segment">
            <summary>
            (47) Segment element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Circle">
            <summary>
            (48) Circle element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Oval">
            <summary>
            (49) Oval element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Checkbox">
            <summary>
            (50) Checkbox element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.HorizontalLine">
            <summary>
            (51) Horizontal line element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.VerticalLine">
            <summary>
            (52) Vertical line element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.UnderlinedField">
            <summary>
            (53) Underlined field element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.Table">
            <summary>
            (54) Bordered table element of Optical Mark Recognition (OMR).
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.SymbologyType.DPMDataMatrix">
            <summary>
            (55) DPM (Direct Part Marking) DataMatrix symbology.
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaDeviceType">
            <summary>
            Device types supported by WIA
             http://msdn.microsoft.com/en-us/library/ms630792(v=VS.85).aspx
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.UnspecifiedDeviceType">
            <summary>
            (0) Unspecified device type
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.ScannerDeviceType">
            <summary>
            (1) Scanner device type
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.CameraDeviceType">
            <summary>
            (2) Camera device type
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaDeviceType.VideoDeviceType">
            <summary>
            (3) Video device type
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaImageIntent">
            <summary>
            Image color modes
            http://msdn.microsoft.com/en-us/library/ms630798(v=VS.85).aspx
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.UnspecifiedIntent">
            <summary>
            (0) Unspecified intent
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.ColorIntent">
            <summary>
            (1) Color intent
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.GrayscaleIntent">
            <summary>
            (2) Grayscale intent
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageIntent.TextIntent">
            <summary>
            (4) Text intent
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaImageBias">
            <summary>
            Image quality options
            http://msdn.microsoft.com/en-us/library/ms630796(v=VS.85).aspx
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageBias.MinimizeSize">
            <summary>
            (65536) minimize size
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageBias.MaximizeQuality">
            <summary>
            (131072) maximize quality
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WiaImageFormatType">
            <summary>
            Image format to save acquired images into
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.BMP">
            <summary>
            (0) BMP
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.PNG">
            <summary>
            (1) PNG
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.GIF">
            <summary>
            (2) GIF
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.JPEG">
            <summary>
            (3) JPG
            </summary>
        </member>
        <member name="F:Bytescout.BarCodeReader.WiaImageFormatType.TIFF">
            <summary>
            (4) TIFF
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAException">
            <summary>
            WIA exception class to raise exceptions
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAException.#ctor">
            <summary></summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAException.#ctor(System.String)">
            <summary></summary>
            <param name="message"></param>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAException.#ctor(System.String,System.Exception)">
            <summary></summary>
            <param name="message"></param>
            <param name="internalException"></param>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAExceptionWIA2IsNotAvailable">
            <summary>
            indicates when no WIA 2 is accessible
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAExceptionWIA1IsNotAvailable">
            <summary>
            indicates when no WIA 1 is accessible
            </summary>
        </member>
        <member name="T:Bytescout.BarCodeReader.WIAImageScanner">
            <summary>
            This class can be used to call scanner or web-camera and acquire images from it using WIA interface in Windows.
            This class uses WIA 1 or WIA 2 (automatically checks which one is available)
            uses run-time late binding to call WIA 1 (Windows XP) or 2 (Windows Vista or higher)
            so no additional references are required.
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAImageScanner.#ctor">
            <summary>
            Creates image scanner object
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFiles">
            <summary>
            List of acquired image files
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFilesCOM">
            <summary>
            List of acquired image files in ActiveX/COM compatible array
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFolder">
            <summary>
            output folder for acquired images. User's My Pictures folder by default
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputFileNameTemplate">
            <summary>
            Template for output filename. Default is "scanned"
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.ImageIntent">
            <summary>
            Acquired images intent (Color mode)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.OutputImageFormat">
            <summary>
            Output image format
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.DeviceType">
            <summary>
            Device type to work with. By default works with all still imaging devices
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.ShowDeviceSelectionDialog">
            <summary>
            Show device selection dialog or not (true by default)
            </summary>
        </member>
        <member name="P:Bytescout.BarCodeReader.WIAImageScanner.ImageQuality">
            <summary>
            Output image quality. Maximize quality by default
            </summary>
        </member>
        <member name="M:Bytescout.BarCodeReader.WIAImageScanner.Acquire">
            <summary>
            Acquire images from WIA device. Output files are in OutputFiles list
            </summary>
            <returns>true if acquired, false if not</returns>
        </member>
        <member name="T:Newtonsoft.Json.JsonException">
            <summary>
            The exception thrown when an error occurs during JSON serialization or deserialization.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Newtonsoft.Json.JsonReaderException">
            <summary>
            The exception thrown when an error occurs while reading JSON text.
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonReaderException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.JsonReaderException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.JsonReaderException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Newtonsoft.Json.JsonSerializationException">
            <summary>
            The exception thrown when an error occurs during JSON serialization or deserialization.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Newtonsoft.Json.JsonToken">
            <summary>
            Specifies the type of JSON token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.None">
            <summary>
            This is returned by the <see cref="T:Newtonsoft.Json.JsonReader" /> if a <see cref="M:Newtonsoft.Json.JsonReader.Read" /> method has not been called. 
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.StartObject">
            <summary>
            An object start token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.StartArray">
            <summary>
            An array start token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.StartConstructor">
            <summary>
            A constructor start token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.PropertyName">
            <summary>
            An object property name.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Raw">
            <summary>
            Raw JSON.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Integer">
            <summary>
            An integer.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Float">
            <summary>
            A float.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.String">
            <summary>
            A string.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Boolean">
            <summary>
            A boolean.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Null">
            <summary>
            A null token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Undefined">
            <summary>
            An undefined token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.EndObject">
            <summary>
            An object end token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.EndArray">
            <summary>
            An array end token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.EndConstructor">
            <summary>
            A constructor end token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Date">
            <summary>
            A Date.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Bytes">
            <summary>
            Byte data.
            </summary>
        </member>
        <member name="T:Newtonsoft.Json.JsonWriterException">
            <summary>
            The exception thrown when an error occurs while reading JSON text.
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonWriterException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Boolean">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Boolean" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.DateTimeOffset">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.DateTimeOffset" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Boolean}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Int64">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Int64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTime}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTimeOffset}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Decimal}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Double}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Char}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Int32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Int16">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Int16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.UInt16">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Char">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Char" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Byte">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Byte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.SByte">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.SByte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int32}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int16}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt16}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Byte}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.SByte}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.DateTime">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.DateTime" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int64}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Single}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Decimal">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Decimal" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt32}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt64}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Double">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Double" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Single">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Single" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.String" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.UInt32">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.UInt64">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Byte[]">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Byte" />[].
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Guid">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Guid" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Guid}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Guid" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.TimeSpan">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.TimeSpan}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Uri">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Uri" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Newtonsoft.Json.Linq.JTokenType">
            <summary>
            Specifies the type of token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.None">
            <summary>
            No token type has been set.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Object">
            <summary>
            A JSON object.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Array">
            <summary>
            A JSON array.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Constructor">
            <summary>
            A JSON constructor.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Property">
            <summary>
            A JSON object property.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Integer">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Float">
            <summary>
            A float value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.String">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Boolean">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Null">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Undefined">
            <summary>
            An undefined value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Date">
            <summary>
            A date value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Raw">
            <summary>
            A raw JSON value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Bytes">
            <summary>
            A collection of bytes value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Guid">
            <summary>
            A Guid value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Uri">
            <summary>
            A Uri value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.TimeSpan">
            <summary>
            A TimeSpan value.
            </summary>
        </member>
        <member name="T:Newtonsoft.Json.Schema.JsonSchemaException">
            <summary>
                <para>
            Returns detailed information about the schema exception.
            </para>
                <note type="caution">
            JSON Schema validation has been moved to its own package. See <see href="http://www.newtonsoft.com/jsonschema">http://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.Schema.JsonSchemaException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.Schema.JsonSchemaException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.Schema.JsonSchemaException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Newtonsoft.Json.Schema.JsonSchemaType">
            <summary>
                <para>
            The value types allowed by the <see cref="T:Newtonsoft.Json.Schema.JsonSchema" />.
            </para>
                <note type="caution">
            JSON Schema validation has been moved to its own package. See <see href="http://www.newtonsoft.com/jsonschema">http://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.None">
            <summary>
            No type specified.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Float">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Integer">
            <summary>
            Integer type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Boolean">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Array">
            <summary>
            Array type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Null">
            <summary>
            Null type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Any">
            <summary>
            Any type.
            </summary>
        </member>
    </members>
</doc>