<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.BarCode.Compact</name>
  </assembly>
  <members>
    <member name="T:Aspose.BarCode.CustomerInformationInterpretingType">
      <summary>
            Defines the interpreting type (CTable, NTable or Other) of customer information for AustralianPost BarCode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CustomerInformationInterpretingType.CTable">
      <summary>
            Use CTable to interpret the customer information. Allows A..Z, a..z, 1..9, space and # sing.
            </summary>
      <example>
            This sample shows how to generate and recognize Australia Post barcode with CTable Interpreting Type.
            <code>
             [C#]
             using (BarCodeBuilder builder = new BarCodeBuilder())
             {
                builder.SymbologyType = Symbology.AustraliaPost;
                builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.CTable;
                builder.CodeText = "5912345678ABCde";
                
                using (Bitmap image = builder.GenerateBarCodeImage())
                using (BarCodeReader r = new BarCodeReader(image, DecodeType.AustraliaPost))
                {
                   r.CustomerInformationInterpretingType = CustomerInformationInterpretingType.CTable;
                   while (r.Read())
                   {
                       Console.WriteLine("BarCode Type: " + r.GetCodeType());
                       Console.WriteLine("BarCode CodeText: " + r.GetCodeText());
                   }
                }
             }
             
             [VB.NET]
             Using builder As BarCodeBuilder = New BarCodeBuilder()
                builder.SymbologyType = Symbology.AustraliaPost
                builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.CTable
                builder.CodeText = "5912345678ABCde"
             
                Using image As Bitmap = builder.GenerateBarCodeImage()
                Using reader As BarCodeReader = New BarCodeReader(image, DecodeType.AustraliaPost)
                reader.CustomerInformationInterpretingType = CustomerInformationInterpretingType.CTable
                   While r.Read()
                      Console.WriteLine("BarCode Type: " + r.GetReadType())
                      Console.WriteLine("BarCode CodeText: " + r.GetCodeText())
                   End While
                End Using
                End Using
             End Using
             </code></example>
    </member>
    <member name="F:Aspose.BarCode.CustomerInformationInterpretingType.NTable">
      <summary>
            Use NTable to interpret the customer information. Allows digits.
            </summary>
      <example>
            This sample shows how to generate and recognize Australia Post barcode with NTable Interpreting Type.
            <code>
             [C#]
             using (BarCodeBuilder builder = new BarCodeBuilder())
             {
                builder.SymbologyType = Symbology.AustraliaPost;
                builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.NTable;
                builder.CodeText = "59123456781234567";
                
                using (Bitmap image = builder.GenerateBarCodeImage())
                using (BarCodeReader r = new BarCodeReader(image, DecodeType.AustraliaPost))
                {
                   r.CustomerInformationInterpretingType = CustomerInformationInterpretingType.NTable;
                   while (r.Read())
                   {
                       Console.WriteLine("BarCode Type: " + r.GetCodeType());
                       Console.WriteLine("BarCode CodeText: " + r.GetCodeText());
                   }
                }
             }
             
             [VB.NET]
             Using builder As BarCodeBuilder = New BarCodeBuilder()
                builder.SymbologyType = Symbology.AustraliaPost
                builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.NTable
                builder.CodeText = "59123456781234567"
             
                Using image As Bitmap = builder.GenerateBarCodeImage()
                Using reader As BarCodeReader = New BarCodeReader(image, DecodeType.AustraliaPost)
                reader.CustomerInformationInterpretingType = CustomerInformationInterpretingType.NTable
                   While r.Read()
                      Console.WriteLine("BarCode Type: " + r.GetReadType())
                      Console.WriteLine("BarCode CodeText: " + r.GetCodeText())
                   End While
                End Using
                End Using
             End Using
             </code></example>
    </member>
    <member name="F:Aspose.BarCode.CustomerInformationInterpretingType.Other">
      <summary>
            Do not interpret the customer information. Allows 0, 1, 2 or 3 symbol only.
            </summary>
      <example>
            This sample shows how to generate and recognize Australia Post barcode without Customer Interpreting Type.
            <code>
             [C#]
             using (BarCodeBuilder builder = new BarCodeBuilder())
             {
                builder.SymbologyType = Symbology.AustraliaPost;
                builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.Other;
                builder.CodeText = "59123456780123012301230123";
                
                using (Bitmap image = builder.GenerateBarCodeImage())
                using (BarCodeReader r = new BarCodeReader(image, DecodeType.AustraliaPost))
                {
                   r.CustomerInformationInterpretingType = CustomerInformationInterpretingType.Other;
                   while (r.Read())
                   {
                       Console.WriteLine("BarCode Type: " + r.GetCodeType());
                       Console.WriteLine("BarCode CodeText: " + r.GetCodeText());
                   }
                }
             }
             
             [VB.NET]
             Using builder As BarCodeBuilder = New BarCodeBuilder()
                builder.SymbologyType = Symbology.AustraliaPost
                builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.Other
                builder.CodeText = "59123456780123012301230123"
             
                Using image As Bitmap = builder.GenerateBarCodeImage()
                Using reader As BarCodeReader = New BarCodeReader(image, DecodeType.AustraliaPost)
                reader.CustomerInformationInterpretingType = CustomerInformationInterpretingType.Other
                   While r.Read()
                      Console.WriteLine("BarCode Type: " + r.GetReadType())
                      Console.WriteLine("BarCode CodeText: " + r.GetCodeText())
                   End While
                End Using
                End Using
             End Using
             </code></example>
    </member>
    <member name="T:Aspose.BarCode.BarCodeException">
      <summary>
             Represents the exception for creating barcode image.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeException" /> class.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeException" /> class with specified error message.
            </summary>
      <param name="message">The error message of the exception.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeException" /> class with the specified error message and the current exception.
            </summary>
      <param name="message">The error message of the exception.</param>
      <param name="innerException">The current exception is thrown.</param>
    </member>
    <member name="T:Aspose.BarCode.InvalidCodeException">
      <summary>
            The Exception will be thrown when invalid characters contained in the code text.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.InvalidCodeException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the InvalidCodeException class with a specified error message.
            </summary>
      <param name="message">A String that describes the error.</param>
    </member>
    <member name="T:Aspose.BarCode.NamespaceGroupDoc">
      <summary>
            The <b>Aspose.BarCode</b> contains tools for the 1D/2D barcodes generation and drawing.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.NamespaceDoc">
      <summary>
            The <b>Aspose.BarCode</b> contains tools for the 1D/2D barcodes generation and drawing.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Common.NamespaceDoc">
      <summary>
            The <b>BarCode.Common</b> contains common features and helper tools to maintain the main functionality.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Common.Helpers.NamespaceDoc">
      <summary>
            The <b>BarCode.Common.Helpers</b> contains utility classes or wrappers to provide common intermediate functions.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Common.ProcessorSettings">
      <summary>
            Information about using processor cores
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Common.ProcessorSettings.UseAllCores">
      <summary>
            Is needed to use all cores. 
            Compact framework can not determine the number of cores. 
            For compact framework need use field UseOnlyThisCoresCount, to specify the number of cores.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Common.ProcessorSettings.UseOnlyThisCoresCount">
      <summary>
            Specify the number of cores to use. 
            You need to change the property "UseAllCores" to "false". 
            </summary>
      <example>
        <code>
            [C#]
            BarCodeReader.ProcessorSettings.UseAllCores = false;
            reader.ManualHints = ManualHint.InvertImage| ManualHint.IncorrectBarcodes;
            [VB.NET]
            reader.RecognitionMode = RecognitionMode.ManualHints
            reader.ManualHints = ManualHint.InvertImage Or ManualHint.IncorrectBarcodes
            </code>
      </example>
    </member>
    <member name="P:Aspose.BarCode.Common.ProcessorSettings.MaxAdditionalAllowedThreads">
      <summary>
            Specify the maximal number of additional threads to run code in parallel
            </summary>
      <example>
        <code>
            [C#]
            BarCodeReader.ProcessorSettings.MaxAdditionalAllowedThreads = 24;
            </code>
      </example>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.NamespaceDoc">
      <summary>
            The <b>Aspose.BarCode.BarCodeRecognition</b> contains tools for the 1D/2D barcodes recognition.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Recognition.NamespaceDoc">
      <summary>
            The <b>Aspose.BarCode.BarCodeRecognition</b> contains tools for the 1D/2D barcodes recognition.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.ChecksumValidation">
      <summary>
        <para>Enable checksum validation during recognition for 1D barcodes.</para>
        <para>Default is treated as Yes for symbologies which must contain checksum, as No where checksum only possible.</para>
        <para>Checksum never used: Codabar</para>
        <para>Checksum is possible: Code39 Standard/Extended, Standard2of5, Interleaved2of5, Matrix2of5, ItalianPost25, DeutschePostIdentcode, DeutschePostLeitcode, VIN</para>
        <para>Checksum always used: Rest symbologies</para>
      </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ChecksumValidation.Default">
      <summary>
            If checksum is required by the specification - it will be validated.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ChecksumValidation.On">
      <summary>
            Always validate checksum if possible.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ChecksumValidation.Off">
      <summary>
            Do not validate checksum.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.Code128DataPortion">
      <summary>
            Contains the data of subtype for Code128 type barcode
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.Code128DataPortion.Data">
      <summary>
            Gets the part of code text related to subtype.
            </summary>
      <returns>The part of code text related to subtype</returns>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.Code128DataPortion.Code128SubType">
      <summary>
            Gets the type of Code128 subset
            </summary>
      <returns>The type of Code128 subset</returns>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.Code128SubType">
      <summary>
            Contains types of Code128 subset
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.Code128SubType.CodeSetA">
      <summary>
            ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4 ///</summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.Code128SubType.CodeSetB">
      <summary>
            ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4 ///</summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.Code128SubType.CodeSetC">
      <summary>
            00–99 (encodes two digits with a single code point) and FNC1 ///</summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.BarCodeRecognitionException">
      <summary>
            General exception thrown by BarCodeReader, inherited from BarCodeException
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeRecognitionException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeRecognitionException" /> class.
            </summary>
      <param name="message">error message</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeRecognitionException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeRecognitionException" /> class with the specified error message and the current exception.
            </summary>
      <param name="message">The error message of the exception.</param>
      <param name="innerException">The current exception is thrown.</param>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.ICOMBarCodeReader">
      <summary>
            Interface for COM interop usage.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.ICOMBarCodeReader.SetBarCodeImage(System.String)">
      <summary>
            Sets bitmap image for recognition. 
            Must be called before Read() method. 
            </summary>
      <param name="filename">The image file for recogniton.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.ICOMBarCodeReader.SetBarCodeReadType(Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Default BarCodeReader constructor.
            Requires to set image (SetBitmapImage()) before to call Read() method.
            </summary>
      <param name="type">The type of barcode to read.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.ICOMBarCodeReader.Read">
      <summary>
            Reads barcode from the image.
            </summary>
      <returns>True if the next barcode was read successfully; false if there are no more nodes to read.</returns>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader">
      <summary>
            BarCodeReader encapsulates an image which may contain one or several barcodes, it then can perform Read operation to detect barcodes.
            <example>
            This sample shows how to detect Code39 barcode with supplement.
            <code>
            [C#]
            using(BarCodeReader reader = new BarCodeReader(@"c:\test.jpg", DecodeType.Code39Standard))
            {
                while(reader.Read())
                {
                    Console.WriteLine("BarCode Type: " + reader.GetCodeType());
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText());
                }
            }
            [VB.NET]
            Using reader As BarCodeReader = New BarCodeReader("c:\test.jpg", DecodeType.Code39Standard)
                While reader.Read()
                    Console.WriteLine("BarCode Type: " + reader.GetCodeTypeName())
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText())
                End While
            End Using
            </code></example></summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.Close">
      <summary>
            Closes barcode reader.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.Read">
      <summary>
            Reads barcode from the image.
            </summary>
      <example>
            This sample shows how to detect any barcode.
            <code>
            [C#]
            using(BarCodeReader reader = new BarCodeReader(@"c:\test.jpg"))
            {
                while(reader.Read())
                {
                    Console.WriteLine("BarCode Type: " + reader.GetCodeType());
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText());
                }
            }
            
            [VB.NET]
            Using reader As BarCodeReader = New BarCodeReader("c:\test.jpg")
                While reader.Read()
                    Console.WriteLine("BarCode Type: " + reader.GetCodeTypeName())
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText())
                End While
            End Using
            </code></example>
      <returns>True if the next barcode was read successfully; false if there are no more nodes to read.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCodeText">
      <summary>
            Gets the code text.
            Text will not contain the checksum for 1D barcode types, which support the checksum. Please use GetCodeText(true) method to get result with checksum.
            </summary>
      <returns>The code text of the barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCodeText(System.Text.Encoding)">
      <summary>
            Gets the code text with encoding.
            </summary>
      <param name="encoding">The encoding for codetext.</param>
      <returns>A string containing recognized code text.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCodeText(System.Boolean)">
      <summary>
            Gets the code text. 
            Allows to include checksum into result when includeCheckSum is true.
            </summary>
      <param name="includeCheckSum">true to include CheckSum into result; false to return only CodeText.</param>
      <returns>The code text of the barcode with CheckSum or not.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCheckSum">
      <summary>
            Gets the checksum for 1D barcodes.
            </summary>
      <returns>The checksum for 1D barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetAngle">
      <summary>
            Gets the angle of the barcode (0-360). Orientation enum does not included into the calculation.
            </summary>
      <returns>The angle for barcode (0-360).</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCodeBytes">
      <summary>
            Gets the encoded code bytes.
            </summary>
      <returns>The code bytes of the barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetMacroPdf417FileID">
      <summary>
            Gets the file ID of the barcode, only available with MacroPdf417.
            </summary>
      <returns>The file ID for MacroPdf417</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetMacroPdf417SegmentID">
      <summary>
            Gets the segment ID of the barcode,only available with MacroPdf417.
            </summary>
      <returns>The segment ID of the barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetMacroPdf417SegmentsCount">
      <summary>
            Gets macro pdf417 barcode segments count. Default value is -1.
            </summary>
      <returns>Segments count.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCode128DataPortions">
      <summary>
            Gets Code128DataPortion instance for recognized Code128 barcode
            </summary>
      <returns>Array of the Code128 data portions. Returns <c>null</c> if barcode is not Code128.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetQRStructuredAppendModeBarCodesQuantity">
      <summary>
            Gets the QR structured append mode barcodes quantity. Default value is -1.
            </summary>
      <returns>The quantity of the QR structured append mode barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetQRStructuredAppendModeBarCodeIndex">
      <summary>
            Gets the index of the QR structured append mode barcode. Index starts from 0. Default value is -1.
            </summary>
      <returns>The index of the QR structured append mode barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetQRStructuredAppendModeParityData">
      <summary>
            Gets the QR structured append mode parity data. Default value is -1.
            </summary>
      <returns>The QR structured append mode parity data.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetIsDeniable">
      <summary>
            Checks the deniable recognition. Such recognition might occur in max count mode decoding or use ManualHint.IncorrectBarcodes
            </summary>
      <returns>True if the deniable recognition was read.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetRegion">
      <summary>
            Gets the barcode region.
            </summary>
      <returns>The region of the recognized barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCodeType">
      <summary>
            Gets the barcode type.
            </summary>
      <returns>The type information of the recognized barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetCodeTypeName">
      <summary>
            Gets the name of the barcode type.
            </summary>
      <returns>The type name of the recognized barcode.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetRecognitionQuality">
      <summary>
            Gets the recognition quality. Works for 1D and postal barcodes.
            </summary>
      <returns>The recognition quality percent.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.GetDetectEncoding">
      <summary>
            Gets flag to detect codetext encoding for Unicode codesets.
            </summary>
      <returns>Returns detection flag</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.SetDetectEncoding(System.Boolean)">
      <summary>
             Sets flag to detect codetext encoding for Unicode codesets.
             </summary>
      <param name="value">The flag to detect codetext encoding.</param>
      <example>
             This sample shows how to detect text encoding on the fly if DetectEncoding is enabled
             <code>
             [C#]
             using(MemoryStream ms = new MemoryStream())
             {
                 using (BarCodeBuilder bb = new BarCodeBuilder())
                 {
                      bb.CodeText = "Ñëîâî";
                      bb.SymbologyType = Symbology.QR;
                      bb.CodeTextEncoding = Encoding.UTF8;
                      bb.Save(ms, BarCodeImageFormat.Png);
                 }
                 using (BarCodeReader reader = new BarCodeReader(ms, BarCodeReadType.QR))
                 {
                      reader.SetDetectEncoding(true);
                      while(reader.Read())
                           Console.WriteLine("BarCode CodeText: " + reader.GetCodeText());
                 }
                 
                 ms.Position = 0;
                 using (BarCodeReader reader = new BarCodeReader(ms, BarCodeReadType.QR))
                 {
                      reader.SetDetectEncoding(false);
                      while(reader.Read())
                           Console.WriteLine("BarCode CodeText: " + reader.GetCodeText(Encoding.UTF8));
                 }
            }
             </code></example>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class with default values.
            Requires to set image (SetBitmapImage()) before to call Read() method.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.SetBarCodeImage(System.Drawing.Bitmap)">
      <summary>
            Sets bitmap image for recognition. 
            Must be called before Read() method. 
            </summary>
      <param name="value">The bitmap image for recognition.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.SetBarCodeImage(System.String)">
      <summary>
            Sets image file for recognition. 
            Must be called before Read() method. 
            </summary>
      <param name="filename">The image file for recogniton.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.SetBarCodeReadType(Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Sets decode type for recognition. 
            Must be called before Read() method. 
            </summary>
      <param name="type">The type of barcode to read.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.Drawing.Bitmap)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class from an image.
            </summary>
      <param name="image">A Bitmap instance containing the image</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.Drawing.Bitmap,Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            </summary>
      <param name="image">The image.</param>
      <param name="decodeTypes">Decode types.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.Drawing.Bitmap,Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            </summary>
      <param name="image">The image.</param>
      <param name="type">The decode type1. It can be single or multy</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.Drawing.Bitmap,System.Drawing.Rectangle,Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            <b>This constructor overload is not supported in compact framework.</b></summary>
      <param name="image">The image.</param>
      <param name="area">The area for recognition.</param>
      <param name="decodeTypes">Decode types.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.Drawing.Bitmap,System.Drawing.Rectangle,Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            <b>This constructor overload is not supported in compact framework.</b></summary>
      <param name="image">The image.</param>
      <param name="area">The area for recognition.</param>
      <param name="type">The decode type.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.Drawing.Bitmap,System.Drawing.Rectangle[],Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            <b>This constructor overload is not supported in Silverlight.</b></summary>
      <param name="image">The image to read</param>
      <param name="areas">The array of recognition areas</param>
      <param name="decodeTypes">The decode types applicable for all the areas specified.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.Drawing.Bitmap,System.Drawing.Rectangle[],Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            <b>This constructor overload is not supported in Silverlight.</b></summary>
      <param name="image">The image to read</param>
      <param name="areas">The array of recognition areas</param>
      <param name="type">The decode type applicable for all the areas specified.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class from file.
            </summary>
      <param name="filename">The filename.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.String,Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            </summary>
      <param name="filename">The filename.</param>
      <param name="decodeTypes">Decode types.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.String,Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            </summary>
      <param name="filename">The filename.</param>
      <param name="type">The decode type.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.IO.Stream,Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="type">The decode type.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.#ctor(System.IO.Stream,Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.BarCodeReader" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="decodeTypes">Decode types.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.Dispose(System.Boolean)">
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.ExportToXml(System.String)">
      <summary>
            Exports BarCode properties to the xml-file specified
            </summary>
      <param name="xmlFile">The name for the file</param>
      <returns>Whether or not export completed successfully.
             <para>Returns <b>True</b> in case of success; <b>False</b> Otherwise </para></returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeReader.ImportFromXml(System.String)">
      <summary>
            Imports BarCode properties from the xml-file specified and applies them to the current BarCodeBuilder instance. 
            </summary>
      <param name="xmlFile">The name for the file</param>
      <returns>Returns <b>True</b> in case of success; <para><b>False</b> Otherwise </para></returns>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.IsLicensed">
      <summary>
            Gets a value indicating whether recognition module is licensed.
            </summary>
      <value>
        <c>true</c> if recognition module is licensed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.ProcessorSettings">
      <summary>
            Gets a settings of using processor cores.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.Timeout">
      <summary>
            Gets or sets the timeout of recognition process.
            </summary>
      <value>
            The timeout.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.ChecksumValidation">
      <summary>
        <para>Enable checksum validation during recognition for 1D barcodes.</para>
        <para>Default is treated as Yes for symbologies which must contain checksum, as No where checksum only possible.</para>
        <para>Checksum never used: Codabar</para>
        <para>Checksum is possible: Code39 Standard/Extended, Standard2of5, Interleaved2of5, Matrix2of5, ItalianPost25, DeutschePostIdentcode, DeutschePostLeitcode, VIN</para>
        <para>Checksum always used: Rest symbologies</para>
      </summary>
      <value>
            The checksum validation flag.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.MedianSmoothingWindowSize">
      <summary>
            Gets or sets the median smoothing window size. Typical values are 3 or 4. Default value is 3. Recognition hint MedianSmoothing must be set.
            </summary>
      <value>
            The median smoothing window size. Typical values are 3 or 4. Default value is 3.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.StripFNC">
      <summary>
            Strip FNC1, FNC2, FNC3 characters from codetext. Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.CustomerInformationInterpretingType">
      <summary>
            Gets or sets the Interpreting Type for the Customer Information of AustralianPost BarCode.Default is CustomerInformationInterpretingType.Other.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.RecognitionMode">
      <summary>
            Gets or sets the recognition mode. 
            This property allows to quickly set up and tune the processing speed and quality 
            in a way which is the most appropriate for you needs. Default value is MaxPerformance.
            </summary>
      <value>
            The recognition mode. Default value is MaxPerformance.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeReader.ManualHints">
      <summary>
            Allows you to configure options of recognition accuracy and speed manually. 
            You need to change the property "RecognitionMode" to "RecognitionMode.ManualHints". Default value is None.
            </summary>
      <value>
            The manual hints. Default value is None.
            </value>
      <example>
            This sample shows how to detect barcode with manual hints.
            <code>
            [C#]
            using(BarCodeReader reader = new BarCodeReader(@"c:\test.jpg"))
            {
                reader.RecognitionMode = RecognitionMode.ManualHints;
                reader.ManualHints = ManualHint.InvertImage| ManualHint.IncorrectBarcodes;
                while(reader.Read())
                {
                    Console.WriteLine("BarCode Type: " + reader.GetCodeType());
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText());
                }
            }
            
            [VB.NET]
            Using reader As BarCodeReader = New BarCodeReader("c:\test.jpg")
                reader.RecognitionMode = RecognitionMode.ManualHints
                reader.ManualHints = ManualHint.InvertImage Or ManualHint.IncorrectBarcodes 
                While reader.Read()
                    Console.WriteLine("BarCode Type: " + reader.GetCodeTypeName())
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText())
                End While
            End Using
            </code></example>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.BaseDecodeType">
      <summary>
            Base class for MultyDecodeType and SingleDecodeType.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.ContainsAny(Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Determines whether any of the given decode types is included into 
            </summary>
      <param name="types">Types to verify</param>
      <returns>Value is a true if any types are included into</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.Equals(Aspose.BarCode.BarCodeRecognition.SingleDecodeType)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType" /> value.
            </summary>
      <param name="other">An <see cref="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType" /> value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.Equals(Aspose.BarCode.BarCodeRecognition.MultyDecodeType)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType" /> value.
            </summary>
      <param name="other">An <see cref="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType" /> value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.Equals(Aspose.BarCode.BarCodeRecognition.BaseDecodeType)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.BaseDecodeType" /> value.
            </summary>
      <param name="other">An <see cref="T:Aspose.BarCode.BarCodeRecognition.BaseDecodeType" /> value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.Equals(System.Object)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.BaseDecodeType" /> value.
            </summary>
      <param name="obj">An System.Object value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.TryParse(System.String,Aspose.BarCode.BarCodeRecognition.SingleDecodeType@)">
      <summary>
            Converts the string representation of a SingleDecodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string containing a SingleDecodeType representation to convert.</param>
      <param name="result">An actual SingleDecodeType is returned, when conversion has completed successfully; 
            <para>otherwise it returns indefinite type. <seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /> or  SingleDecodeType (-1, "None").</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.TryParse(System.String,Aspose.BarCode.BarCodeRecognition.MultyDecodeType@)">
      <summary>
            Converts the string representation of a MultyDecodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string containing a MultyDecodeType representation to convert.</param>
      <param name="result">An actual MultyDecodeType is returned, when conversion has completed successfully; 
            <para>otherwise it returns indefinite type. <seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /> or MultyDecodeType ("None").</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BaseDecodeType.TryParse(System.String,Aspose.BarCode.BarCodeRecognition.BaseDecodeType@)">
      <summary>
            Converts the string representation of a BaseDecodeType to its instance, having determined the concrete type.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string containing a MultyDecodeType representation to convert.</param>
      <param name="result">An actual MultyDecodeType is returned, when conversion has completed successfully; 
            <para>otherwise it returns indefinite type. <seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /> or MultyDecodeType ("None").</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.DecodeType">
      <summary>
            Specify the type of barcode to read. 
            <example>
            This sample shows how to detect Code39 and Code128 barcode.
            <code>
            [C#]
            using (BarCodeReader reader = new BarCodeReader(@"c:\test.jpg", DecodeType.Code39Standard, DecodeType.Code128))
            {
                while (reader.Read())
                {
                      Console.WriteLine("BarCode Type: " + reader.GetCodeType());
                      Console.WriteLine("BarCode CodeText: " + reader.GetCodeText());
                }
            }
            [VB.NET]
            Using reader As BarCodeReader = New BarCodeReader("c:\test.jpg", DecodeType.Code39Standard, DecodeType.Code128)
                While reader.Read()
                Console.WriteLine("BarCode Type: " + reader.GetCodeTypeName())
                Console.WriteLine("BarCode CodeText: " + reader.GetCodeText())
                End While
            End Using
            </code></example></summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None">
      <summary>
            Unspecified decode type. 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Codabar">
      <summary>
            Specifies that the data should be encoded with <b>CODABAR</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code11">
      <summary>
            Specifies that the data should be encoded with <b>CODE 11</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code39Standard">
      <summary>
            Specifies that the data should be encoded with <b>Standard CODE 39</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code39Extended">
      <summary>
            Specifies that the data should be encoded with <b>Extended CODE 39</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code93Standard">
      <summary>
            Specifies that the data should be encoded with <b>Standard CODE 93</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code93Extended">
      <summary>
            Specifies that the data should be encoded with <b>Extended CODE 93</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code128">
      <summary>
            Specifies that the data should be encoded with <b>CODE 128</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.GS1Code128">
      <summary>
            Specifies that the data should be encoded with <b>GS1 CODE 128</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.EAN8">
      <summary>
            Specifies that the data should be encoded with <b>EAN-8</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.EAN13">
      <summary>
            Specifies that the data should be encoded with <b>EAN-13</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.EAN14">
      <summary>
            Specifies that the data should be encoded with <b>EAN14</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.SCC14">
      <summary>
            Specifies that the data should be encoded with <b>SCC14</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.SSCC18">
      <summary>
            Specifies that the data should be encoded with <b>SSCC18</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.UPCA">
      <summary>
            Specifies that the data should be encoded with <b>UPC-A</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.UPCE">
      <summary>
            Specifies that the data should be encoded with <b>UPC-E</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.ISBN">
      <summary>
            Specifies that the data should be encoded with <b>ISBN</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Standard2of5">
      <summary>
            Specifies that the data should be encoded with <b>Standard 2 of 5</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Interleaved2of5">
      <summary>
            Specifies that the data should be encoded with <b>INTERLEAVED 2 of 5</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Matrix2of5">
      <summary>
            Specifies that the data should be encoded with <b>Matrix 2 of 5</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.ItalianPost25">
      <summary>
            Represents Italian Post 25 barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.IATA2of5">
      <summary>
            Represents IATA 2 of 5 barcode.IATA (International Air Transport Association, "") uses this barcode for the management of air cargo.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.ITF14">
      <summary>
            Specifies that the data should be encoded with <b>ITF14</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.ITF6">
      <summary>
            Specifies that the data should be encoded with <b>ITF6</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.MSI">
      <summary>
            Specifies that the data should be encoded with <b>MSI Plessey</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.VIN">
      <summary>
            Represents VIN (Vehicle Identification Number, "") Barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DeutschePostIdentcode">
      <summary>
            Specifies that the data should be encoded with <b>DeutschePost Ident code</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DeutschePostLeitcode">
      <summary>
            Specifies that the data should be encoded with <b>DeutschePost Leit code</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.OPC">
      <summary>
            Specifies that the data should be encoded with <b>OPC</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.PZN">
      <summary>
             Represents PZN barcode.This Symbology is also known as Pharma Zentral Nummer, "");Pharmazentralnummer
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Pharmacode">
      <summary>
            Represents Pharmacode barcode. This Symbology is also known as Code32
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DataMatrix">
      <summary>
            2D barcode symbology DataMatrix
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.GS1DataMatrix">
      <summary>
            2D barcode symbology GS1DataMatrix
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.QR">
      <summary>
            Specifies that the data should be encoded with <b>QR Code</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Aztec">
      <summary>
            Specifies that the data should be encoded with <b>Aztec</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Pdf417">
      <summary>
            2D barcode symbology Pdf417
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.MacroPdf417">
      <summary>
            Specifies that the data should be encoded with <b>MacroPdf417</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.MicroPdf417">
      <summary>
            Specifies that the data should be encoded with <b>MicroPdf417</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.CodablockF">
      <summary>
            Specifies that the data should be encoded with <b>CodablockF</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.AustraliaPost">
      <summary>
            Represents Australia Post Customer BarCode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Postnet">
      <summary>
            Specifies that the data should be encoded with <b>Postnet</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Planet">
      <summary>
            Specifies that the data should be encoded with <b>Planet</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.OneCode">
      <summary>
            Specifies that the data should be encoded with USPS <b>OneCode</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.RM4SCC">
      <summary>
            Represents RM4SCC barcode. RM4SCC (Royal Mail 4-state Customer Code, "") is used for automated mail sort process in UK.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DatabarOmniDirectional">
      <summary>
            Represents GS1 Databar omni-directional barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DatabarTruncated">
      <summary>
            Represents GS1 Databar truncated barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DatabarLimited">
      <summary>
            Represents GS1 Databar limited barcode, ""); supports recognition only.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DatabarExpanded">
      <summary>
            Represents GS1 Databar expanded barcode, ""); supports recognition only.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DatabarStackedOmniDirectional">
      <summary>
            Represents GS1 Databar stacked omni-directional barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DatabarStacked">
      <summary>
            Represents GS1 Databar stacked barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DatabarExpandedStacked">
      <summary>
            Represents GS1 Databar expanded stacked barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.PatchCode">
      <summary>
            Represents Patch code barcode(T barcode, ""), ""); supports recognition only.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.ISSN">
      <summary>
            Specifies that the data should be encoded with <b>ISSN</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.ISMN">
      <summary>
            Specifies that the data should be encoded with <b>ISMN</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Supplement">
      <summary>
            Specifies that the data should be encoded with <b>Supplement</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.AustralianPosteParcel">
      <summary>
            Specifies that the data should be encoded with <b>Australian Post Domestic eParcel Barcode</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.SwissPostParcel">
      <summary>
            Specifies that the data should be encoded with <b>Swiss Post Parcel Barcode</b> barcode specification. Supported types: Domestic Mail, ""); International Mail, ""); Additional Services (new, "") 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code16K">
      <summary>
            Specifies that the data should be encoded with <b>Swiss Post Parcel Barcode</b> barcode specification. Supported types: Domestic Mail, ""); International Mail, ""); Additional Services (new, "") 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.MicroQR">
      <summary>
            Specifies that the data should be encoded with <b>MicroQR Code</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.CompactPdf417">
      <summary>
            Specifies that the data should be encoded with <b>CompactPdf417</b> (Pdf417Truncated, "") barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.GS1QR">
      <summary>
            Specifies that the data should be encoded with <b>GS1 QR</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.MaxiCode">
      <summary>
            Specifies that the data should be encoded with <b>MaxiCode</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.MicrE13B">
      <summary>
            Specifies that the data should be encoded with <b>MICR E-13B</b> blank specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.Code32">
      <summary>
            Specifies that the data should be encoded with <b>Code32</b> blank specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DataLogic2of5">
      <summary>
            Specifies that the data should be encoded with <b>DataLogic 2 of 5</b> blank specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DotCode">
      <summary>
            Specifies that the data should be encoded with <b>DotCode</b> blank specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.DutchKIX">
      <summary>
            Specifies that the data should be encoded with <b>DotCode</b> blank specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.DecodeType.AllSupportedTypes">
      <summary>
            Specifies that data will be checked with all available symbologies
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.DecodeType.ScanSets(Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Specify scan sets by barcodeTypes
            </summary>
      <param name="barcodeTypes">Array of single and multy decode types</param>
      <returns>A multi decode type</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.DecodeType.GetNames">
      <summary>
            Retrieves an array of the names of the decode types.
            </summary>
      <returns>A string array of the names of the decode types.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.DecodeType.Parse(System.String,Aspose.BarCode.BarCodeRecognition.SingleDecodeType@)">
      <summary>
            Converts the string representation of a SingleDecodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string containing a SingleDecodeType representation to convert.</param>
      <param name="result">An actual SingleDecodeType returns, when conversion has completed successfully; 
            <para>otherwise it returns indefinite type. <seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /> or  SingleDecodeType (-1, "None").</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.DecodeType.TryParse(System.String,Aspose.BarCode.BarCodeRecognition.SingleDecodeType@)">
      <summary>
            Converts the string representation of a SingleDecodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string in the format as "Index:-1; Name:None" to convert.</param>
      <param name="result">An actual SingleDecodeType returns, when conversion has completed successfully; 
            <para>otherwise it returns indefinite type. <seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /> or  SingleDecodeType (-1, "None").</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.DecodeType.TryParse(System.String,Aspose.BarCode.BarCodeRecognition.MultyDecodeType@)">
      <summary>
            Converts the string representation of a MultyDecodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string in the format as either "AllSupportedTypes" or "EAN8,EAN13,CodaBar" to convert.</param>
      <param name="result">An actual MultyDecodeType is returned, when conversion has completed successfully; 
            <para>otherwise it returns indefinite type. <seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /> or  MultyDecodeType ("None").</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.DecodeType.AllSupportedTypesArray">
      <summary>
            Gets an array that represents AllSupportedTypes
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType">
      <summary>
            Composite decode type.
            </summary>
      <example>
            This sample shows how to create compound MultyDecode types that combine SingleDecodeType and MultiDecode types.
            <code> 
            [C#]
            MultyDecodeType types1 = new MultyDecodeType(DecodeType.QR, DecodeType.DataMatrix);
            MultyDecodeType types2 = new MultyDecodeType(types1, DecodeType.Code128, DecodeType.Code39Standard);
            [VB.NET]
            Dim multyType1 As MultyDecodeType 
            multyType1 = New MultyDecodeType(DecodeType.QR, DecodeType.DataMatrix)
            Dim multyType2 As MultyDecodeType
            multyType2 = New MultyDecodeType(multyType1, DecodeType.Code128, DecodeType.Code39Standard)
            </code></example>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.#ctor(Aspose.BarCode.BarCodeRecognition.SingleDecodeType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType" /> class.
            </summary>
      <param name="barcodeTypes">Array of single decode types</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.#ctor(Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType" /> class.
            </summary>
      <param name="barcodeTypes">Array of multy and single decode types</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.Add(Aspose.BarCode.BarCodeRecognition.SingleDecodeType)">
      <summary>
            Adds one more <see cref="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType" /> to the MultyDecodeType.
            </summary>
      <param name="singleType">A Single DecodeType to be added to the list</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.ContainsAll(Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Check if this contains all types from barcode types.
            </summary>
      <param name="barcodeTypes">Input single or multy barcode types</param>
      <returns>Value is a true if all types are included into</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.ToString">
      <summary>
            Overridden method representing MultyDecodeType as a string.
            </summary>
      <returns>
            A string representing MultyDecodeType instance as "singleDecodeType1, singleDecodeType2, ..."
            <para><b>"AllSupportedTypes"</b> returns when all types are included.</para></returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.TryParse(System.String,Aspose.BarCode.BarCodeRecognition.MultyDecodeType@)">
      <summary>
            Converts the string representation of a MultyDecodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string in the format as either "AllSupportedTypes" or "EAN8,EAN13,CodaBar" to convert.</param>
      <param name="result">An actual MultyDecodeType is returned, when conversion has completed successfully; 
            <para>otherwise it returns indefinite type. <seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /> or  MultyDecodeType ("None").</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.ContainsAny(Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Is contain any of types
            </summary>
      <param name="decodeTypes">Decode types</param>
      <returns>Value is a true if any types are included into</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.GetSingleTypes">
      <summary>
            Represents a list of single types.
            </summary>
      <returns>List of single types</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.Equals(Aspose.BarCode.BarCodeRecognition.MultyDecodeType)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType" /> value.
            </summary>
      <param name="other">An <see cref="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType" /> value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.Equals(System.Object)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.MultyDecodeType" /> value.
            </summary>
      <param name="obj">An System.Object value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.MultyDecodeType.GetSingleTypesCount">
      <summary>
            Returns a number of single types.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType">
      <summary>
            Single decode type. See decode type to get instance.
            </summary>
      <example>
            This sample shows how to get instance of single decode type.
            <code>
            [C#]
            SingleDecodeType singleType = DecodeType.QR 
             
            [VB.NET]
            Dim singleType As SingleDecodeType 
            singleType = DecodeType.QR
            </code></example>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.ToString">
      <summary>
            Returns the name of the given SingleDecodeType as a string.
            </summary>
      <returns>A string representing the name of the single decode type</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.GetString">
      <summary>
            Converts the instance of SingleDecodeType to its equivalent string representation.
            The string format is: "Index:-1; Name:None".
            </summary>
      <returns>A string representing the complete value of the single decode type</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.GetString(Aspose.BarCode.BarCodeRecognition.SingleDecodeType)">
      <summary>
            Converts the instance of SingleDecodeType to its equivalent string representation.
            The string format is: "Index:-1; Name:None".
            </summary>
      <param name="instance">The SingleDecodeType instance to convert</param>
      <returns>A string representing the complete value of the given single decode type</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.ContainsAny(Aspose.BarCode.BarCodeRecognition.BaseDecodeType[])">
      <summary>
            Returns a value indicating whether this instance is included into the list specified.
            </summary>
      <param name="types">Array of single and multy decode types</param>
      <returns>Value is a true if any types are included into</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.Equals(Aspose.BarCode.BarCodeRecognition.SingleDecodeType)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType" /> value.
            </summary>
      <param name="other">An <see cref="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType" /> value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.Equals(System.Object)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType" /> value.
            </summary>
      <param name="obj">An System.Object value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.Parse(System.String)">
      <summary>
            Converts the string representation of the name of a SingleDecodeType to its instance.
            </summary>
      <param name="stringDecodeType">A string containing the name of a SingleDecodeType to convert.</param>
      <returns>the instance of <seealso cref="T:Aspose.BarCode.BarCodeRecognition.SingleDecodeType" />, if conversion was successful; otherwise, it returns <b><seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /></b>.</returns>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.TypeIndex">
      <summary>
            Gets an index of decode type
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.SingleDecodeType.TypeName">
      <summary>
            Gets a name of decode type
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.ManualHint">
      <summary>
            Manual hints.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.None">
      <summary>
            There are no heavy recognition algorithms. The fastest recognition algorithms are used there, 
            however if image is noisy recognition will fail. Used by default.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.InvertImage">
      <summary>
            Use when image is white on black background. Typically BarCode images are black on white background.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.IncorrectBarcodes">
      <summary>
            Addition algorithms are included to recognize incorrectly generated or damaged barcodes (skipped bars, stop symbol, etc). May return deniable recognition.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.ComplexBackground">
      <summary>
            Analyzes barcode background. Useful with complex or colored backgrounds.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.MedianSmoothing">
      <summary>
            MedianSmoothing. Works with BarcodeReader's MedianSmoothingWindowSize property. The MaxQuality mode includes this flag by default.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.UseRestoration">
      <summary>
            Starts recognition using only the restoration algorithms from MaxQuality mode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.UseRegular">
      <summary>
            Starts recognition using algorithms from MaxPerfomance mode. Useful to combine with other hints.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.SpecialFormOfCells">
      <summary>
            Starts recognition barcodes with the special form of cells. Example: dot peen Datamatrix. The MaxQuality mode includes this flag by default.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.ManualHint.SkipRotatedBarcodes">
      <summary>
            Switches off algorithms of rotating and so increases the recognition speed.
            It works only for Datamatrix and linear barcodes.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.RecognitionMode">
      <summary>
            Recognition modes. Note: only one recognition mode can be selected.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.RecognitionMode.MaxPerformance">
      <summary>
            Finds all the possible good and average quality barcodes. Uses only the fastest algorithms. Enabled by default.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.RecognitionMode.MaxQuality">
      <summary>
            Finds all the possible barcodes with good or bad quality. Doesn't return potential barcodes. Uses different fast and slow algorithms.  
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.RecognitionMode.MaxBarCodes">
      <summary>
            Extends MaxQuality. Finds even potential barcodes. Uses extra algorithms which may recognize incorrect barcodes,
            barcodes on complex background, noisy or damaged barcodes and etc. You may observe extra spurious barcodes.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeRecognition.RecognitionMode.ManualHints">
      <summary>
            User configures hints optionally. Allows you to adjust the balance between speed and quality manually.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeRecognition.BarCodeRegion">
      <summary>
            Represents the barcode's region.
            </summary>
      <example>
            This sample shows how to draw edges of the barcode region, then fill it.
            <code>
            [C#]
            using (BarCodeReader reader = new BarCodeReader(@"c:\test.jpg",BarCodeReadType.Code39Standard))
            {
                int counter = 0;
                while(reader.Read())
                {
                    Console.WriteLine("BarCode Type: "+reader.GetReadType());
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText());
                    BarCodeRegion region = reader.GetRegion();
                    if(region != null)
                    {
                        Image img = System.Drawing.Image.FromFile(file);
                        Graphics g = Graphics.FromImage(img);
                        region.DrawBarCodeEdges(g,new Pen(Color.Red,1f));
                        img.Save(string.Format(@".\edge_{0}.png" ,counter++));
                        region.FillBarCodeRegion(g,Brushes.Green);
                        img.Save(string.Format(@".\fill_{0}.png", counter++));
                    }
                }
            }
            [VB.NET]
            Using reader As BarCodeReader = New BarCodeReader("c:\test.jpg", BarCodeReadType.Code39Standard)
                Dim counter As Integer
                While reader.Read()
                    counter = counter + 1
                    Console.WriteLine("BarCode Type: " + reader.GetReadType().ToString)
                    Console.WriteLine("BarCode CodeText: " + reader.GetCodeText())
                    Dim region As BarCodeRegion
                    region = reader.GetRegion()
                    If Not region Is Nothing Then
                        Dim img As Image = System.Drawing.Image.FromFile("c:\test.jpg")
                        Dim g As Graphics = Graphics.FromImage(img)
                        region.DrawBarCodeEdges(g, New Pen(Color.Red, 1.0F))
                        img.Save(String.Format(".\edge_{0}.png", counter))
                        region.FillBarCodeRegion(g, Brushes.Green)
                        img.Save(String.Format(".\fill_{0}.png", counter))
                    End If
                End While
            End Using
            </code></example>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeRegion.DrawBarCodeEdges(System.Drawing.Graphics,System.Drawing.Pen)">
      <summary>
            Draws the bar code edges.
            </summary>
      <param name="g">The graphics.</param>
      <param name="pen">Pen that determines the color, width, and style of the polygon.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeRecognition.BarCodeRegion.FillBarCodeRegion(System.Drawing.Graphics,System.Drawing.Brush)">
      <summary>
            Fills the bar code region.
            </summary>
      <param name="g">The graphics.</param>
      <param name="brush">The brush.</param>
    </member>
    <member name="P:Aspose.BarCode.BarCodeRecognition.BarCodeRegion.Points">
      <summary>
            Gets the points of the region.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.ExtCodetextBuilder">
      <summary>
            Helper class for automatic codetext generation of the Extended Codetext Mode
            </summary>
    </member>
    <member name="M:Aspose.BarCode.ExtCodetextBuilder.Clear">
      <summary>
            Clears extended codetext items
            </summary>
    </member>
    <member name="M:Aspose.BarCode.ExtCodetextBuilder.AddPlainCodetext(System.String)">
      <summary>
            Adds plain codetext to the extended codetext items
            </summary>
      <param name="codetext">Codetext in unicode to add as extended codetext item</param>
    </member>
    <member name="M:Aspose.BarCode.ExtCodetextBuilder.AddECICodetext(Aspose.BarCode.ECIEncodings,System.String)">
      <summary>
            Adds codetext with Extended Channel Identifier
            </summary>
      <param name="ECIEncoding">Extended Channel Identifier</param>
      <param name="codetext">Codetext in unicode to add as extended codetext item with Extended Channel Identifier</param>
    </member>
    <member name="M:Aspose.BarCode.ExtCodetextBuilder.GetExtendedCodetext">
      <summary>
            Generate extended codetext from generation items list
            </summary>
      <returns>Return string of extended codetext</returns>
    </member>
    <member name="T:Aspose.BarCode.QrExtCodetextBuilder">
      <summary>
        <para>Extended codetext generator for 2D QR barcodes for ExtendedCodetext Mode of QREncodeMode</para>
        <para>Use Display2DText property of BarCodeBuilder to set visible text to removing managing characters.</para>
      </summary>
      <example>
            This sample shows how to use FNC1 first position in Extended Mode.
            <code>
            [C#]
            //create codetext
            QrExtCodetextBuilder lTextBuilder = new QrExtCodetextBuilder();
            lTextBuilder.AddFNC1FirstPosition();
            lTextBuilder.AddPlainCodetext("000%89%%0");
            lTextBuilder.AddFNC1GroupSeparator();
            lTextBuilder.AddPlainCodetext("12345&lt;FNC1&gt;");
            
            //generate codetext
            string lCodetext = lTextBuilder.GetExtendedCodetext();
            
            //generate
            using(BarCodeBuilder builder = new BarCodeBuilder())
            {
            	builder.SymbologyType = Symbology.QR;
            	builder.QREncodeMode = QREncodeMode.ExtendedCodetext;
            	builder.QRErrorLevel = QRErrorLevel.LevelL;
            	builder.CodeText = lCodetext;
            	builder.Display2DText = "My Text";
            	builder.Save("test.bmp");
            }
            </code></example>
      <example>
            This sample shows how to use FNC1 second position in Extended Mode.
            <code>
            [C#]
            //create codetext
            QrExtCodetextBuilder lTextBuilder = new QrExtCodetextBuilder();
            TextBuilder.AddFNC1SecondPosition("12");
            TextBuilder.AddPlainCodetext("TRUE3456"); 
            
            //generate codetext
            string lCodetext = lTextBuilder.GetExtendedCodetext();
            
            //generate
            using(BarCodeBuilder builder = new BarCodeBuilder())
            {
            	builder.SymbologyType = Symbology.QR;
            	builder.QREncodeMode = QREncodeMode.ExtendedCodetext;
            	builder.QRErrorLevel = QRErrorLevel.LevelL;
            	builder.CodeText = lCodetext;
            	builder.Display2DText = "My Text";
            	builder.Save("test.bmp");
            }
            </code></example>
      <example>
            This sample shows how to use multi ECI mode in Extended Mode.
            <code>
            [C#]
            //create codetext
            QrExtCodetextBuilder lTextBuilder = new QrExtCodetextBuilder();
            TextBuilder.AddECICodetext(ECIEncodings.Win1251, "Will");
            TextBuilder.AddECICodetext(ECIEncodings.UTF8, "Right");
            TextBuilder.AddECICodetext(ECIEncodings.UTF16BE, "Power");
            TextBuilder.AddPlainCodetext(@"t\e\\st");   
            
            //generate codetext
            string lCodetext = lTextBuilder.GetExtendedCodetext();
            
            //generate
            using (BarCodeBuilder builder = new BarCodeBuilder())
            {
            	builder.SymbologyType = Symbology.QR;
            	builder.QREncodeMode = QREncodeMode.ExtendedCodetext;
            	builder.QRErrorLevel = QRErrorLevel.LevelL;
            	builder.CodeText = lCodetext;
            	builder.Display2DText = "My Text";
            	builder.Save("test.bmp");
            }
            </code></example>
    </member>
    <member name="M:Aspose.BarCode.QrExtCodetextBuilder.AddFNC1FirstPosition">
      <summary>
            Adds FNC1 in first position to the extended codetext items
            </summary>
    </member>
    <member name="M:Aspose.BarCode.QrExtCodetextBuilder.AddFNC1SecondPosition(System.String)">
      <summary>
            Adds FNC1 in second position to the extended codetext items
            </summary>
      <param name="codetext">Value of the FNC1 in the second position</param>
    </member>
    <member name="M:Aspose.BarCode.QrExtCodetextBuilder.AddFNC1GroupSeparator">
      <summary>
            Adds Group Separator (GS - '\\u001D') to the extended codetext items
            </summary>
    </member>
    <member name="M:Aspose.BarCode.QrExtCodetextBuilder.GetExtendedCodetext">
      <summary>
            Generates Extended codetext from the extended codetext list.
            </summary>
      <returns>Extended codetext as string</returns>
    </member>
    <member name="T:Aspose.BarCode.TextRenderingHint">
      <summary>
            Represents type of text rendeing.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.TextRenderingHint.SystemDefault">
      <summary>
             Each character is drawn using its glyph bitmap, with the system default rendering hint.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.TextRenderingHint.AntiAlias">
      <summary>
            Each character is drawn using its antialiased glyph bitmap without hinting. Better  quality due to antialiasing.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>
            Each character is drawn using its glyph bitmap.Hinting is used to improve character appearance on stems and curvature.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.GraphicsUnit">
      <summary>
            Specifies the unit of measure for the given data.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.GraphicsUnit.World">
      <summary>
            Specifies the world coordinate system unit as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.GraphicsUnit.Display">
      <summary>
            Specifies the unit of measure of the display device. Typically pixels for video displays, and 1/100 inch for printers.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.GraphicsUnit.Pixel">
      <summary>
            Specifies a device pixel as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.GraphicsUnit.Point">
      <summary>
            Specifies a printer's point (1/72 inch) as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.GraphicsUnit.Inch">
      <summary>
            Specifies the inch as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.GraphicsUnit.Document">
      <summary>
            Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.GraphicsUnit.Millimeter">
      <summary>
            Specifies the millimeter as the unit of measure.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.AztecSymbolMode">
      <summary>
             Specifies the Aztec symbol mode.
             </summary>
      <example>
             This sample shows how to change Aztec Symbol mode and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Aztec;
                   builder.CodeText = "125";
                   builder.AztecSymbolMode = Aspose.BarCode.AztecSymbolMode.Rune;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Aztec
                   builder.CodeText = "125"
                   builder.AztecSymbolMode = Aspose.BarCode.AztecSymbolMode.Rune
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="F:Aspose.BarCode.AztecSymbolMode.Auto">
      <summary>
            Specifies to automatically pick up the best symbol (Compact or Full-range) for Aztec.
            This is default value.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.AztecSymbolMode.Compact">
      <summary>
            Specifies the Compact symbol for Aztec.
            Aztec Compact symbol permits only 1, 2, 3 or 4 layers.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.AztecSymbolMode.FullRange">
      <summary>
            Specifies the Full-range symbol for Aztec.
            Aztec Full-range symbol permits from 1 to 32 layers.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.AztecSymbolMode.Rune">
      <summary>
            Specifies the Rune symbol for Aztec.
            Aztec Runes are a series of small but distinct machine-readable marks. It permits only number value from 0 to 255.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.ICOMBarCodeBuilder">
      <summary>
            Interface for COM-interop usage.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.ICOMBarCodeBuilder.Save(System.String)">
      <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
      <param name="filename">save to this file path</param>
    </member>
    <member name="T:Aspose.BarCode.BarCodeBuilder">
      <summary>
             BarCodeBuilder for backend barcode images generation.
             <para>
             supported symbology:
             1D:
             Codabar, Code11, Code128, Code39Standard, Code39Extended
             Code93Standard, Code93Extended, EAN13, EAN8, Interleaved2of5,
             MSI, Standard2of5, UPCA, UPCE, ISBN, GS1Code128, Postnet, Planet
             EAN14, SCC14, SSCC18, ITF14, SingaporePost
             2D:
             DataMatrix, PDf417, QR code
             </para></summary>
      <example>
             This sample shows how to create and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar;
                   builder.CodeText = "12345678";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar
                   builder.CodeText = "12345678"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="T:Aspose.BarCode.IBarCodeControl">
      <summary>
            IBarCodeControl
            </summary>
    </member>
    <member name="M:Aspose.BarCode.IBarCodeControl.Rotate">
      <summary>
            Rotate barcode image clockwise for 90 degrees
            </summary>
    </member>
    <member name="M:Aspose.BarCode.IBarCodeControl.Rotate(System.Single)">
      <summary>
            Rotate barcode image clockwise
            </summary>
      <param name="angle">Rotation Angle</param>
    </member>
    <member name="M:Aspose.BarCode.IBarCodeControl.Rotate(Aspose.BarCode.RotationDirection,System.Single)">
      <summary>
            Rotate the barcode image
            </summary>
      <param name="direction">rotation direction</param>
      <param name="angle">rotation angle</param>
    </member>
    <member name="M:Aspose.BarCode.IBarCodeControl.Save(System.String)">
      <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
      <param name="filename">save to this file path</param>
    </member>
    <member name="M:Aspose.BarCode.IBarCodeControl.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
      <param name="stream">System.IO.Stream</param>
      <param name="format">System.Drawing.Imaging.ImageFormat</param>
    </member>
    <member name="M:Aspose.BarCode.IBarCodeControl.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
      <param name="filename">save to this file path</param>
      <param name="format">System.Drawing.Imaging.ImageFormat</param>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.EncodeType">
      <summary>
            BarCode's encode type (symbology).
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.ImageWidth">
      <summary>
            BarCode image's width.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.ImageHeight">
      <summary>
            BarCode image's height.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.BarCodeImage">
      <summary>
            Get the BarCode image under current settings.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.xDimension">
      <summary>
            x-dimension, smallest width unit of BarCode's bars or spaces.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.yDimension">
      <summary>
            y-dimension
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.BackColor">
      <summary>
            Background color of the barcode image.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.ForeColor">
      <summary>
            Foreground color of the barcode image, that is, 
            Bar's color of 1D barcode, Module's color of 2D barcode.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.AutoSize">
      <summary>
            Gets or sets a value indicating whether the image size is to be adjusted automatically. Recommended value is <b> true</b>.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.RotationAngleF">
      <summary>
            BarCode image's rotation angle, measured in degree, e.g. RotationAngleF = 0 or RotationAngleF = 360 means no rotation
            If RotationAngleF NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image, please set quality mode to anti-alias
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.GraphicsUnit">
      <summary>
            Measurement of various properties such as Width, Height etc. 
            Default GraphicsUnit: Millimeter
            See <see cref="T:System.Drawing.GraphicsUnit" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.BorderVisible">
      <summary>
            BorderVisible
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.BorderDashStyle">
      <summary>
            BorderDashStyle
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.BorderWidth">
      <summary>
            BorderWidth
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.BorderColor">
      <summary>
            BorderColor
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CaptionAbove">
      <summary>
            CaptionAbove
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CaptionBelow">
      <summary>
            CaptionBelow
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.Margins">
      <summary>
            Margin area around the core BarCode image.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.Resolution">
      <summary>
            Resolution
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodeText">
      <summary>
            Data to be encoded, different types of BarCode may have different CodeText length restrictions.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.Display2DText">
      <summary>
            Display2DText
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.Pdf417Truncate">
      <summary>
            Pdf417Truncate
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.Pdf417ErrorLevel">
      <summary>
            Pdf417ErrorLevel
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.Pdf417CompactionMode">
      <summary>
            Pdf417CompactionMode
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.AspectRatio">
      <summary>
            AspectRatio
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.Columns">
      <summary>
            2D BarCode's columns, if setting is illegal then columns will be calculated automatically
            appliable SymbologyType: Pdf417
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.EnableEscape">
      <summary>
            EnableEscape
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.EnableChecksum">
      <summary>
            EnableChecksum
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CustomerInformationInterpretingType">
      <summary>
            CustomerInformationInterpretingType
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.BarHeight">
      <summary>
            height of 1D barcodes' bars.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.WideNarrowRatio">
      <summary>
            WideNarrowRatio
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextColor">
      <summary>
            CodeTextColor
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodeLocation">
      <summary>
            CodeLocation
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextAlignment">
      <summary>
            CodeTextAlignment
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextSpace">
      <summary>
            CodeTextSpace
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodabarStartSymbol">
      <summary>
            CodabarStartSymbol
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodabarStopSymbol">
      <summary>
            CodabarStopSymbol
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextFont">
      <summary>
            CodeTextFont
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.SupplementData">
      <summary>
            SupplementData
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.SupplementSpace">
      <summary>
            SupplementSpace
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.ImageQuality">
      <summary>
            ImageQuality
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.PostnetShortBarHeight">
      <summary>
            PostnetShortBarHeight
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.PlanetShortBarHeight">
      <summary>
            PlanetShortBarHeight
            </summary>
    </member>
    <member name="P:Aspose.BarCode.IBarCodeControl.TextRenderingHint">
      <summary>
            TextRenderingHint
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.SetBinaryCodeText(System.Byte[])">
      <summary>
            Set the binary data to be encoded.
            </summary>
      <param name="codeText">The binary data to be encoded.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeBuilder" /> class
            default SymbologyType is Code128,
            default CodeText is 12345678.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeBuilder" /> class
            , default SymbologyType is Code128,
            default CodeText is 12345678.
            </summary>
      <param name="container">Add correct component to the container.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeBuilder" /> class with codetext
            , default SymbologyType is Code128.
            </summary>
      <param name="codeText">string text data to be encoded</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor(System.String,Aspose.BarCode.Generation.BaseEncodeType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.BarCodeBuilder" /> class.
            </summary>
      <param name="codeText">string text data to be encoded</param>
      <param name="type">BarCode's type. Use <see cref="T:Aspose.BarCode.Generation.EncodeTypes" /> class to setup a symbology.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Dispose(System.Boolean)">
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.GenerateBarCodeImage">
      <summary>
            Generate the BarCode image under current settings
            </summary>
      <returns>BarCode Image See <see cref="T:System.Drawing.Bitmap" />.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate">
      <summary>
            Rotate barcode image clockwise for 90 degrees
            </summary>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate(System.Single)">
      <summary>
            Rotate barcode image clockwise
            </summary>
      <param name="angle">Rotation Angle</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate(Aspose.BarCode.RotationDirection,System.Single)">
      <summary>
            Rotate the barcode image
            </summary>
      <param name="direction">rotation direction</param>
      <param name="angle">rotation angle</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.GetMinimumBarCodeSize">
      <summary>
             Returns the minimum width and height, in current <see cref="P:Aspose.BarCode.BarCodeBuilder.GraphicsUnit" />, of this BarCode.
             </summary>
      <returns>A <see cref="T:System.Drawing.SizeF" /> structure that represents the minimum width and height, in current <see cref="P:Aspose.BarCode.BarCodeBuilder.GraphicsUnit" />, of this BarCode.</returns>
      <example>
             This sample shows how to save barcode image with minimum size.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Code128;
                   builder.CodeText = "1234567890";
                   builder.GraphicsUnit = GraphicsUnit.Pixel;
                   SizeF minSize = builder.GetMinimumBarCodeSize();      
             
                   builder.AutoSize = false;
                   builder.ImageWidth = minSize.Width;
                   builder.ImageHeight = minSize.Height;
                   builder.Save("test.bmp")
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Code128;
                   builder.CodeText = "1234567890"
                   builder.GraphicsUnit = GraphicsUnit.Pixel
                   Dim SizeF minSize = builder.GetMinimumBarCodeSize()      
             
                   builder.AutoSize = False
                   builder.ImageWidth = minSize.Width
                   builder.ImageHeight = minSize.Height
                   builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.GetOnlyBarCodeImage">
      <summary>
            Gets the only barcode image. Requires license.
            </summary>
      <exception cref="T:Aspose.BarCode.BarCodeException">Throws exception if no license set.</exception>
      <returns>Image's bitmap.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.GetOnlyBarCodeImage(System.Int32)">
      <summary>
            Gets the only barcode image. Requires license.
            </summary>
      <param name="scaleFactor">Minimal value of scale factor is 1. Not limited by the code.</param>
      <exception cref="T:Aspose.BarCode.BarCodeException">Throws exception if no license set.</exception>
      <returns>Image's bitmap.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.GetCustomSizeBarCodeImage(System.Drawing.Size,System.Boolean)">
      <summary>
            Gets the scaled barcode image.
            </summary>
      <param name="customBarCodeSize">BarCode full image size. Default Graphics Unit: Millimeter.</param>
      <param name="allowSpaceAround">if set to <c>true</c> allow space around the barcode.</param>
      <returns>
            Image's bitmap.
            </returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.GetCustomSizeBarCodeImage(System.Single,System.Single,System.Boolean)">
      <summary>
            Gets the scaled barcode image.
            </summary>
      <param name="customBarCodeWidth">BarCode full image width. Default Graphics Unit: Millimeter.</param>
      <param name="customBarCodeHeight">BarCode full image height. Default Graphics Unit: Millimeter.</param>
      <param name="allowSpaceAround">if set to <c>true</c> allow space around the barcode.</param>
      <returns>
            Image's bitmap.
            </returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.IO.Stream,Aspose.BarCode.BarCodeImageFormat)">
      <summary>
            Save BarCodeImage to stream in specific format.
            </summary>
      <param name="stream">Output System.IO.Stream.</param>
      <param name="format">Specifies the file format of the output image.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.String,Aspose.BarCode.BarCodeImageFormat)">
      <summary>
            Save BarCodeImage to specific file in specific format.
            </summary>
      <param name="filename">Save to this file path.</param>
      <param name="format">Specifies the file format of the output image.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Save BarCodeImage to specific file in specific format.
            </summary>
      <param name="filename">Save to this file path.</param>
      <param name="format">System.Drawing.Imaging.ImageFormat.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>
            Save BarCodeImage to specific file in specific format.
            </summary>
      <param name="stream">Output System.IO.Stream.</param>
      <param name="format">System.Drawing.Imaging.ImageFormat.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.String)">
      <summary>
            Save BarCodeImage to specific file in specific format.
            </summary>
      <param name="filename">Save to this file path.</param>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.ExportToXml(System.String)">
      <summary>
            Exports BarCode properties to the xml-file specified.
            </summary>
      <param name="xmlFile">The name for the file.</param>
      <returns>Whether or not export completed successfully.
             <para>Returns <b>True</b> in case of success; <b>False</b> Otherwise </para></returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.ImportFromXml(System.String)">
      <summary>
            Imports BarCode properties from the xml-file specified and applies them to the current BarCodeBuilder instance. 
            </summary>
      <param name="xmlFile">The name for the file.</param>
      <returns>Returns <b>True</b> in case of success; <para><b>False</b> Otherwise </para></returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.IsOverridedDimensionX">
      <summary>
            Check if x dimension is specified by the user
            </summary>
      <returns>
        <b>true</b>in case x dimension is specified by the user; <b>false</b> otherwise.</returns>
    </member>
    <member name="M:Aspose.BarCode.BarCodeBuilder.ToString">
      <summary>
            Overridden method representing BarCodeBuilder as a string.
            </summary>
      <returns>A string representing BarCodeBuilder instance with the following format: "BarCode: SymbologyType:CodeText" </returns>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.IsLicensed">
      <summary>
            Gets a value indicating whether generation module is licensed.
            </summary>
      <value>
        <c>true</c> if generation module is licensed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.EncodeType">
      <summary>
             BarCode's encode type (symbology).
             Use <see cref="T:Aspose.BarCode.Generation.EncodeTypes" /> to set one of more than 64 symbologies:
             Code128, Code39, EAN13, EAN8, DataMatrix, Pdf417, QR, Aztec, MaxiCode, DotCode, Postnet, Planet, OneCode and other.
             </summary>
      <example>
             This sample shows how to create and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar;
                   builder.CodeText = "12345678";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar
                   builder.CodeText = "12345678"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodeText">
      <summary>
             Data to be encoded, different types of BarCode may have different CodeText length restrictions.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.EnableEscape" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment" />.
             </summary>
      <example>
             This sample shows how to create and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar;
                   builder.CodeText = "12345678";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar
                   builder.CodeText = "12345678"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Display2DText">
      <summary>
            Gets or sets the text will displayed on the barcode image. Available only for 2D barcodes. Limited to 1000 chars.
            </summary>
      <value>
            The text to display.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextEncoding">
      <summary>
            Gets or sets the encoding of codetext.
            </summary>
      <value>
            The encoding for codetext.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.EnableEscape">
      <summary>
            Indicates whether explains the character "\" as an escape character in CodeText property. It is worked pdf417, DataMatrix, Code128 only
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText" />.
            If the EnableEscape is true, "\" will be explained as a special escape character. Otherwise, "\" acts as normal characters.
            <remarks>Aspose.BarCode supports inputing decimal ascii code and mnemonic for ASCII control-code characters. For example, \013 and \\CR stands for CR.</remarks></summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont">
      <summary>
             Specify the displaying CodeText's font
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText" />.
             See <see cref="T:System.Drawing.Font" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor">
      <summary>
            Specify the displaying CodeText's Color
            See <see cref="T:System.Drawing.Color" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodeLocation">
      <summary>
            Specify the displaying CodeText Location, set to CodeLocation.None to hide CodeText.
            CodeLocation will be ignored if SymbologyType is UPCE, UPCA, ISBN, EAN8 or EAN13
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor" />
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment">
      <summary>
            Gets or sets the alignment of the code text.
            See <see cref="T:System.Drawing.StringAlignment" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace" />.
            </summary>
      <remarks>
            StringAlignment.Near means CodeText will be aligned to the left
            StringAlignment.Far means CodeText will be aligned to the right
            StringAlignment.Center means CodeText will be aligned to the center
            </remarks>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.RotationAngleF">
      <summary>
            BarCode image rotation angle, measured in degree, e.g. RotationAngleF = 0 or RotationAngleF = 360 means no rotation
            If RotationAngleF NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image, please set quality mode to anti-alias
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CaptionAbove">
      <summary>
             Caption Above the BarCode image. See <see cref="T:Aspose.BarCode.Caption" />.
             CaptionAbove contains the following properties:
             CaptionAbove.Font,
             CaptionAbove.ForeColor,
             CaptionAbove.Space,
             CaptionAbove.Visible,
             CaptionAbove.Text,
             CaptionAbove.TextAlign
             </summary>
      <example>
             This sample shows how to set above caption and save BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
            	      builder.CaptionAbove.Text = "This is a BarCode image";
            	      builder.CaptionAbove.Visible = true;
                   builder.CaptionAbove.Font = new System.Drawing.Font("Arial", 8f);
                   //space between the barcode and the caption
                   builder.CaptionAbove.Space = 2f;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
            	      builder.CaptionAbove.Text = "This is a BarCode image"
            	      builder.CaptionAbove.Visible = True
                   builder.CaptionAbove.Font = New System.Drawing.Font("Arial", 8f)
                   'Space between the barcode and the caption
                   builder.CaptionAbove.Space = 2.0f
                   builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CaptionBelow">
      <summary>
             Caption Below the BarCode image. See <see cref="T:Aspose.BarCode.Caption" />.
             CaptionBelow contains the following properties:
             CaptionBelow.Font,
             CaptionBelow.ForeColor,
             CaptionBelow.Space,
             CaptionBelow.Visible,
             CaptionBelow.Text,
             CaptionBelow.TextAlign
             </summary>
      <example>
             This sample shows how to set below caption and save BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
            	      builder.CaptionBelow.Text = "This is a BarCode image";
            	      builder.CaptionBelow.Visible = true;
                   builder.CaptionBelow.Font = new System.Drawing.Font("Arial", 8f);
                   //space between the barcode and the caption
                   builder.CaptionBelow.Space = 2f;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
            	      builder.CaptionBelow.Text = "This is a BarCode image"
            	      builder.CaptionBelow.Visible = True
                   builder.CaptionBelow.Font = New System.Drawing.Font("Arial", 8f)
                   'Space between the barcode and the caption
                   builder.CaptionBelow.Space = 2.0f
                   builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.GraphicsUnit">
      <summary>
            Measurement of various properties such as Width, Height etc.
            Default GraphicsUnit: Millimeter
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Resolution">
      <summary>
            Gets or sets the resolution of the BarCode image
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.Resolution" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ImageQuality">
      <summary>
            Graphics quality mode, when RotationAngleF not equal to 0, 90, 180 or 270, do set quality mode to anti-alias. Type: Aspose.BarCode.ImageQualityMode
            See <see cref="T:Aspose.BarCode.ImageQualityMode" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.TextRenderingHint">
      <summary>
            Specifies the quality of text rendering.
             </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.AutoSize">
      <summary>
            Adjusts the image size automatically. Recommended: true.
            Default value is true.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ImageWidth">
      <summary>
            BarCode image width See <see cref="P:Aspose.BarCode.BarCodeBuilder.AutoSize" />., if AutoSize is true, ImageWidth will
            be increased accordingly
            Default Graphics Unit: Millimeter
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ImageHeight">
      <summary>
            BarCode image's height See <see cref="P:Aspose.BarCode.BarCodeBuilder.AutoSize" />., if AutoSize is true, ImageHeight will
            be increased accordingly
            Default Graphics Unit: Millimeter
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BorderWidth">
      <summary>
            Border width of the BarCode image
            Default Graphics Unit: Millimeter
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderVisible" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderDashStyle" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderColor" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.xDimension">
      <summary>
            x-dimension is the smallest width of the unit of BarCode bars or spaces.
            increase this will increase the whole barcode image width if AutoSize is true
            Default Graphics Unit: Millimeter
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.yDimension" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.AutoSize" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight">BarHeight</see>.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.yDimension">
      <summary>
             y-dimension, smallest height unit of 2D BarCode's modules.
             Some square symbols (such as DataMatrix) may ignore this and
             use x-dimension for both width unit and height unit
            
             In 2D barcode, y-dimension * rows determines BarCode's height
             In 1D barcode, BarHeight determines BarCode's height.
             Default Graphics Unit: Millimeter
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.xDimension" />.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight">BarHeight</see>.
             </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BarHeight">
      <summary>
            Height of 1D barcodes' bars.
            In 2D barcode, y-dimension * rows determines BarCode's height
            In 1D barcode, BarHeight determines BarCode's height.
            Default Graphics Unit: Millimeter
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.yDimension" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.AspectRatio">
      <summary>
            height/width ratio (yDimension/xDimension) of 2D BarCode module.
            calculated based on xDimension set to 0 means
            not using this feature.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.xDimension" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.yDimension" />.
            </summary>
      <remarks>
            Some 2D BarCodes are square shaped, then AspectRatio is not applicable
            </remarks>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Margins">
      <summary>
            Margin area around the core BarCode image
            If AutoSize is false, then Width and Height is fixed, thus Margins setting will be ignored
            Default Graphics Unit: Millimeter
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.SupplementSpace">
      <summary>
            Space between main the BarCode and supplement BarCode, default Graphics Unit: millimeter
            See <see cref="T:System.Drawing.GraphicsUnit" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.SupplementData" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.PostnetShortBarHeight">
      <summary>
            Short bar's height of Postnet barcode, it has to be between 1 millimeter and 1.5 millimeter (0.04 inch and 0.06 inch). To set up tall bar's height, see BarHeight, which has to be between 8.28 milimeter and 9.72 milimeter (0.115 inch and 0.135 inch)
            see changing See <see cref="P:Aspose.BarCode.BarCodeBuilder.GraphicsUnit" />.
            see setting tall bar's height: See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight">BarHeight</see>.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.PlanetShortBarHeight">
      <summary>
            Short bar's height of Planet barcode, it has to be between 1 millimeter and 1.5 millimeters.
            see changing See <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            see setting tall bar's height: See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight">BarHeight</see>.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace">
      <summary>
            Space between the CodeText and the BarCode.
            Default Graphics Unit: Millimeter
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BarCodeImage">
      <summary>
             Get the BarCode image under current settings.
             </summary>
      <example>
             This sample shows how to create and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar;
                   builder.CodeText = "12345678";
                   builder.BarCodeImage.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar
                   builder.CodeText = "12345678"
            	      builder.BarCodeImage.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BorderVisible">
      <summary>
            Gets or sets a value indicating whether [border visible].
            </summary>
      <value>
        <c>true</c> if [border visible]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BorderColor">
      <summary>
            BarCode Image's border's color
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderWidth" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderVisible" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderDashStyle" /></summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BorderDashStyle">
      <summary>
            Border style of BarCode Image
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderWidth" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderVisible" />.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderColor" /></summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodabarStartSymbol">
      <summary>
             Start symbol (character) of codabar symbology.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodabarStopSymbol" />.
             </summary>
      <example>
             This sample shows how to set start and stop Codabar symbol and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar;
                   builder.CodabarStartSymbol = CodabarSymbol.A;
                   builder.CodabarStopSymbol = CodabarSymbol.B;
                   builder.CodeText = "123456";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar
                   builder.CodabarStartSymbol = CodabarSymbol.A
                   builder.CodabarStopSymbol = CodabarSymbol.B
                   builder.CodeText = "123456"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodabarStopSymbol">
      <summary>
             Stop symbol (character) of codabar symbology.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodabarStartSymbol" />.
             </summary>
      <example>
             This sample shows how to set start and stop Codabar symbol and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar;
                   builder.CodabarStartSymbol = CodabarSymbol.A;
                   builder.CodabarStopSymbol = CodabarSymbol.B;
                   builder.CodeText = "123456";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar
                   builder.CodabarStartSymbol = CodabarSymbol.A
                   builder.CodabarStopSymbol = CodabarSymbol.B
                   builder.CodeText = "123456"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CodabarChecksumMode">
      <summary>
             Get or set the checksum algorithm for Codabar barcodes. Default value is CodabarChecksum.Mod16.
             To enable checksum calculation set value EnableChecksum.Yes to property EnableChecksum.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodabarChecksumMode" />.
             </summary>
      <example>
             This sample shows how to change Codabar checksum algorithm and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar;
                   builder.EnableChecksum = EnableChecksum.Yes;
                   builder.CodabarChecksumMode = CodabarChecksum.Mod10;
                   builder.CodeText = "0123456789";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Codabar
                   builder.EnableChecksum = EnableChecksum.Yes
                   builder.CodabarChecksumMode = CodabarChecksum.Mod10
                   builder.CodeText = "0123456789"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.CustomerInformationInterpretingType">
      <summary>
             Interpreting type for the Customer Information of AustralianPost, default to CustomerInformationInterpretingType.Other"
             </summary>
      <example>
             This sample shows how to change Customer Information of AustralianPost and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.AustraliaPost;
                   builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.CTable;
                   builder.CodeText = "5912345678ABCde";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.AustraliaPost
                   builder.CustomerInformationInterpretingType = CustomerInformationInterpretingType.CTable
                   builder.CodeText = "5912345678ABCde"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ITF14BorderType">
      <summary>
            Border type of ITF14 barcode, quiet zone will be determined by margin settings.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ITF14BorderThickness">
      <summary>
            Gets or sets an ITF14 border (bearer bar) thickness.
            Default value is -1, this means that the thickness is calculated automatically
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ForeColor">
      <summary>
            Foreground color of the barcode image, that is,
            Bar's color of 1D barcode, Module's color of 2D barcode
            See <see cref="T:System.Drawing.Color" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BackColor">
      <summary>
            Background color of the barcode image
            See <see cref="T:System.Drawing.Color" />.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.EnableChecksum">
      <summary>
        <para>Enable checksum during generation 1D barcodes.</para>
        <para>Default is treated as Yes for symbology which must contain checksum, as No where checksum only possible.</para>
        <para>Checksum is possible: Code39 Standard/Extended, Standard2of5, Interleaved2of5, Matrix2of5, ItalianPost25, DeutschePostIdentcode, DeutschePostLeitcode, VIN, Codabar</para>
        <para>Checksum always used: Rest symbology</para>
      </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ThrowExceptionWhenCodeTextIncorrect">
      <summary>
            Only for 1D barcodes.
            If codetext is incorrect and value set to true - exception will be thrown. Otherwise codetext will be corrected to match barcode's specification.
            Exception always will be thrown for: Databar symbology if codetext is incorrect.
            Exception always will not be thrown for: AustraliaPost, SingapurePost, Code39Extended, Code93Extended, Code16K, Code128 symbology if codetext is incorrect.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Columns">
      <summary>
            2D BarCode's columns, if setting is illegal then columns will be calculated automatically
            applicable SymbologyType: Pdf417, CodablockF, DatabarExpandedStacked
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Rows">
      <summary>
            BarCode's rows, if setting is illegal then rows will be calculated automatically.
            Applicable Symbology: Pdf417, DatabarExpandedStacked, CodablockF, DatabarExpandedStacked
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.DataMatrixEncodeMode">
      <summary>
            Encode mode of Datamatrix barcode, default to Auto
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Pdf417CompactionMode">
      <summary>
            Pdf417 symbology type of BarCode's compaction mode, default compaction mode is <c>Auto</c></summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Pdf417Truncate">
      <summary>
            Whether pdf417 symbology type of BarCode is truncated (to reduce space)
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.Pdf417ErrorLevel">
      <summary>
            Gets or sets Pdf417 symbology type of BarCode's error correction level
            ranging from level0 to level8, level0 means no error correction info,
            level8 means best error correction which means a larger picture
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.MacroPdf417SegmentsCount">
      <summary>
            Gets or sets macro pdf417 barcode segments count.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.MacroPdf417SegmentID">
      <summary>
            Gets or sets macro pdf417 barcode's segment ID, which starts from 0, to MacroPdf417SegmentCount - 1.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.MacroPdf417FileID">
      <summary>
            Gets or sets macro pdf417 barcode's file ID.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.WideNarrowRatio">
      <summary>
            Wide bars to Narrow bars ratio for some 1D BarCode.
            Default WideNarrowRatio:3, that is, wide bars are 3 times as wide as narrow bars
            Applicable symbology: Code39Extended, Code39Standard, Standard2of5, Interleaved2of5, Pharmacode
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.SupplementData">
      <summary>
             Supplement data following BarCodes of symbology UPCA, UPCE, EAN13, EAN8, ISBN, Interleaved2of5 or Standard2of5.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.SupplementSpace" />.
             </summary>
      <example>
             This sample shows how to set supplement data for UPCE and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.UPCE;
                   builder.SupplementData = "11"
                   builder.CodeText = "123456";
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.UPCE
                   builder.SupplementData = "11"
                   builder.CodeText = "123456"
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.QRErrorLevel">
      <summary>
             Level of Reed-Solomon error correction for QR barcode. From low to high: LevelL, LevelM, LevelQ, LevelH. see QRErrorLevel.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.QRVersion">
      <summary>
            Version of QR Code.
            From Version1 to Version40 for QR code and from M1 to M4 for MicroQr.
            Default value is QRVersion.Auto.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.QREncodeMode">
      <summary>
            QR symbology type of BarCode's encoding mode, default mode is <c>Auto</c></summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.QREncodeType">
      <summary>
             QR / MicroQR selector mode. Select ForceQR for standard QR symbols, Auto for MicroQR.
             </summary>
      <example>
             This sample shows how to encode MicroQR and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR;
                   builder.CodeText = "12345TEXT";
                   builder.QREncodeType = QREncodeType.ForceMicroQR;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR
                   builder.CodeText = "12345TEXT"
                   builder.QREncodeType = QREncodeType.ForceMicroQR
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.ECIEncoding">
      <summary>
             Extended Channel Interpretation Identifiers. It is used to tell the barcode reader details
             about the used references for encoding the data in the symbol.
             Current implementation consists all well known charset encodings.
             Currently, it is used only for QR 2D barcode.
             </summary>
      <example>
             This sample shows how to use ECI encoding and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR;
                   builder.CodeText = "12345TEXT";
                   builder.QREncodeMode = QREncodeMode.ECIEncoding;
                   builder.QREncodeType = QREncodeType.ForceQR;
                   builder.ECIEncoding = ECIEncodings.UTF8;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR
                   builder.CodeText = "12345TEXT"
                   builder.QREncodeMode = QREncodeMode.ECIEncoding;
                   builder.QREncodeType = QREncodeType.ForceQR
                   builder.ECIEncoding = ECIEncodings.UTF8
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.MaxiCodeEncodeMode">
      <summary>
            Gets or sets a MaxiCode encode mode
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.AztectErrorLevel">
      <summary>
            Level of error correction of Aztec types of barcode. value should between 10 to 95
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.DotCodeMask">
      <summary>
            Mask of Dotcode barcode, default to Auto
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.AztecSymbolMode">
      <summary>
             Gets or sets a Aztec Symbol mode. Default is Auto mode.
             </summary>
      <example>
             This sample shows how to change Aztec Symbol mode and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Aztec;
                   builder.CodeText = "Aztec Full-range text";
                   builder.AztecSymbolMode = Aspose.BarCode.AztecSymbolMode.FullRange;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.Aztec
                   builder.CodeText = "Aztec Full-range text"
                   builder.AztecSymbolMode = Aspose.BarCode.AztecSymbolMode.FullRange
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.FilledBars">
      <summary>
            Only for 1D barcodes.
            Gets or sets a value indicating whether bars filled.
            Default value is true.
            </summary>
      <value>
        <c>true</c> if bars filled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.DatamatrixEcc">
      <summary>
            Gets or sets a Datamatrix ECC type. Default value is ECC200
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.BarWidthReduction">
      <summary>
            Bar width reduction. Default Graphics Unit: Millimeter 
            (to change see <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>).
            </summary>
    </member>
    <member name="P:Aspose.BarCode.BarCodeBuilder.AlwaysShowChecksum">
      <summary>
             Always display checksum digit in the human readable text for Code128 and GS1Code128 barcodes.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BarCodeImageFormat">
      <summary>
            Specifies the file format of the image.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeImageFormat.Bmp">
      <summary>
            Specifies the bitmap (BMP) image format.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeImageFormat.Gif">
      <summary>
            Specifies the Graphics Interchange Format (GIF) image format.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeImageFormat.Jpeg">
      <summary>
            Specifies the Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeImageFormat.Png">
      <summary>
            Specifies the W3C Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BarCodeImageFormat.Svg">
      <summary>
            Specifies the Scalable Vector Graphics (SVG) image format.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.BorderDashStyle">
      <summary>
            Specifies the style of dashed border lines.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BorderDashStyle.Solid">
      <summary>
            Specifies a solid line.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BorderDashStyle.Dash">
      <summary>
            Specifies a line consisting of dashes.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Caption">
      <summary>
            The text caption shown in the barcode image. There are two captions: CaptionBelow and CaptionAbove
            </summary>
    </member>
    <member name="M:Aspose.BarCode.Caption.Copy">
      <summary>
            Get a new copy of the caption instance.
            </summary>
      <returns>The new copy of the instance.</returns>
    </member>
    <member name="M:Aspose.BarCode.Caption.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.Caption" /> class with default vaule.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.Caption.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.Caption" /> class with specified text. 
            </summary>
      <param name="text">The text content of the caption object</param>
    </member>
    <member name="M:Aspose.BarCode.Caption.#ctor(System.String,System.Boolean,System.Drawing.StringAlignment,System.Single,System.Drawing.Color,System.Drawing.Font)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.Caption" /> class.
            </summary>
      <param name="text">The context of the caption.</param>
      <param name="visible">Indicates whether the caption is visible.</param>
      <param name="alignment">The alignment of the text in the caption.</param>
      <param name="space">The amount of space in the caption.</param>
      <param name="color">The forecolor of the text in the caption.</param>
      <param name="font">The font of the text in the caption.</param>
    </member>
    <member name="M:Aspose.BarCode.Caption.Dispose">
      <summary>
            Dispose the Caption instance
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Caption.Visible">
      <summary>
            Gets or sets a value indicates whether the <see cref="T:Aspose.BarCode.Caption">caption</see> is visible. 
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Caption.ForeColor">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Color">forecolor</see> of the <see cref="T:Aspose.BarCode.Caption">caption</see>.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Caption.Font">
      <summary>
            Gets or sets the <see cref="T:System.Drawing.Font">font</see> of the <see cref="T:Aspose.BarCode.Caption">caption</see>.
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Caption.Space">
      <summary>
            Gets or sets the space between the caption and the barcode,
            and the space between border and the caption
            </summary>
      <remarks>
            The measure unit of the <b>space</b> for the caption is indicated by the <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            </remarks>
      <exception cref="T:System.ArgumentException">
        <p>The <b>Space</b> parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="P:Aspose.BarCode.Caption.TextAlign">
      <summary>
            Gets or sets the text alignment of the caption.
            e.g. when the text is writing from left to right, StringAlignment.Near means the Caption will be aligned to the left
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Caption.Text">
      <summary>
            Gets or sets the content of the caption.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.CodabarChecksumMode">
      <summary>
            Specifies the checksum algorithm for Codabar
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodabarChecksumMode.Mod10">
      <summary>
            Specifies Mod 10 algorithm for Codabar.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodabarChecksumMode.Mod16">
      <summary>
            Specifies Mod 16 algorithm for Codabar (recomended AIIM).
            </summary>
    </member>
    <member name="T:Aspose.BarCode.CodabarSymbol">
      <summary>
            Specifies the start or stop symbol of the Codabar barcode specification.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodabarSymbol.A">
      <summary>
            Specifies character A as the start or stop symbol of the Codabar barcode specification.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodabarSymbol.B">
      <summary>
            Specifies character B as the start or stop symbol of the Codabar barcode specification.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodabarSymbol.C">
      <summary>
            Specifies character C as the start or stop symbol of the Codabar barcode specification.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodabarSymbol.D">
      <summary>
            Specifies character D as the start or stop symbol of the Codabar barcode specification.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.CodeLocation">
      <summary>
            Specifies the location of the code text shown in the image.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodeLocation.Above">
      <summary>
            Specifies that the code text is shown on the top of the bar code.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodeLocation.Below">
      <summary>
            Specifies that the code text is shown on the bottom of the bar code.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodeLocation.None">
      <summary>
            Specifies that the code text is hidden. 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.CodeLocation.Right">
      <summary>
            Specifies that the code text is shown on the right of the bar code.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.DataMatrixEccType">
      <summary>
            Specify the type of the ECC to encode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEccType.EccAuto">
      <summary>
            Specifies that encoded Ecc type is defined by default Reed-Solomon error correction or ECC 200.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEccType.Ecc000">
      <summary>
            Specifies that encoded Ecc type is defined ECC 000.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEccType.Ecc050">
      <summary>
            Specifies that encoded Ecc type is defined ECC 050.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEccType.Ecc080">
      <summary>
            Specifies that encoded Ecc type is defined ECC 080.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEccType.Ecc100">
      <summary>
            Specifies that encoded Ecc type is defined ECC 100.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEccType.Ecc140">
      <summary>
            Specifies that encoded Ecc type is defined ECC 140.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEccType.Ecc200">
      <summary>
            Specifies that encoded Ecc type is defined ECC 200. Recommended to use.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.DataMatrixEncodeMode">
      <summary>
            DataMatrix encoder's encoding mode, default to Auto
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEncodeMode.Auto">
      <summary>
            Automatically pick up the best encode mode for Datamatrix encoding
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEncodeMode.ASCII">
      <summary>
            Encodes one alphanumeric or two numeric characters per byte
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEncodeMode.Full">
      <summary>
            Encode 8 bit values
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEncodeMode.Custom">
      <summary>
            Encode with the encoding specified in BarCodeBuilder.CodeTextEncoding
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEncodeMode.C40">
      <summary>
            Uses C40 encoding. Encodes Upper-case alphanumeric, Lower case and special characters
            </summary>
    </member>
    <member name="F:Aspose.BarCode.DataMatrixEncodeMode.Text">
      <summary>
            Uses Text encoding. Encodes Lower-case alphanumeric, Upper case and special characters
            </summary>
    </member>
    <member name="T:Aspose.BarCode.ECIEncodings">
      <summary>
        <para>
             Extended Channel Interpretation Identifiers. It is used to tell the barcode reader details 
             about the used references for encoding the data in the symbol.
             Current implementation consists all well known charset encodings.
             Currently, it is used only for QR 2D barcode.
             </para>
      </summary>
      <example>
             This sample shows how to use ECI encoding and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR;
                   builder.CodeText = "12345TEXT";
                   builder.QREncodeMode = QREncodeMode.ECIEncoding;
                   builder.QREncodeType = QREncodeType.ForceQR;
                   builder.ECIEncoding = ECIEncodings.UTF8;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR
                   builder.CodeText = "12345TEXT"
                   builder.QREncodeMode = QREncodeMode.ECIEncoding;
                   builder.QREncodeType = QREncodeType.ForceQR
                   builder.ECIEncoding = ECIEncodings.UTF8
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_1">
      <summary>ISO/IEC 8859-1 Latin alphabet No. 1 encoding. ECI Id:"\000003"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_2">
      <summary>ISO/IEC 8859-2 Latin alphabet No. 2 encoding. ECI Id:"\000004"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_3">
      <summary>ISO/IEC 8859-3 Latin alphabet No. 3 encoding. ECI Id:"\000005"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_4">
      <summary>ISO/IEC 8859-4 Latin alphabet No. 4 encoding. ECI Id:"\000006"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_5">
      <summary>ISO/IEC 8859-5 Latin/Cyrillic alphabet encoding. ECI Id:"\000007"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_6">
      <summary>ISO/IEC 8859-6 Latin/Arabic alphabet encoding. ECI Id:"\000008"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_7">
      <summary>ISO/IEC 8859-7 Latin/Greek alphabet encoding. ECI Id:"\000009"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_8">
      <summary>ISO/IEC 8859-8 Latin/Hebrew alphabet encoding. ECI Id:"\000010"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_9">
      <summary>ISO/IEC 8859-9 Latin alphabet No. 5 encoding. ECI Id:"\000011"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_10">
      <summary>ISO/IEC 8859-10 Latin alphabet No. 6 encoding. ECI Id:"\000012"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_11">
      <summary>ISO/IEC 8859-11 Latin/Thai alphabet encoding. ECI Id:"\000013"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_13">
      <summary>ISO/IEC 8859-13 Latin alphabet No. 7 (Baltic Rim) encoding. ECI Id:"\000015"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_14">
      <summary>ISO/IEC 8859-14 Latin alphabet No. 8 (Celtic) encoding. ECI Id:"\000016"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_15">
      <summary>ISO/IEC 8859-15 Latin alphabet No. 9 encoding. ECI Id:"\000017"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.ISO_8859_16">
      <summary>ISO/IEC 8859-16 Latin alphabet No. 10 encoding. ECI Id:"\000018"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.Shift_JIS">
      <summary>Shift JIS (JIS X 0208 Annex 1 + JIS X 0201) encoding. ECI Id:"\000020"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.Win1250">
      <summary>Windows 1250 Latin 2 (Central Europe) encoding. ECI Id:"\000021"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.Win1251">
      <summary>Windows 1251 Cyrillic encoding. ECI Id:"\000022"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.Win1252">
      <summary>Windows 1252 Latin 1 encoding. ECI Id:"\000023"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.Win1256">
      <summary>Windows 1256 Arabic encoding. ECI Id:"\000024"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.UTF16BE">
      <summary>ISO/IEC 10646 UCS-2 (High order byte first) encoding. ECI Id:"\000025"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.UTF8">
      <summary>ISO/IEC 10646 UTF-8 encoding. ECI Id:"\000026"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.US_ASCII">
      <summary>ISO/IEC 646:1991 International Reference Version of ISO 7-bit coded character set encoding. ECI Id:"\000027"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.Big5">
      <summary>Big 5 (Taiwan) Chinese Character Set encoding. ECI Id:"\000028"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.GB18030">
      <summary>GB (PRC) Chinese Character Set encoding. ECI Id:"\000029"</summary>
    </member>
    <member name="F:Aspose.BarCode.ECIEncodings.EUC_KR">
      <summary>Korean Character Set encoding. ECI Id:"\000030"</summary>
    </member>
    <member name="T:Aspose.BarCode.EnableChecksum">
      <summary>
        <para>Enable checksum during generation for 1D barcodes.</para>
        <para>Default is treated as Yes for symbologies which must contain checksum, as No where checksum only possible.</para>
        <para>Checksum never used: Codabar</para>
        <para>Checksum is possible: Code39 Standard/Extended, Standard2of5, Interleaved2of5, Matrix2of5, ItalianPost25, DeutschePostIdentcode, DeutschePostLeitcode, VIN</para>
        <para>Checksum always used: Rest symbologies</para>
      </summary>
    </member>
    <member name="F:Aspose.BarCode.EnableChecksum.Default">
      <summary>
            If checksum is required by the specification - it will be attached.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.EnableChecksum.Yes">
      <summary>
            Always use checksum if possible.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.EnableChecksum.No">
      <summary>
            Do not use checksum.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Generation.BarcodeClassifications">
      <summary>
            Symbology classification    
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.BarcodeClassifications.None">
      <summary>
            Unspecified classification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.BarcodeClassifications.Type1D">
      <summary>
            Specifies 1D-barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.BarcodeClassifications.Type2D">
      <summary>
            Specifies 2D-barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.BarcodeClassifications.Postal">
      <summary>
            Specifies Postal-barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.BarcodeClassifications.Databar">
      <summary>
            Specifies DataBar-barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.BarcodeClassifications.Coupon">
      <summary>
            Specifies Coupon-barcode
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Generation.BaseEncodeType">
      <summary>
            Base class for SymbologyEncodeType.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.ToString">
      <summary>
            Returns the name of the given BaseEncodeType as a string.
            </summary>
      <returns>A string representing the name of the encode type</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.GetString">
      <summary>
            Converts the instance of BaseEncodeType to its equivalent string representation.
            The string format is: "Index:0; Name:Codabar".
            </summary>
      <returns>A string representing the complete value of the encode type</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.GetString(Aspose.BarCode.Generation.BaseEncodeType)">
      <summary>
            Converts the instance of BaseEncodeType to its equivalent string representation.
            The string format is: "Index:-1; Name:None".
            </summary>
      <param name="instance">The BaseEncodeType instance to convert</param>
      <returns>A string representing the complete value of the given encode type</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.TryParse(System.String,Aspose.BarCode.Generation.BaseEncodeType@)">
      <summary>
            Converts the string representation of a BaseEncodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string in the format as "Index:-1; Name:None" to convert.</param>
      <param name="result">An actual SingleEncodeType returns, when conversion has completed successfully; 
            <para>otherwise it returns null.</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.TryParse(System.String,Aspose.BarCode.Generation.SymbologyEncodeType@)">
      <summary>
            Converts the string representation of a BaseEncodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string in the format as "Index:-1; Name:None" to convert.</param>
      <param name="result">An actual SingleEncodeType returns, when conversion has completed successfully; 
            <para>otherwise it returns null.</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.Parse(System.String)">
      <summary>
            Converts the string representation of the name of a BaseEncodeType to its instance.
            </summary>
      <param name="stringEncodeType">A string containing the name of a BaseEncodeType to convert.</param>
      <returns>the instance of <seealso cref="T:Aspose.BarCode.Generation.BaseEncodeType" />, if conversion was successful; otherwise, it returns <b><seealso cref="F:Aspose.BarCode.BarCodeRecognition.DecodeType.None" /></b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.Equals(Aspose.BarCode.Generation.BaseEncodeType)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.Generation.BaseEncodeType" /> value.
            </summary>
      <param name="other">An <see cref="T:Aspose.BarCode.Generation.BaseEncodeType" /> value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.Equals(System.Object)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Aspose.BarCode.Generation.BaseEncodeType" /> value.
            </summary>
      <param name="obj">An System.Object value to compare to this instance.</param>
      <returns>
        <b>true</b> if obj has the same value as this instance; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.BaseEncodeType.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:Aspose.BarCode.Generation.BaseEncodeType.TypeIndex">
      <summary>
            Gets an index of encode type
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Generation.BaseEncodeType.TypeName">
      <summary>
            Gets a name of encode type
            </summary>
    </member>
    <member name="P:Aspose.BarCode.Generation.BaseEncodeType.Classification">
      <summary>
            Gets a classification of this symbology.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Generation.EncodeTypes">
      <summary>
            Specifies the type of barcode to encode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.None">
      <summary>
            Unspecified encode type. 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Codabar">
      <summary>
            Specifies that the data should be encoded with <b>CODABAR</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code11">
      <summary>
            Specifies that the data should be encoded with <b>CODE 11</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code39Standard">
      <summary>
            Specifies that the data should be encoded with <b>Standard CODE 39</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code39Extended">
      <summary>
            Specifies that the data should be encoded with <b>Extended CODE 39</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code93Standard">
      <summary>
            Specifies that the data should be encoded with <b>Standard CODE 93</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code93Extended">
      <summary>
            Specifies that the data should be encoded with <b>Extended CODE 93</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code128">
      <summary>
            Specifies that the data should be encoded with <b>CODE 128</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.GS1Code128">
      <summary>
            Specifies that the data should be encoded with <b>GS1 Code 128</b> barcode specification. The codetext must contains parentheses for AI.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.EAN8">
      <summary>
            Specifies that the data should be encoded with <b>EAN-8</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.EAN13">
      <summary>
            Specifies that the data should be encoded with <b>EAN-13</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.EAN14">
      <summary>
            Specifies that the data should be encoded with <b>EAN14</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.SCC14">
      <summary>
            Specifies that the data should be encoded with <b>SCC14</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.SSCC18">
      <summary>
            Specifies that the data should be encoded with <b>SSCC18</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.UPCA">
      <summary>
            Specifies that the data should be encoded with <b>UPC-A</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.UPCE">
      <summary>
            Specifies that the data should be encoded with <b>UPC-E</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.ISBN">
      <summary>
            Specifies that the data should be encoded with <b>ISBN</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.ISSN">
      <summary>
            Specifies that the data should be encoded with <b>ISSN</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.ISMN">
      <summary>
            Specifies that the data should be encoded with <b>ISMN</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Standard2of5">
      <summary>
            Specifies that the data should be encoded with <b>Standard 2 of 5</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Interleaved2of5">
      <summary>
            Specifies that the data should be encoded with <b>INTERLEAVED 2 of 5</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Matrix2of5">
      <summary>
            Represents Matrix 2 of 5 BarCode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.ItalianPost25">
      <summary>
            Represents Italian Post 25 barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.IATA2of5">
      <summary>
            Represents IATA 2 of 5 barcode.IATA (International Air Transport Assosiation) uses this barcode for the management of air cargo.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.ITF14">
      <summary>
            Specifies that the data should be encoded with <b>ITF14</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.ITF6">
      <summary>
            Represents ITF-6  Barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.MSI">
      <summary>
            Specifies that the data should be encoded with <b>MSI Plessey</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.VIN">
      <summary>
            Represents VIN (Vehicle Identification Number) Barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DeutschePostIdentcode">
      <summary>
            Represents Deutsch Post barcode, This Symbology is also known as Identcode,CodeIdentcode,German Postal 2 of 5 Identcode, 
            Deutsch Post AG Identcode, Deutsch Frachtpost Identcode,  Deutsch Post AG (DHL)
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DeutschePostLeitcode">
      <summary>
            Represents Deutsch Post Leitcode Barcode,also known as German Postal 2 of 5 Leitcode, CodeLeitcode, Leitcode, Deutsch Post AG (DHL).
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.OPC">
      <summary>
            Represents OPC(Optical Product Code) Barcode,also known as , VCA Barcode VCA OPC, Vision Council of America OPC Barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.PZN">
      <summary>
            Represents PZN barcode.This Symbology is also known as Pharmacy central number, Pharmazentralnummer
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code16K">
      <summary>
            Represents Code 16K barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Pharmacode">
      <summary>
            Represents Pharmacode barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DataMatrix">
      <summary>
            2D barcode symbology DataMatrix
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.QR">
      <summary>
            Specifies that the data should be encoded with <b>QR Code</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Aztec">
      <summary>
            Specifies that the data should be encoded with <b>Aztec</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Pdf417">
      <summary>
            Specifies that the data should be encoded with <b>Pdf417</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.MacroPdf417">
      <summary>
            Specifies that the data should be encoded with <b>MacroPdf417</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.GS1DataMatrix">
      <summary>
            2D barcode symbology DataMatrix with GS1 string format
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.MicroPdf417">
      <summary>
            Specifies that the data should be encoded with <b>MicroPdf417</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.GS1QR">
      <summary>
            2D barcode symbology QR with GS1 string format
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.MaxiCode">
      <summary>
            Specifies that the data should be encoded with <b>MaxiCode</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DotCode">
      <summary>
            Specifies that the data should be encoded with <b>DotCode</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.AustraliaPost">
      <summary>
            Represents Australia Post Customer BarCode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Postnet">
      <summary>
            Specifies that the data should be encoded with <b>Postnet</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Planet">
      <summary>
            Specifies that the data should be encoded with <b>Planet</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.OneCode">
      <summary>
            Specifies that the data should be encoded with USPS <b>OneCode</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.RM4SCC">
      <summary>
            Represents RM4SCC barcode. RM4SCC (Royal Mail 4-state Customer Code) is used for automated mail sort process in UK.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DatabarOmniDirectional">
      <summary>
            Specifies that the data should be encoded with <b>GS1 Databar omni-directional</b> barcode specification.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DatabarTruncated">
      <summary>
            Specifies that the data should be encoded with <b>GS1 Databar truncated</b> barcode specification.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DatabarLimited">
      <summary>
            Represents GS1 Databar limited barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DatabarExpanded">
      <summary>
            Represents GS1 Databar expanded barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DatabarExpandedStacked">
      <summary>
            Represents GS1 Databar expanded stacked barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DatabarStacked">
      <summary>
            Represents GS1 Databar stacked barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DatabarStackedOmniDirectional">
      <summary>
            Represents GS1 Databar stacked omni-directional barcode.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.SingaporePost">
      <summary>
            Specifies that the data should be encoded with <b>Singapore Post Barcode</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.AustralianPosteParcel">
      <summary>
            Specifies that the data should be encoded with <b>Australian Post Domestic eParcel Barcode</b> barcode specification 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.SwissPostParcel">
      <summary>
            Specifies that the data should be encoded with <b>Swiss Post Parcel Barcode</b> barcode specification. Supported types: Domestic Mail, International Mail, Additional Services (new) 
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.PatchCode">
      <summary>
            Represents Patch code barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.Code32">
      <summary>
            Specifies that the data should be encoded with <b>Code32</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DataLogic2of5">
      <summary>
            Specifies that the data should be encoded with <b>DataLogic 2 of 5</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.DutchKIX">
      <summary>
            Specifies that the data should be encoded with <b>Dutch KIX</b> barcode specification
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.UpcaGs1Code128Coupon">
      <summary>
            Specifies that the data should be encoded with <b>UPC coupon with GS1-128 Extended Code</b> barcode specification.
            An example of the input string:
            BarCodeBuilder.Codetext = "514141100906(8102)03",
            where UPCA part is "514141100906", GS1Code128 part is (8102)03.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.UpcaGs1DatabarCoupon">
      <summary>
            Specifies that the data should be encoded with <b>UPC coupon with GS1 DataBar addition</b> barcode specification.
            An example of the input string:
            BarCodeBuilder.Codetext = "514141100906(8110)106141416543213500110000310123196000",
            where UPCA part is "514141100906", Databar part is "(8110)106141416543213500110000310123196000".
            To change the caption, use barCodeBuilder.CaptionAbove.Text = "company prefix + offer code";
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.CodablockF">
      <summary>
            Specifies that the data should be encoded with <b>Codablock-F</b> barcode specification.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Generation.EncodeTypes.GS1CodablockF">
      <summary>
            Specifies that the data should be encoded with <b>GS1 Codablock-F</b> barcode specification. The codetext must contains parentheses for AI.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.Generation.EncodeTypes.GetNames">
      <summary>
            Retrieves an array of the names of the encode types.
            </summary>
      <returns>A string array of the names of the encode types.</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.EncodeTypes.Parse(System.String,Aspose.BarCode.Generation.BaseEncodeType@)">
      <summary>
            Converts the string representation of a BaseEncodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string containing a BaseEncodeType representation to convert.</param>
      <param name="result">An actual BaseEncodeType returns, when conversion has completed successfully; 
            <para>otherwise it returns null.</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Generation.EncodeTypes.TryParse(System.String,Aspose.BarCode.Generation.BaseEncodeType@)">
      <summary>
            Converts the string representation of a BaseEncodeType to its instance.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
      <param name="parsingType">A string in the format as "Index:-1; Name:None" to convert.</param>
      <param name="result">An actual SingleEncodeType returns, when conversion has completed successfully; 
            <para>otherwise it returns null.</para></param>
      <returns>
        <b>true</b> if s was converted successfully; otherwise, <b>false</b>.</returns>
    </member>
    <member name="P:Aspose.BarCode.Generation.EncodeTypes.AllEncodeTypes">
      <summary>
            Specifies that data will be checked with all available symbologies.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Generation.SymbologyEncodeType">
      <summary>
            Symbology encode type. See EncodeTypes to get instance.
            </summary>
      <example>
            This sample shows how to get instance of SymbologyEncodeType class.
            <code>
            [C#]
            SymbologyEncodeType symbologyType = EncodeTypes.QR 
             
            [VB.NET]
            Dim symbologyType As SymbologyEncodeType 
            symbologyType = EncodeTypes.QR
            </code></example>
    </member>
    <member name="T:Aspose.BarCode.ImageQualityMode">
      <summary>
            Specifies the quality of the created barcode image. Only applicable to Jpeg format, such as save as .jpg files
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ImageQualityMode.Default">
      <summary>
            Specifies No anti-aliasing image rendering.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ImageQualityMode.AntiAlias">
      <summary>
            Specifies Anti-aliased image rendering. Much better quality due to anti-aliasing, but at a higher performance cost.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.ITF14BorderType">
      <summary>
            ITF14 border type of barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ITF14BorderType.None">
      <summary>
            No border enclosing the barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ITF14BorderType.Frame">
      <summary>
            Frame enclosing the barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ITF14BorderType.Bar">
      <summary>
            Two horizontal bars enclosing the barcode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ITF14BorderType.FrameOut">
      <summary>
            Frame enclosing the barcode. It drawn outside of the barcode, and does not affect the height
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ITF14BorderType.BarOut">
      <summary>
            Two horizontal bars enclosing the barcode. It drawn outside of the barcode, and does not affect the height
            </summary>
    </member>
    <member name="T:Aspose.BarCode.MarginsF">
      <summary>
            Specifies the margins of a barcode image.
            </summary>
      <remarks>
        <p>This class is used to manipulate margins in barcode image.</p>
        <p>
          <b>
            <I>Note</I>
          </b>: The actual amount of the margins are determined by the specified mesure <see cref="T:System.Drawing.GraphicsUnit">unit</see> of the barcode image.</p>
        <p>
          <see cref="P:Aspose.BarCode.MarginsF.Left">Left</see>, <see cref="P:Aspose.BarCode.MarginsF.Right">Right</see>, <see cref="P:Aspose.BarCode.MarginsF.Top">Top</see>, and <see cref="P:Aspose.BarCode.MarginsF.Bottom">Bottom</see> are properties that define the margins.</p>
        <p>
          <see cref="M:Aspose.BarCode.MarginsF.Equals(System.Object)">Equals</see> determines if another object is equal to a <b>MarginsF</b> object.</p>
      </remarks>
    </member>
    <member name="M:Aspose.BarCode.MarginsF.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.MarginsF" /> class with 0 margins.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.MarginsF.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.MarginsF" /> class with specified left, right, top, bottom marigns. 
            </summary>
      <param name="left">The Left marign.</param>
      <param name="right">The right marign.</param>
      <param name="top">The top marign.</param>
      <param name="bottom">The bottom marign.</param>
      <exception cref="T:System.ArgumentException">
        <p>The left parameter value is less than 0.</p>
        <p>-or-</p>
        <p>The right parameter value is less than 0.</p>
        <p>-or-</p>
        <p>The top parameter value is less than 0.</p>
        <p>-or-</p>
        <p>The bottom parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="M:Aspose.BarCode.MarginsF.Set(System.Single)">
      <summary>
            Sets the specified margin for all sides.
            </summary>
      <param name="margin">The margin for all sides.</param>
    </member>
    <member name="M:Aspose.BarCode.MarginsF.Set(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Sets the specified margins.
            </summary>
      <param name="left">The left side.</param>
      <param name="right">The right side.</param>
      <param name="top">The top side.</param>
      <param name="bottom">The bottom side.</param>
    </member>
    <member name="M:Aspose.BarCode.MarginsF.Equals(System.Object)">
      <summary>
            Determines whether two <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instances are equal.
            </summary>
      <param name="obj">The <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instance on the left</param>
      <returns>
        <b>true</b> if the left <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instances is equal to the right one; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.MarginsF.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>A hash code for the current Object.</returns>
    </member>
    <member name="M:Aspose.BarCode.MarginsF.ToString">
      <summary>
            Returns a String that represents the current <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instance.
            </summary>
      <returns>A <see cref="T:System.String">String</see> that represents the current Object.</returns>
    </member>
    <member name="P:Aspose.BarCode.MarginsF.Bottom">
      <summary>
            Gets or sets the <b>bottom</b> marign.
            </summary>
      <exception cref="T:System.ArgumentException">
        <p>The <b>bottom</b> parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="P:Aspose.BarCode.MarginsF.Left">
      <summary>
            Gets or sets the <b>left</b> margin.
            </summary>
      <exception cref="T:System.ArgumentException">
        <p>The <b>Left</b> parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="P:Aspose.BarCode.MarginsF.Right">
      <summary>
            Gets or sets the <b>right</b> margin.
            </summary>
      <exception cref="T:System.ArgumentException">
        <p>The <b>Right</b> parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="P:Aspose.BarCode.MarginsF.Top">
      <summary>
            Gets or sets the <b>top</b> marign.
            </summary>
      <exception cref="T:System.ArgumentException">
        <p>The <b>Top</b> parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="T:Aspose.BarCode.Generation.NamespaceGroupDoc">
      <summary>
            The <b>Aspose.BarCode</b> containing general classes for the implementation of BarCode generation functions.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Generation.NamespaceDoc">
      <summary>
            The <b>Aspose.BarCode</b> containing general classes for the implementation of BarCode generation functions.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Pdf417CompactionMode">
      <summary>
            Pdf417 barcode compaction mode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417CompactionMode.Auto">
      <summary>
            auto detect compaction mode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417CompactionMode.Text">
      <summary>
            text compaction
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417CompactionMode.Numeric">
      <summary>
            numeric compaction mode
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417CompactionMode.Binary">
      <summary>
            binary compaction mode
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Pdf417ErrorLevel">
      <summary>
            pdf417 barcode's error correction level, from level 0 to level 9, level 0 means no error correction, level 9 means best error correction
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level0">
      <summary>
            level = 0.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level1">
      <summary>
            level = 1.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level2">
      <summary>
            level = 2.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level3">
      <summary>
            level = 3.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level4">
      <summary>
            level = 4.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level5">
      <summary>
            level = 5.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level6">
      <summary>
            level = 6.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level7">
      <summary>
            level = 7.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level8">
      <summary>
            level = 8.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.QREncodeMode">
      <summary>
            Encoding mode for QR barcodes. It is recommended to Use Auto with CodeTextEncoding = Encoding.UTF8 for Latin symbols or digits and Utf8BOM for Unicode symbols.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeMode.Auto">
      <summary>
            Encode codetext as is non-Unicode charset. If there is any Unicode character, the codetext will be encoded with value which is set in CodeTextEncoding.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeMode.Bytes">
      <summary>
            Encode codetext as plain bytes. If it detects any Unicode character, the character will be encoded as two bytes, lower byte first.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeMode.Utf8BOM">
      <summary>
            Encode codetext with UTF8 encoding with first ByteOfMark character.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeMode.Utf16BEBOM">
      <summary>
            Encode codetext with UTF8 encoding with first ByteOfMark character. It can be problems with some barcode scanners.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeMode.ECIEncoding">
      <summary>
             Encode codetext with value set in the ECIEncoding property. It can be problems with some old (pre 2006) barcode scanners.
             </summary>
      <example>
             This sample shows how to use ECI encoding and save a BarCode image.
             <code>
             [C#]
            	  using(Aspose.BarCode.BarCodeBuilder builder = new Aspose.BarCode.BarCodeBuilder())
            	  {
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR;
                   builder.CodeText = "12345TEXT";
                   builder.QREncodeMode = QREncodeMode.ECIEncoding;
                   builder.QREncodeType = QREncodeType.ForceQR;
                   builder.ECIEncoding = ECIEncodings.UTF8;
                   builder.Save("test.bmp");
               }
            
            	[VB.NET]
            	  Using builder As Aspose.BarCode.BarCodeBuilder = new Aspose.BarCode.BarCodeBuilder()
                   builder.EncodeType = Aspose.BarCode.EncodeTypes.QR
                   builder.CodeText = "12345TEXT"
                   builder.QREncodeMode = QREncodeMode.ECIEncoding;
                   builder.QREncodeType = QREncodeType.ForceQR
                   builder.ECIEncoding = ECIEncodings.UTF8
            	      builder.Save("test.bmp")
            	  End Using
            	</code></example>
    </member>
    <member name="F:Aspose.BarCode.QREncodeMode.ExtendedCodetext">
      <summary>
        <para>Extended Channel mode which supports FNC1 first position, FNC1 second position and multi ECI modes.</para>
        <para>It is better to use QrExtCodetextBuilder for extended codetext generation.</para>
        <para>Use Display2DText property to set visible text to removing managing characters.</para>
        <para>Encoding Principles:</para>
        <para>All symbols "\" must be doubled "\\" in the codetext.</para>
        <para>FNC1 in first position is set in codetext as as "&lt;FNC1&gt;"</para>
        <para>FNC1 in second position is set in codetext as as "&lt;FNC1(value)&gt;". The value must be single symbols (a-z, A-Z) or digits from 0 to 99.</para>
        <para>Group Separator for FNC1 modes is set as 0x1D character '\\u001D' </para>
        <para> If you need to insert "&lt;FNC1&gt;" string into barcode write it as "&lt;\FNC1&gt;" </para>
        <para>ECI identifiers are set as single slash and six digits identifier "\000026" - UTF8 ECI identifier</para>
        <para>TO disable current ECI mode and convert to default JIS8 mode zero mode ECI indetifier is set. "\000000"</para>
        <para>All unicode characters after ECI identifier are automatically encoded into correct character codeset.</para>
      </summary>
      <example>
            This sample shows how to use FNC1 first position in Extended Mode.
            <code>
            [C#]
            //create codetext
            QrExtCodetextBuilder lTextBuilder = new QrExtCodetextBuilder();
            lTextBuilder.AddFNC1FirstPosition();
            lTextBuilder.AddPlainCodetext("000%89%%0");
            lTextBuilder.AddFNC1GroupSeparator();
            lTextBuilder.AddPlainCodetext("12345&lt;FNC1&gt;");
            
            //generate codetext
            string lCodetext = lTextBuilder.GetExtendedCodetext();
            
            //generate
            using(BarCodeBuilder builder = new BarCodeBuilder())
            {
            	builder.SymbologyType = Symbology.QR;
            	builder.QREncodeMode = QREncodeMode.ExtendedCodetext;
            	builder.QRErrorLevel = QRErrorLevel.LevelL;
            	builder.CodeText = lCodetext;
            	builder.Display2DText = "My Text";
            	builder.Save("test.bmp");
            }
            </code></example>
      <example>
            This sample shows how to use FNC1 second position in Extended Mode.
            <code>
            [C#]
            //create codetext
            QrExtCodetextBuilder lTextBuilder = new QrExtCodetextBuilder();
            TextBuilder.AddFNC1SecondPosition("12");
            TextBuilder.AddPlainCodetext("TRUE3456"); 
            
            //generate codetext
            string lCodetext = lTextBuilder.GetExtendedCodetext();
            
            //generate
            using(BarCodeBuilder builder = new BarCodeBuilder())
            {
            	builder.SymbologyType = Symbology.QR;
            	builder.QREncodeMode = QREncodeMode.ExtendedCodetext;
            	builder.QRErrorLevel = QRErrorLevel.LevelL;
            	builder.CodeText = lCodetext;
            	builder.Display2DText = "My Text";
            	builder.Save("test.bmp");
            }
            </code></example>
      <example>
            This sample shows how to use multi ECI mode in Extended Mode.
            <code>
            [C#]
            //create codetext
            QrExtCodetextBuilder lTextBuilder = new QrExtCodetextBuilder();
            TextBuilder.AddECICodetext(ECIEncodings.Win1251, "Will");
            TextBuilder.AddECICodetext(ECIEncodings.UTF8, "Right");
            TextBuilder.AddECICodetext(ECIEncodings.UTF16BE, "Power");
            TextBuilder.AddPlainCodetext(@"t\e\\st");   
            
            //generate codetext
            string lCodetext = lTextBuilder.GetExtendedCodetext();
            
            //generate
            using (BarCodeBuilder builder = new BarCodeBuilder())
            {
            	builder.SymbologyType = Symbology.QR;
            	builder.QREncodeMode = QREncodeMode.ExtendedCodetext;
            	builder.QRErrorLevel = QRErrorLevel.LevelL;
            	builder.CodeText = lCodetext;
            	builder.Display2DText = "My Text";
            	builder.Save("test.bmp");
            }
            </code></example>
    </member>
    <member name="T:Aspose.BarCode.QREncodeType">
      <summary>
            QR / MicroQR selector mode. Select ForceQR for standard QR symbols, Auto for MicroQR.
            ForceMicroQR is used for strongly MicroQR symbol generation if it is possible.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeType.Auto">
      <summary>
            Mode starts barcode version negotiation from MicroQR V1
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeType.ForceQR">
      <summary>
            Mode starts barcode version negotiation from QR V1
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QREncodeType.ForceMicroQR">
      <summary>
            Mode starts barcode version negotiation from from MicroQR V1 to V4. If data cannot be encoded into MicroQR, exception is thrown.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.QRErrorLevel">
      <summary>
            Level of Reed-Solomon error correction. From low to high: LevelL, LevelM, LevelQ, LevelH.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRErrorLevel.LevelL">
      <summary>
            Allows recovery of 7% of the code text
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRErrorLevel.LevelM">
      <summary>
            Allows recovery of 15% of the code text
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRErrorLevel.LevelQ">
      <summary>
            Allows recovery of 25% of the code text
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRErrorLevel.LevelH">
      <summary>
            Allows recovery of 30% of the code text
            </summary>
    </member>
    <member name="T:Aspose.BarCode.QRVersion">
      <summary>
            Version of QR Code.
            From Version1 to Version40 for QR code and from M1 to M4 for MicroQr.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Auto">
      <summary>
            Specifies to automatically pick up the best version for QR.
            This is default value.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version01">
      <summary>
            Specifies version 1 with 21 x 21 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version02">
      <summary>
            Specifies version 2 with 25 x 25 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version03">
      <summary>
            Specifies version 3 with 29 x 29 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version04">
      <summary>
            Specifies version 4 with 33 x 33 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version05">
      <summary>
            Specifies version 5 with 37 x 37 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version06">
      <summary>
            Specifies version 6 with 41 x 41 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version07">
      <summary>
            Specifies version 7 with 45 x 45 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version08">
      <summary>
            Specifies version 8 with 49 x 49 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version09">
      <summary>
            Specifies version 9 with 53 x 53 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version10">
      <summary>
            Specifies version 10 with 57 x 57 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version11">
      <summary>
            Specifies version 11 with 61 x 61 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version12">
      <summary>
            Specifies version 12 with 65 x 65 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version13">
      <summary>
            Specifies version 13 with 69 x 69 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version14">
      <summary>
            Specifies version 14 with 73 x 73 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version15">
      <summary>
            Specifies version 15 with 77 x 77 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version16">
      <summary>
            Specifies version 16 with 81 x 81 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version17">
      <summary>
            Specifies version 17 with 85 x 85 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version18">
      <summary>
            Specifies version 18 with 89 x 89 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version19">
      <summary>
            Specifies version 19 with 93 x 93 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version20">
      <summary>
            Specifies version 20 with 97 x 97 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version21">
      <summary>
            Specifies version 21 with 101 x 101 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version22">
      <summary>
            Specifies version 22 with 105 x 105 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version23">
      <summary>
            Specifies version 23 with 109 x 109 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version24">
      <summary>
            Specifies version 24 with 113 x 113 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version25">
      <summary>
            Specifies version 25 with 117 x 117 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version26">
      <summary>
            Specifies version 26 with 121 x 121 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version27">
      <summary>
            Specifies version 27 with 125 x 125 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version28">
      <summary>
            Specifies version 28 with 129 x 129 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version29">
      <summary>
            Specifies version 29 with 133 x 133 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version30">
      <summary>
            Specifies version 30 with 137 x 137 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version31">
      <summary>
            Specifies version 31 with 141 x 141 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version32">
      <summary>
            Specifies version 32 with 145 x 145 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version33">
      <summary>
            Specifies version 33 with 149 x 149 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version34">
      <summary>
            Specifies version 34 with 153 x 153 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version35">
      <summary>
            Specifies version 35 with 157 x 157 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version36">
      <summary>
            Specifies version 36 with 161 x 161 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version37">
      <summary>
            Specifies version 37 with 165 x 165 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version38">
      <summary>
            Specifies version 38 with 169 x 169 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version39">
      <summary>
            Specifies version 39 with 173 x 173 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.Version40">
      <summary>
            Specifies version 40 with 177 x 177 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.VersionM1">
      <summary>
            Specifies version M1 for Micro QR with 11 x 11 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.VersionM2">
      <summary>
            Specifies version M2 for Micro QR with 13 x 13 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.VersionM3">
      <summary>
            Specifies version M3 for Micro QR with 15 x 15 modules.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.QRVersion.VersionM4">
      <summary>
            Specifies version M4 for Micro QR with 17 x 17 modules.
            </summary>
    </member>
    <member name="T:Aspose.BarCode.Resolution">
      <summary>
            The resolution information of the barcode image
            </summary>
    </member>
    <member name="M:Aspose.BarCode.Resolution.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.Resolution" /> class.
            </summary>
    </member>
    <member name="M:Aspose.BarCode.Resolution.#ctor(System.Single,System.Single,Aspose.BarCode.ResolutionMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.Resolution" /> class.
            </summary>
      <param name="dpix">The horizontal resolution.</param>
      <param name="dpiy">The vertical resolution.</param>
      <param name="mode">The <see cref="T:Aspose.BarCode.ResolutionMode">ResolutionMode</see>.</param>
    </member>
    <member name="M:Aspose.BarCode.Resolution.ToString">
      <summary>
            Returns a String that represents the current <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance.
            </summary>
      <returns>A <see cref="T:System.String">String</see> that represents the current Object.</returns>
    </member>
    <member name="M:Aspose.BarCode.Resolution.op_Equality(Aspose.BarCode.Resolution,Aspose.BarCode.Resolution)">
      <summary>
            Determines whether two <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances are equal.
            </summary>
      <param name="left">The <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance on the left</param>
      <param name="right">The <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance on the right</param>
      <returns>
        <b>true</b> if the left <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances is equal to the right one; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Resolution.op_Inequality(Aspose.BarCode.Resolution,Aspose.BarCode.Resolution)">
      <summary>
            Determines whether two <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances are not equal.
            </summary>
      <param name="left">The <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance on the left</param>
      <param name="right">The <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance on the right</param>
      <returns>
        <b>false</b> if the left <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances is equal to the right one; otherwise, <b>true</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Resolution.Equals(System.Object)">
      <summary>
            Determines whether two <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances are equal.
            </summary>
      <param name="obj">The <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance on the left</param>
      <returns>
        <b>true</b> if the left <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances is equal to the right one; otherwise, <b>false</b>.</returns>
    </member>
    <member name="M:Aspose.BarCode.Resolution.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>A hash code for the current Object.</returns>
    </member>
    <member name="P:Aspose.BarCode.Resolution.DpiX">
      <summary>
            Gets or sets the horizontal resolution 
            </summary>
      <exception cref="T:System.ArgumentException">
        <p>The <b>DpiX</b> parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="P:Aspose.BarCode.Resolution.DpiY">
      <summary>
            Gets or sets the vertical resolution
            </summary>
      <exception cref="T:System.ArgumentException">
        <p>The <b>DpiY</b> parameter value is less than 0.</p>
      </exception>
    </member>
    <member name="P:Aspose.BarCode.Resolution.Mode">
      <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.ResolutionMode">mode</see> of the resolution
            </summary>
    </member>
    <member name="T:Aspose.BarCode.ResolutionMode">
      <summary>
            Specifies the resolution mode used to create barcode image.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ResolutionMode.Graphics">
      <summary>
             Apply the resolution of the barcode image according to the resolution of the specified Graphics object.		
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ResolutionMode.Customized">
      <summary>
             Apply the resolution of the barcode image according to the user defined DpiX and DpiY properties.		
            </summary>
    </member>
    <member name="F:Aspose.BarCode.ResolutionMode.Printer">
      <summary>
             Apply the resolution of the barcode image according to the resolution of the specified printer.		 
            </summary>
    </member>
    <member name="T:Aspose.BarCode.RotationDirection">
      <summary>
            Rotation Direction, must be the following: Clockwise or AntiClockwise
            </summary>
    </member>
    <member name="F:Aspose.BarCode.RotationDirection.Clockwise">
      <summary>
            clock wise rotate
            </summary>
    </member>
    <member name="F:Aspose.BarCode.RotationDirection.AntiClockwise">
      <summary>
            anti clockwise rotate
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Aspose.BarCode.VisualParameters.ActualImageWidth" -->
    <member name="T:Aspose.BarCode.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.BarCode.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder that contains the Aspose component assembly.</p>
        <p>3. The folder that contains the client's calling assembly.</p>
        <p>4. The folder that contains the entry (startup) assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code><param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param></example>
    </member>
    <member name="M:Aspose.BarCode.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
      </example>
    </member>
    <member name="P:Aspose.BarCode.License.IsLicensed">
      <summary>
            Gets a value indicating whether product is licensed.
            </summary>
      <value>
        <c>true</c> if product is licensed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.BarCode.BuildVersionInfo">
      <summary>
            Contains the current build version information.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BuildVersionInfo.AssemblyVersion">
      <summary>
            The assembly version.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BuildVersionInfo.FileVersion">
      <summary>
            The file version.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BuildVersionInfo.Product">
      <summary>
            The product title.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BuildVersionInfo.ProductMajor">
      <summary>
            The major product version.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BuildVersionInfo.ProductMinor">
      <summary>
            The minor product version.
            </summary>
    </member>
    <member name="F:Aspose.BarCode.BuildVersionInfo.ReleaseDate">
      <summary>
            The product release date.
            </summary>
    </member>
  </members>
</doc>